// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  hash       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  created_by String?
  updated_by String?

  @@map("users")
}

model Customer {
  id                 String            @id @default(auto()) @map("_id") @db.ObjectId
  mobile             String            @unique
  other_mobile       Json?
  email              String?
  other_email        Json?
  source             Int
  profiling          Json?
  keys               String[]          @default([])
  profile_completion Int?
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt
  created_by         String?
  updated_by         String?
  personal_details   Personal_Details?
  keywordIDs         String[]          @db.ObjectId
  keywords           Keyword[]         @relation(fields: [keywordIDs], references: [id])
  occupationIDs      String[]          @db.ObjectId
  occupations        Occupation[]      @relation(fields: [occupationIDs], references: [id])
  vehicele_detailIDs String[]          @db.ObjectId
  vehicele_details   Vehicle_Detail[]  @relation(fields: [vehicele_detailIDs], references: [id])

  @@map("customers")
}

model Personal_Details {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  customer      Customer @relation(fields: [customer_id], references: [id])
  customer_id   String   @unique @db.ObjectId
  full_name     String?
  address       String?
  phone_number  String?
  email_address String?
  date_of_birth String?
  employment    String?
  location      String?
  anniversary   String?
}

model Keyword {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  value       String
  customerIDs String[]   @db.ObjectId
  customers   Customer[] @relation(fields: [customerIDs], references: [id])

  @@map("keywords")
}

model Occupation {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  type          String
  industry      String
  to            String
  from          String
  incomeBracket String
  customerIDs   String[]   @db.ObjectId
  customers     Customer[] @relation(fields: [customerIDs], references: [id])
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt

  @@map("occupations")
}

model Vehicle_Detail {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  vin         String
  productType String
  validity    String
  expiryDate  String
  status      String
  customerIDs String[]   @db.ObjectId
  customers   Customer[] @relation(fields: [customerIDs], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt

  @@map("vehicle_details")
}

// model age {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   customer    Customer @relation(fields: [customer_id], references: [id])
//   customer_id String   @unique @db.ObjectId
// }

// model Vehicle_Details {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   customer    Customer @relation(fields: [customer_id], references: [id])
//   customer_id String   @unique @db.ObjectId
// }

// model Sports {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   customer    Customer @relation(fields: [customer_id], references: [id])
//   customer_id String   @unique @db.ObjectId
// }

// model Health {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   customer    Customer @relation(fields: [customer_id], references: [id])
//   customer_id String   @unique @db.ObjectId
// }

// model Food_And_Restaurants {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   customer    Customer @relation(fields: [customer_id], references: [id])
//   customer_id String   @unique @db.ObjectId
// }
