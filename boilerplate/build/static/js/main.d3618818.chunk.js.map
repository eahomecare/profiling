{"version":3,"sources":["components/Profiling/assets/Avid Traveler.png","i18n.js","utils/sleep.js","redux/customerSlice.js","StyledComponents/StyledTable.jsx","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/assets/index.js","components/Profiling/StatCard.jsx","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Remarks.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","reducers","setCurrentCustomer","state","action","payload","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","response","customer","updatedCustomers","profileCompletion","_objectSpread","profile_completion","actions","StyledTable","_ref","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","_ref2","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","size","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","TableDisplay","customerList","dispatch","useDispatch","navigate","useNavigate","useMemo","accessorFn","_row$profiling","_row$profiling$person","profiling","personal_details","full_name","header","substr","accessorKey","minSize","percentage","RingProgress","thickness","sections","value","label","weight","align","Loader","type","Customers","_useSelector","useSelector","useEffect","LoadingOverlay","visible","overlayBlur","overlayColor","loaderProps","variant","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","fontFamily","fontWeight","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","links","item","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","imageURL","require","baseUrl","window","location","origin","_AvidTraveler$Fitnes","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","ta","fz","Progress","Badge","Profiling","stats","entries","assets","list","customerStats","Math","floor","random","maxLastUpdated","maxCompleted","min","getCustomerStats","Grid","Col","span","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","profile","source","Space","h","split","gender","dob","age","marital_status","Divider","email","alternate_email","phone_number","alternate_phone_number","pincode","country","address","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","_x3","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","setData","_useSelector2","rolePermission","rolesPermissionsStatus","_useSelector3","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","unknowns","setUnknowns","transformedData","category","allKeywords","unknownValues","filter","obj","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","readOnly","unknown","index","gradient","from","Interests","interests","setInterests","groupedByCategory","groupBy","interest","React","Fragment","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","_useState9","_useState10","tempEditData","setTempEditData","headerElements","headerItem","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","toString","bg","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","industry","incomeBracket","Occupation","relationship","phone","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Dashboard","submitKeywords","routesClicked","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","auth","isLoggedIn","_useState11","_useState12","useLocation","_useState13","_useState14","pathname","at","updateKeywordPayload","customerId","keywordsPayload","then","Card","Routes","Route","element","path","Notification","loading","withCloseButton","parseJwt","token","base64","replace","jsonPayload","decodeURIComponent","atob","charCodeAt","slice","join","JSON","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_ref5","_callee5","_yield$axios$post3","_context5","t0","_x4","authSlice","user","userStatus","users","setAuth","logout","localStorage","clear","defaults","headers","common","reload","setUser","access_token","_parseJwt","_id","sub","setItem","stringify","_parseJwt2","_authSlice$actions","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","_ref6","createRolesPermissionMapping","_ref7","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_yield$axios$get5","_context9","_x6","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","_rolesPermissionSlice","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","process","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","message","isModalOpen","dropdownData","Date","now","selectedCombinations","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","error","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","fetchData","fetchSources","sources","fetchCampaignNames","campaignNames","campaignSlice","selectedCampaign","selectCampaign","builder","addCase","delivered","totalSent","interested","success","failure","failed","converted","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","profileType","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectHoveredItem","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","API_ENDPOINT","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","store","configureStore","reducer","campaignManagementReducer","campaign","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","city","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","isEqual","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Remarks","Textarea","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","_useState15","_useState16","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onClose","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Modal","opened","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","agentName","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","undefined","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","isActive","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","IconRefresh","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","date","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","time","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","margin","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","combination","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","selected_user","updatedUserData","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","handleSubmit","_error$response","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","chartData","strokeDasharray","CustomerProfileAnalysis","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","profileData","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$textColor","textColor","_ref$text","isHovered","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","handleMouseLeave","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","Root","App","setColorScheme","login","getItem","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.d3618818.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory:[],\n  fetchedPofileCompleteness:false,\n  customerServiceHistoryStatus:\"idle\",\n  customerDetailsStatus:\"idle\"\n};\n\nexport const getCustomers = createAsyncThunk(\"customer/getCustomers\", async () => {\n  // await sleep(3000)\n  const { data } = await axios.get(\"/customers\");\n  return data;\n});\n\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\"customer/getCustomersProfileCompleteness\", async () => {\n  await sleep(200)\n  const { data } = await axios.get(\"/profile\");\n  return data;\n});\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  }\n);\n\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  }\n);\n\n\n\nexport const customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.customers.map(e => curr_state_obj[e.id] = e)\n      action.payload.customer_details.map(e => res_obj[e.id] = e)\n      state.customers = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getCustomers.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getCustomerDetails.pending]: (state, action) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload.response.customer;\n    },\n    [getCustomerDetails.rejected]: (state, action) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n   [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion ? action.payload.profileCompletion[customer.id] : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n\n      return {\n        ...state,\n        customers: updatedCustomers,\n        fetchedPofileCompleteness: true,\n      };\n    },\n\n    [getCustomersProfileCompleteness.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state, action) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state, action) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer } = customerSlice.actions;\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#EBDFFF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#EBDFFF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#5C00F2\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#5C00F2\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#5C00F2\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#5C00F2\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#5C00F2\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#5C00F2\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setCurrentCustomer } from \"../redux/customerSlice\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\nexport default function TableDisplay({\n  customerList,\n  fetchedPofileCompleteness,\n}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const profileCompletion = (percentage) => {\n    return (\n      <Box>\n        <RingProgress\n          size={45}\n          thickness={3}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 25\n                  ? \"#1D9B25\"\n                  : percentage > 50\n                  ? \"#CFA400\"\n                  : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </Box>\n    );\n  };\n\n  const handleRowClick = (customer) => {\n    navigate(\"/dashboard\");\n    dispatch(setCurrentCustomer(customer));\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorFn: (row) => `${row.profiling?.personal_details?.full_name}`,\n        id: \"name\",\n        header: \"Name\",\n      },\n      {\n        accessorFn: (row) => `CLID${row.id.substr(0, 6)}....`,\n        id: \"customerId\",\n        header: \"Customer Id\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 400,\n      },\n      {\n        accessorKey: \"source\",\n        header: \"Source\",\n      },\n      {\n        accessorKey: \"mobile\",\n        header: \"Mobile\",\n      },\n      {\n        accessorFn: (row) =>\n          !fetchedPofileCompleteness ? (\n            <Loader type={\"dots\"} color=\"#5C00F2\" />\n          ) : (\n            profileCompletion(row.profile_completion)\n          ),\n        id: \"profileCompletion\",\n        header: \"Profile Completion\",\n      },\n    ],\n    [fetchedPofileCompleteness],\n  );\n\n  return (\n    <Box>\n      <StyledTable\n        columns={columns}\n        data={customerList}\n        onRowClick={handleRowClick}\n      />\n    </Box>\n  );\n}\n","import { LoadingOverlay, Title } from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n\n  const { status, customers, fetchedPofileCompleteness } = useSelector(\n    (state) => state.customer,\n  );\n\n  // if(Array.isArray(customers) && customers.length > 0) setCustomerList(customers)\n\n  useEffect(() => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  }, []);\n\n  if (status === \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#EBDFFF\"}\n        loaderProps={{\n          color: \"#5C0FF2\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n            <div style={{ padding: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"20px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <span>\n                  <Title pl={5}>Customers</Title>\n                </span>\n              </div>\n              <TableDisplay\n                customerList={customers}\n                fetchedPofileCompleteness={fetchedPofileCompleteness}\n              />\n            </div>\n          </span>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #5C00F2\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F2\",\n      boxShadow: `\n          rgba(92, 0, 242, 0.06) 0px 2px 1px,\n          rgba(92, 0, 242, 0.09) 0px 4px 2px,\n          rgba(92, 0, 242, 0.09) 0px 8px 4px,\n          rgba(92, 0, 242, 0.09) 0px 16px 8px,\n          rgba(92, 0, 242, 0.09) 0px 32px 16px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(235, 223, 255, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(235, 223, 255, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F290\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#5C00F2\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  {\n    link: \"Financial Information\",\n    label: \"Financial Information\",\n    icon: <IconReportMoney />,\n  },\n  {\n    link: \"Insurance Details\",\n    label: \"Insurance Details  \",\n    icon: <IconCarCrash />,\n  },\n  { link: \"Vehicle\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const links = data.map((item) => (\n    <NavLink\n      className={cx(classes.link, {\n        [classes.linkActive]: item.label === active,\n      })}\n      icon={item.icon}\n      component={Link}\n      variant=\"subtle\"\n      to={item.link}\n      label={item.label}\n      key={item.label}\n      onClick={(event) => {\n        setActive(item.label);\n      }}\n    />\n  ));\n\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to=\"/customers\"\n            c=\"#5C00F2\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","\nconst imageURL = require('./Avid Traveler.png');\nconst baseUrl = window.location.origin;\nconst finalImageUrl = baseUrl + imageURL;\n\nconsole.log(baseUrl,imageURL.default);\n\n\n\n// export default {\n//     [`Avid Traveler`]: new URL('./Avid Traveler.png', import.meta.url).href,\n//     [`Fitness Freak`]: new URL('./Fitness Freak.png', import.meta.url).href,\n//     [`Foodie`]: new URL('./Foodie.png', import.meta.url).href,\n//     [`Sports Fan`]: new URL('./Sports Fan.png', import.meta.url).href,\n//     [`Techie`]: new URL('./Techie.png', import.meta.url).href,\n// }\n\nexport default {\n    [`Avid Traveler`]: \"\",\n    [`Fitness Freak`]: \"\",\n    [`Foodie`]:\"\",\n    [`Sports Fan`]: \"\",\n    [`Techie`]:\"\",\n}\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    {percentage}%\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group>\n        </Paper>\n    );\n}","import { Grid } from '@mantine/core'\nimport assets from './assets'\nimport { StatsCard } from './StatCard'\n\nconst Profiling = () => {\n\n    const assetList = Object.entries(assets)\n    const stats = assetList.map((list) => {\n        const title = list[0]\n        const url = list[1]\n        function getCustomerStats() {\n            const frequency = Math.floor(Math.random() * 16); // A random frequency per month between 0 and 15\n            const maxLastUpdated = Math.floor((1 - frequency / 15) * 30);\n            const lastUpdated = Math.floor(Math.random() * (maxLastUpdated + 1)); // A random value between 0 and maxLastUpdated, representing the number of days ago\n            const maxCompleted = Math.min(Math.floor((30 - lastUpdated) * (frequency / 30) * 100), 100);\n            const percentageCompleted = Math.floor(Math.random() * (maxCompleted + 1)); // A random percentage between 0 and maxCompleted\n\n            return [frequency, percentageCompleted, lastUpdated];\n        }\n\n        const customerStats = getCustomerStats();\n        console.log(customerStats);\n        return (<>\n            <Grid.Col span={4}>\n                <StatsCard title={title} url={url} percentage={customerStats[1]} frequency={customerStats[0]} lastUpdated={customerStats[2]} />\n            </Grid.Col>\n        </>)\n    })\n    return (\n        <>\n            <Grid gutter=\"xl\">\n                {stats}\n            </Grid>\n        </>\n    )\n}\n\nexport default Profiling","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState } from \"react\";\nimport InfoTag from \"./InfoTag\";\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n\n  const profileCompletion = (percentage) => {\n    return (\n      <div>\n        <Center>\n          <RingProgress\n            mt={50}\n            size={80}\n            thickness={5}\n            sections={[\n              {\n                value: percentage,\n                color:\n                  percentage > 75\n                    ? \"#1D9B25\"\n                    : percentage > 60\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n              },\n            ]}\n            label={\n              <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                {percentage}%\n              </Text>\n            }\n          />\n        </Center>\n      </div>\n    );\n  };\n  return (\n    <>\n      <Container mt={-80}>\n        <Group grow position=\"apart\">\n          <Text mt={70} fw={500}>\n            Basic Details\n          </Text>\n          <Space h={40} />\n          <div>\n            <Space h={40} />\n            {profileCompletion(profile_completion)}\n          </div>\n        </Group>\n        <div style={{ marginTop: \"-30px\" }}>\n          {/* <InfoTag title={'Picture'} subject={<Avatar radius={'xl'} size='xl' />} /> */}\n          <Grid gutter=\"xl\" pt={\"sm\"}>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"First Name\"}\n                subject={profile.full_name.split(\" \")[0]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Last Name\"}\n                subject={profile.full_name.split(\" \")[1]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Gender\"} subject={profile.gender} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Date of birth\"} subject={profile.dob} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Age\"} subject={profile.age} />\n            </Grid.Col>\n          </Grid>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Marital Status\"}\n                subject={profile.marital_status}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Source\"} subject={source} />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Contact Details</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag title={\"Email Address\"} subject={profile.email} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Email\"}\n                subject={profile.alternate_email}\n              />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Mobile Number\"}\n                subject={profile.alternate_phone_number}\n              />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Address</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag title={\"Location(city)\"} subject={profile.location} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"State\"} subject={profile.state} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"PINCODE\"} subject={profile.pincode} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Country\"} subject={profile.country} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Address Line\"} subject={profile.address} />\n            </Grid.Col>\n          </Grid>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div>\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\nconst Interests = () => {\n    const dispatch = useDispatch()\n    const { status, customerDetails } = useSelector((state) => state.customer);\n    const { customerKeywords,customerKeywordsStatus } = useSelector((state) => state.keyword);\n    const [interests,setInterests] = useState([])\n\n\n    \n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      return { category, values: _.map(values, 'value') };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n  \n  useEffect(() => {\n    if( customerKeywordsStatus == 'success' ){\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n    { customerKeywordsStatus == 'success' ?\n    <>\n      {interests.map((interest) => (\n  <React.Fragment key={interest.category}>\n    <Text fw={700}>{interest.category}</Text>\n    {interest.values.map((value) => (\n      <Badge\n        key={value}\n        variant=\"gradient\"\n        gradient={{ from: 'indigo', to: 'cyan' }}\n      >\n        {value}\n      </Badge>\n    ))}\n  </React.Fragment>\n))}\n    </> :\n    <>Loading interests...</>\n    }\n     \n        \n        </>\n  \n    )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  useEffect(() => {\n    if (\n      routesClicked.at(-2) &&\n      routesClicked.at(-2) === \"/dashboard/keywords\"\n    ) {\n      const updateKeywordPayload = {\n        customerId: customerDetails.id,\n        keywordsPayload: keywordValues,\n      };\n\n      setNotification(true);\n      sleep(5000).then((data) => setNotification(false));\n\n      dispatch(updateKeywords(updateKeywordPayload));\n    }\n  }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Card shadow={\"lg\"} radius={\"md\"}>\n              <Routes>\n                <Route>\n                  <Route\n                    index\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route\n                    path=\"/personalInformation\"\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route path=\"/profiling\" element={<Profiling />} />\n                  <Route\n                    path=\"/keywords\"\n                    element={\n                      <KeywordsEntry\n                        submitKeywords={submitKeywords}\n                        updateKeywordValuesParent={updateKeywordValuesParent}\n                      />\n                    }\n                  />\n\n                  <Route path=\"/interests\" element={<Interests />} />\n                  <Route path=\"/occupation\" element={<Occupation />} />\n                  <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                  <Route path=\"/activity\" element={<Activity />} />\n                </Route>\n              </Routes>\n            </Card>\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Background Syncing\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n    'campaignManagement/fetchRowData',\n    async (_, { getState }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n        const responses = [];\n        let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n        for (const rowKey of Object.keys(state.rows)) {\n            const row = state.rows[rowKey];\n            if (!row.first || !row.second || !row.third) {\n                throw new Error(\"Row has empty/default values. Fetching aborted.\");\n            }\n\n            const body = {\n                information_type: row.first.toLowerCase().split(' ').join('_'),\n                category: row.second.toLowerCase().split(' ').join('_'),\n                value: row.third.toLowerCase().split(' ').join('_')\n            };\n\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            const data = await response.json();\n            const customerIDsForThisRow = data.map(customer => customer.id);\n\n            if (commonCustomerIDs === null) {\n                commonCustomerIDs = new Set(customerIDsForThisRow);\n            } else {\n                commonCustomerIDs = new Set([...commonCustomerIDs].filter(id => customerIDsForThisRow.includes(id)));\n            }\n\n            responses.push({\n                rowKey,\n                figures: commonCustomerIDs.size,\n                customerIDs: [...commonCustomerIDs]\n            });\n        }\n        return responses;\n    }\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n    'campaignManagement/fetchFiguresForRow',\n    async (rowId, { getState }) => {\n        const state = getState().campaignManagement;\n        const row = state.rows[rowId];\n        if (!row || !row.first || !row.second || !row.third) {\n            throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n        }\n\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n        const body = {\n            information_type: row.first.toLowerCase().split(' ').join('_'),\n            category: row.second.toLowerCase().split(' ').join('_'),\n            value: row.third.toLowerCase().split(' ').join('_')\n        };\n\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        });\n\n        const data = await response.json();\n        const customerIDsForThisRow = data.map(customer => customer.id);\n\n        // Retrieve customer IDs from all preceding rows\n        let commonCustomerIDs = customerIDsForThisRow;\n        for (const otherRowId of Object.keys(state.rows)) {\n            if (Number(otherRowId) < Number(rowId)) {\n                const otherRow = state.rows[otherRowId];\n                commonCustomerIDs = commonCustomerIDs.filter(id => otherRow.customerIDs.includes(id));\n            }\n        }\n\n        return { rowId, figures: commonCustomerIDs.length, customerIDs: commonCustomerIDs };\n    }\n);\n\nexport const createCampaign = createAsyncThunk(\n    'campaignManagement/createCampaign',\n    async (_, { getState, rejectWithValue }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n        const body = {\n            name: state.eventName,\n            eventBased: true,\n            triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n            type: \"EMAIL\",\n            recurrenceType: state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n            start: state.tabData.Email.timelineState.startDate,\n            end: state.tabData.Email.timelineState.endDate,\n            templateText: state.tabData.Email.content,\n            customerIDs: state.allCustomerIDs\n        };\n\n        console.log('Publish body', body)\n\n        try {\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            console.log('response', response)\n\n            if (!response.ok) {\n                throw new Error('Failed to create campaign');\n            }\n\n            return response.json();\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst initialState = {\n    isModalOpen: false,\n    dropdownData: {\n        \"Personal Information\": {\n            \"Age\": [\"25-30\", \"31-35\"],\n            \"Gender\": [\"Male\", \"Female\"],\n            \"Marital Status\": [\"Single\", \"Married\"],\n            \"Location\": [\"Delhi\", \"Mumbai\"],\n        },\n        \"Interests\": {},\n        \"Occupation\": '',\n        \"Activity\": '',\n        \"Family Details\": '',\n        \"Financial Information\": '',\n        \"Insurance Details\": '',\n        \"Vehicle\": '',\n        \"Health\": '',\n    },\n    rows: {\n        [Date.now().toString()]: {\n            first: \"\",\n            second: \"\",\n            third: \"\",\n            figures: null,\n            customerIDs: []\n        }\n    },\n    allCustomerIDs: [],\n    selectedCombinations: [],\n    eventName: \"\",\n    eventDate: null,\n    step: 1,\n    activeTab: 'Email',\n    startDate: null,\n    endDate: null,\n    tabData: {\n        Email: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 500\n        },\n        SMS: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 160\n        },\n        Notification: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 250\n        },\n        Whatsapp: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 2000\n        }\n    },\n    radarData: [\n        { count: 120, subject: 'EZ-Auto' },\n        { count: 98, subject: 'Cyberior' },\n        { count: 86, subject: 'Homecare' },\n        { count: 99, subject: 'E-Portal 2.0' },\n        { count: 85, subject: 'EZ-Travel' },\n    ],\n    downloadDataStatus: null,\n    error: null,\n    rowIdsArray: [],\n    loadingStates: {},\n    errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n    name: \"campaignManagement\",\n    initialState,\n    reducers: {\n        toggleModal: (state, action) => {\n            state.isModalOpen = action.payload;\n        },\n        updateDropdownData: (state, action) => {\n            state.dropdownData = action.payload;\n        },\n        updateRows: (state, action) => {\n            state.rows = action.payload;\n            state.rowIdsArray = [];\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        updateSelectedCombinations: (state, action) => {\n            state.selectedCombinations = action.payload;\n        },\n        setCampaignName: (state, action) => {\n            state.campaignName = action.payload;\n        },\n        setEventName: (state, action) => {\n            state.eventName = action.payload;\n        },\n        setEventDate: (state, action) => {\n            state.eventDate = action.payload;\n        },\n        setStep: (state, action) => {\n            state.step = action.payload;\n        },\n        setStartDate: (state, action) => {\n            state.startDate = action.payload;\n        },\n        setEndDate: (state, action) => {\n            state.endDate = action.payload;\n            state.eventDate = action.payload;\n        },\n        setActiveTab: (state, action) => {\n            state.activeTab = action.payload;\n        },\n        updateTabData: (state, action) => {\n            state.tabData = action.payload;\n        },\n        setRadarData: (state, action) => {\n            state.radarData = action.payload;\n        },\n        resetModal: (state) => {\n            state.step = initialState.step;\n            state.campaignName = initialState.campaignName;\n            state.eventName = initialState.eventName;\n            state.activeTab = initialState.activeTab;\n            state.tabData = initialState.tabData;\n            state.eventDate = initialState.eventDate\n        },\n    },\n    extraReducers: {\n        [fetchRowData.pending]: (state) => {\n            state.downloadDataStatus = 'loading';\n        },\n        [fetchRowData.fulfilled]: (state, action) => {\n            state.downloadDataStatus = 'success';\n\n            action.payload.forEach(item => {\n                state.rows[item.rowKey].figures = item.figures;\n                state.rows[item.rowKey].customerIDs = item.customerIDs;\n            });\n\n            state.rowIdsArray = [...new Set([...state.rowIdsArray, ...action.payload.map(item => item.rowKey)])];\n\n            const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n            state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n        },\n        [fetchRowData.rejected]: (state, action) => {\n            state.downloadDataStatus = 'failed';\n            state.error = action.error.message;\n        },\n        [fetchFiguresForRow.pending]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'loading';\n            state.errors[rowId] = null;\n        },\n        [fetchFiguresForRow.fulfilled]: (state, action) => {\n            const { rowId, figures, customerIDs } = action.payload;\n            state.rows[rowId].figures = figures;\n            state.rows[rowId].customerIDs = customerIDs;\n            state.loadingStates[rowId] = 'loaded';\n\n            const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n            if (Number(rowId) === lastRowId) {\n                state.allCustomerIDs = [...customerIDs];\n            }\n        },\n        [fetchFiguresForRow.rejected]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'error';\n            state.errors[rowId] = action.error.message;\n        }\n    }\n});\n\nexport const {\n    toggleModal,\n    updateDropdownData,\n    updateRows,\n    updateSelectedCombinations,\n    setCampaignName,\n    setEventName,\n    setEventDate,\n    setStep,\n    setStartDate,\n    setEndDate,\n    setActiveTab,\n    updateTabData,\n    setRadarData,\n    resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nexport const fetchSources = createAsyncThunk(\n  \"campaign/fetchSources\",\n  async () => {\n    const response = {\n      sources: [],\n    };\n    return response.sources;\n  },\n);\n\nexport const fetchCampaignNames = createAsyncThunk(\n  \"campaign/fetchCampaignNames\",\n  async () => {\n    const response = {\n      campaignNames: [],\n    };\n    return response.campaignNames;\n  },\n);\n\nconst initialState = {\n  data: [],\n  sources: [\"Homecare\", \"Cyberior\", \"EZ-Auto\", \"EZ-Travel\", \"E-Portal 2.0\"],\n  campaignNames: [\"Campaign 1\", \"Campaign 2\", \"Campaign 3\"],\n  selectedCampaign: \"All\",\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaign = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload.map((item) => ({\n          name: item.campaignName,\n          delivered: item.totalSent,\n          interested: item.success,\n          failure: item.failed,\n          converted: 0,\n        }));\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      })\n      .addCase(fetchSources.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.sources = action.payload;\n        }\n      })\n      .addCase(fetchCampaignNames.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.campaignNames = action.payload;\n        }\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async () => {\n    const response = await fetch(API_ENDPOINT);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async () => {\n    const response = await fetch(API_ENDPOINT);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F299\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#5C00F299\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#5C00F299\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#EBDFFF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n        border: \"1px solid #5C00F2\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n      navigate(\"/\");\n    }\n  }, [status, navigate]);\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#EBDFFF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#5C00F2\", to: \"#EBDFFF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#5C00F2\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#5c00f2\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#5c00f2\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#5c00f2\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton\n        //       compact\n        //       onClick={() => {\n        //         console.log(\"Create Permission clicked!\");\n        //       }}\n        //     >\n        //       Create Permission\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#5C00F2\" },\n    label: {\n      color: \"#5C00F299\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#EBDFFF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#5C00F2\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#5C00F2\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#5C00F299\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F299\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F299\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#5C00F2\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#5C0FF2\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n        const currentCombination = {\n          first: row.first,\n          second: row.second,\n          third: row.first === \"Interests\" ? option.value : option,\n        };\n\n        const isSelectedCombination = selectedCombinations.some(\n          (selected) =>\n            selected.first === currentCombination.first &&\n            selected.second === currentCombination.second &&\n            (row.first === \"Interests\"\n              ? selected.third.value\n              : selected.third) === currentCombination.third,\n        );\n\n        const isSelectedInCurrentRow = selectedCombinations.some(\n          (selected) =>\n            selected.rowId === rowId &&\n            selected.first === currentCombination.first &&\n            selected.second === currentCombination.second &&\n            (row.first === \"Interests\"\n              ? selected.third.value\n              : selected.third) === currentCombination.third,\n        );\n\n        return !isSelectedCombination || isSelectedInCurrentRow;\n      })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#5C00F2\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#5C00F2\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#5C00F2\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#5C00F2\"\n          fill=\"#5C00F2\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#5C00F2\" },\n    label: {\n      color: \"#5C00F299\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#EBDFFF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#5C00F2\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#5C00F2\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#EBDFFF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n        border: \"1px solid #5C00F2\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n      \"&:hover\": {\n        border: \"2px solid #5C00F2\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#5C00F2\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#5C00F2\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#5C00F2\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#5C00F2\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#5C00F2\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#5C00F2\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#5C00F2\"}\n                      bg={activeTab === tab ? \"#5C00F2\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#EBDFFF\",\n                          color: \"#5C00F2\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${\n                      activeTab === tab ? \"show active\" : \"\"\n                    }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                            <div className=\"character-limit-error\">\n                              Character limit exceeded!\n                            </div>\n                          )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#EBDFFF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import {\n  ActionIcon,\n  Box,\n  Flex,\n  Select,\n  Text,\n  Title,\n  Loader,\n  Group,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  fetchData,\n  fetchSources,\n  fetchCampaignNames,\n  selectCampaign,\n} from \"../../redux/campaignSlice\";\nimport { Link } from \"react-router-dom\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector((state) => state.campaign.data);\n  const sources = useSelector((state) => state.campaign.sources);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n      dispatch(fetchSources());\n      dispatch(fetchCampaignNames());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#5C0FF2\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              data={[\"All\", ...campaignNames]}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={(value) => dispatch(selectCampaign(value))}\n            />\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Source(s)</Text>}\n              data={sources}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"name\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#EBDFFF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#5C00F2\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#5C00F2\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#5C00F2\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#EBDFFF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#5C00F2\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#5C00F2\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#5C00F2\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n        </Grid>\n\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Stack>\n            <Flex c={\"#5C00F2\"} justify={\"space-between\"}>\n              <Text fw={\"bold\"}>Communications</Text>\n              <Center>\n                <ActionIcon c={\"#5C00F2\"}>\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"}>Export</Text>\n              </Center>\n            </Flex>\n            <Box>\n              <VerticalBarChart />\n            </Box>\n          </Stack>\n        </Card>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(keywords, keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n              ...updatedDropdownData[keyword.category],\n              { label: keyword.value, value: keyword.id },\n            ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#5C00F2\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#5C00F2\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#5C00F2\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#5C00F2\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F2\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#EBDFFF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#EBDFFF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#EBDFFF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#5C00F2\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#5C00F2\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#EBDFFF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #5C00F2\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F2\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F290\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#5C00F2\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#8C53E7,#5C00F2)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#5C0FF2)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          radius={\"md\"}\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            boxShadow: `\n    rgba(92, 0, 242, 0.17) 0px -23px 25px 0px inset,\n    rgba(92, 0, 242, 0.15) 0px -36px 30px 0px inset,\n    rgba(92, 0, 242, 0.1) 0px -79px 40px 0px inset,\n    rgba(92, 0, 242, 0.06) 0px 2px 1px,\n    rgba(92, 0, 242, 0.09) 0px 4px 2px,\n    rgba(92, 0, 242, 0.09) 0px 8px 4px,\n    rgba(92, 0, 242, 0.09) 0px 16px 8px,\n    rgba(92, 0, 242, 0.09) 0px 32px 16px\n`,\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n                />\n              )}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#EBDFFF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#EBDFFF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          {value}\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#EBDFFF\"}\n        loaderProps={{\n          color: \"#5C0FF2\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n          // topProps={() => (\n          //   <Flex>\n          //     <StyledButton compact onClick={handleAddUserModal}>\n          //       + Create User\n          //     </StyledButton>\n          //   </Flex>\n          // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#5C00F2\">\n            My Profile\n          </Title>\n          <Divider c=\"#5C00F2\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#5C00F2\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#5C00F2\",\n                      \"&:hover\": {\n                        backgroundColor: \"#EBDFFF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#5C00F2\",\n                  color: \"#5C00F2\",\n                  \"&:hover\": {\n                    backgroundColor: \"#EBDFFF\",\n                    color: \"#5C00F2\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#5C00F2\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#5C00F2\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#5C00F2\">\n          Change Password\n        </Title>\n        <Divider c=\"#5C00F2\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#5C00F2\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#5C00F2\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = () => {\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData());\n  }, [dispatch]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\n\nconst CustomerProfileAnalysis = () => {\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"Test\"]}\n            />\n            <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group>\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = () => {\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount());\n  }, [dispatch]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"Test\"]}\n            />\n            <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group>\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      onMouseEnter={() => dispatch(setHoveredItem(text))}\n      onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  const dispatch = useDispatch();\n  const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#EBDFFF\"}\n      mah={300}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#5C00F2\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#5C00F2\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            onMouseEnter={() => handleMouseEnter(entry.name)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                sx={{\n                  transition: \"transform 0.3s ease\",\n                  transform:\n                    hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                  backgroundImage:\n                    hoveredItem === entry.name\n                      ? \"radial-gradient(#000000 20% ,#5C0FF2)\"\n                      : \"none\",\n                }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Card shadow={\"lg\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n              Profile\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={4}>\n          <Stack>\n            <StyledSelect\n              disabled={status === \"loading\"}\n              label={\"Profile\"}\n              placeholder={\"Select Profile(s)\"}\n              data={profileOptions}\n              onChange={(value) => setSelectedProfile(value)}\n            />\n            <StyledSelect\n              disabled={status === \"loading\"}\n              label={\"Demographics\"}\n              placeholder={\"Select Main Demographics\"}\n              data={demographicOptions}\n              onChange={(value) => setSelectedDemographic(value)}\n            />\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={4}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfilePieChart />\n            )}\n          </Center>\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfileDataCard />\n            )}\n          </Center>\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#5C00F2\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {/* {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/\" element={<BoardStats />} />\n              ) : (\n                <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n              )} */}\n              <PrivateRoute path=\"/\" element={<Root />} />\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/users\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}