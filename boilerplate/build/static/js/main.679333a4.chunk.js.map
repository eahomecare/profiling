{"version":3,"sources":["components/Profiling/assets/Avid Traveler.png","i18n.js","redux/authSlice.js","components/LightDarkButton.jsx","utils/sleep.js","redux/customerSlice.js","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/assets/index.js","components/Profiling/StatCard.jsx","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","pages/Dashboard/Dashboard.jsx","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Remarks.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/Campaign/components/ViewCampaigns/BarStackedCampaign.jsx","pages/Campaign/components/Analysis/Analysis.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","loginUser","createAsyncThunk","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userData","_yield$axios$post","data","wrap","_context","prev","next","axios","post","sent","abrupt","stop","_x","apply","arguments","registerUser","_ref2","_callee2","_yield$axios$post2","_context2","_x2","getProfile","_ref3","_callee3","id","_yield$axios$get","_context3","get","_x3","getUsers","_callee4","_yield$axios$get2","_context4","authSlice","createSlice","name","initialState","status","isLoggedIn","user","profile","userStatus","users","reducers","setAuth","state","action","payload","logout","localStorage","clear","defaults","headers","common","setUser","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","access_token","_parseJwt","email","_id","sub","setItem","stringify","rejected","_parseJwt2","console","log","_authSlice$actions","actions","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","colorScheme","toggleColorScheme","dark","_jsx","ActionIcon","variant","color","onClick","title","children","IconSun","size","IconMoonStars","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","getCustomersProfileCompleteness","getCustomerDetails","_yield$axios$get3","getCustomerServicesHistory","_ref4","_yield$axios$get4","customerSlice","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","setCurrentCustomer","curr_state_obj","res_obj","e","customer_details","Object","values","assign","response","customer","updatedCustomers","profileCompletion","_objectSpread","profile_completion","TableDisplay","customerList","dispatch","useDispatch","_useSelector","useSelector","navigate","useNavigate","rows","_customer$profiling","_customer$profiling$p","percentage","_jsxs","Flex","profiling","personal_details","full_name","substr","source","mobile","Center","RingProgress","thickness","sections","value","label","Text","weight","align","Loader","Button","gradient","from","to","buttonClick","Card","shadow","Table","highlightOnHover","fw","fz","Customers","useEffect","LoadingOverlay","visible","overlayBlur","loaderProps","_Fragment","Header","height","base","md","p","withBorder","m","style","display","alignItems","justifyContent","deg","sx","fontFamily","ta","mt","TextInput","placeholder","mb","icon","IconSearch","stroke","radius","rightSection","IconAdjustmentsHorizontal","Navbar","width","Space","h","Stack","Link","IconSettings","Icon3dCubeSphere","IconAccessible","IconLayoutAlignBottom","IconAnalyze","IconArrowBadgeDown","flexGrow","padding","marginBottom","marginTop","Title","pl","Container","w","ml","IconChevronLeft","IconChevronRight","Register","my","theme","fontWeight","component","Paper","required","PasswordInput","Group","position","Checkbox","lineHeight","fullWidth","useStyles","createStyles","link","fn","focusStyles","textDecoration","fontSize","fontSizes","sm","colors","gray","borderRadius","backgroundColor","white","getStylesRef","black","linkIcon","ref","marginRight","spacing","linkActive","primaryColor","IconUser","IconCircleKey","IconTimeline","IconPalette","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","opened","_useStyles","setOpened","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","useMantineTheme","links","item","NavLink","className","event","navbar","hiddenBreakpoint","hidden","lg","bg","Section","grow","IconArrowNarrowLeft","imageURL","require","baseUrl","location","origin","default","_AvidTraveler$Fitnes","ICON_SIZE","rem","card","overflow","xl","paddingTop","top","left","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","Progress","Badge","Profiling","stats","entries","assets","list","customerStats","Math","floor","random","maxLastUpdated","maxCompleted","min","getCustomerStats","Grid","Col","span","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","pt","gender","dob","age","marital_status","Divider","alternate_email","phone_number","alternate_phone_number","pincode","country","address","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","KeywordsEntry","updateKeywordValuesParent","setData","_useSelector2","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","unknowns","setUnknowns","transformedData","useMemo","_","category","allKeywords","unknownValues","filter","obj","handleSearchChange","debounce","MultiSelect","onChange","searchable","clearable","creatable","getCreateLabel","onCreate","current","_toConsumableArray","unknown","index","Interests","interests","setInterests","groupedByCategory","groupBy","interest","React","Fragment","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","_useState9","_useState10","tempEditData","setTempEditData","headerElements","headerItem","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","Box","cursor","IconTrash","IconPlus","ScrollArea","maxHeight","type","industry","incomeBracket","Occupation","relationship","phone","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Array","isArray","Dashboard","submitKeywords","routesClicked","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","auth","_useState11","_useState12","useLocation","_useState13","_useState14","pathname","at","updateKeywordPayload","then","AppShell","styles","main","background","navbarOffsetBreakpoint","asideOffsetBreakpoint","fixed","header","MediaQuery","largerThan","Burger","o","mr","mih","Routes","Route","element","path","Notification","loading","withCloseButton","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","_ref5","createPermission","_ref7","_ref6","createRolesPermissionMapping","_ref8","_callee5","_yield$axios$post3","_context5","_x4","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref11","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref12","_callee9","userId","_yield$axios$get5","_context9","_x6","rolesPermissionSlice","rolesPermissionsStatus","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","roles","permissions","userRoles","userPermissions","permissionsByRole","getUserRolesPermissionsByMapping","role","push","permission","fetchRowData","getState","endpoint","responses","_i","_Object$keys","rowKey","row","body","figures","customerIDsForThisRow","campaignManagement","process","first","second","third","Error","information_type","toLowerCase","fetch","method","json","customerIDs","fetchFiguresForRow","createCampaign","rejectWithValue","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","t0","message","isModalOpen","dropdownData","Date","now","selectedCombinations","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","error","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","Set","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","fetchData","fetchSources","sources","fetchCampaignNames","campaignNames","campaignSlice","contactability","interested","converted","over","total","builder","addCase","store","configureStore","reducer","rolePermission","campaignManagementReducer","campaign","campaignReducer","PrivateRoute","props","_objectWithoutProperties","_excluded","Navigate","Login","setEmail","password","setPassword","BackgroundImage","loginImage","pr","IconArrowRight","Image","eaLogo","target","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","backgroundImage","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","customerId","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","city","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","disabled","bottom","xs","right","zIndex","transform","border","allowFullScreen","ProfileCard","onDetailChange","editable","justify","input","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","isEqual","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","transition","timingFunction","flexDirection","Remarks","Textarea","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","i","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","text","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","_useState15","_useState16","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onClose","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","some","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Modal","prevProfile","Acl","borderBottom","scrolled","boxShadow","shadows","setScrolled","setIsModalOpen","selectedUser","setSelectedUser","selectedRole","setSelectedRole","selectedPermission","setSelectedPermission","selectedUserRoleName","setSelectedUserRoleName","userBySelectedId","x","rolename","permissionname","username","isactive","isActive","created_at","handleModalClose","Select","agentName","rolesPermission","dropdownComponent","onScrollPositionChange","y","miw","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconChevronDown","rightSectionWidth","pointerEvents","IconExclamationMark","IconRefresh","Step1","evt","DatePickerInput","popoverProps","withinPortal","IconCalendar","date","minDate","CustomDate","setSelectedDate","CustomTime","setSelectedTime","timeSelected","pickerControl","_ref$current","showPicker","IconClock","TimeInput","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","time","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","root","htmlFor","DatePicker","dateFormat","updatedValue","handleDailyFrequencyChange","day","updatedDays","d","handleWeeklyDaysChange","freq","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","borderColor","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","readOnly","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","alt","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","fill","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","fillOpacity","Demographic","reduce","acc","curr","BarStackedView","BarChart","margin","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","LabelList","Analysis","updatedDropdownData","finalDropdownData","dropdown","updatedRows","updatedCombinations","thirdValue","opt","combination","updatedSelectedCombinations","overflowY","App","setColorScheme","hasPermission","permissionName","login","getItem","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","createTheme","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","ThemeProvider","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.679333a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      console.log(action.payload);\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { ActionIcon, useMantineColorScheme } from '@mantine/core';\nimport { IconSun, IconMoonStars } from '@tabler/icons-react';\nimport React from 'react';\n\nexport default function LightDarkButton() {\n    const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n    const dark = colorScheme === 'dark';\n\n    return (\n        <ActionIcon\n            variant=\"outline\"\n            color={dark ? 'yellow' : 'blue'}\n            onClick={() => toggleColorScheme()}\n            title=\"Toggle color scheme\"\n        >\n            {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n        </ActionIcon>\n    );\n}","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory:[],\n  fetchedPofileCompleteness:false,\n  customerServiceHistoryStatus:\"idle\",\n  customerDetailsStatus:\"idle\"\n};\n\nexport const getCustomers = createAsyncThunk(\"customer/getCustomers\", async () => {\n  // await sleep(3000)\n  const { data } = await axios.get(\"/customers\");\n  return data;\n});\n\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\"customer/getCustomersProfileCompleteness\", async () => {\n  await sleep(200)\n  const { data } = await axios.get(\"/profile\");\n  return data;\n});\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  }\n);\n\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  }\n);\n\n\n\nexport const customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.customers.map(e => curr_state_obj[e.id] = e)\n      action.payload.customer_details.map(e => res_obj[e.id] = e)\n      state.customers = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getCustomers.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getCustomerDetails.pending]: (state, action) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload.response.customer;\n    },\n    [getCustomerDetails.rejected]: (state, action) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n   [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion ? action.payload.profileCompletion[customer.id] : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n\n      return {\n        ...state,\n        customers: updatedCustomers,\n        fetchedPofileCompleteness: true,\n      };\n    },\n\n    [getCustomersProfileCompleteness.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state, action) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state, action) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer } = customerSlice.actions;\n","import { Button, Card, Center, Container, Flex, RingProgress, Table, Text } from '@mantine/core';\nimport { setCurrentCustomer } from '../redux/customerSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Loader } from '@mantine/core';\n\n\n\n\nexport default function TableDisplay({ customerList ,fetchedPofileCompleteness}) {\n  const dispatch = useDispatch();\n  const { status, customerDetails } = useSelector(state => state.customer);\n\n  \n\n  // const { customer_details } = customerList\n  // const { customerContext, setCustomerContext } = useContext(CustomerContext)\n  const navigate = useNavigate()\n\n  const profileCompletion = (percentage) => {\n    return (\n      <div>\n        <Center>\n          <RingProgress\n            size={50}\n            thickness={5}\n            sections={[{ value: percentage, color: (percentage > 25 ? '#1D9B25' : percentage > 50 ? '#CFA400' : '#D85972') }]}\n            label={\n              <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                {percentage}%\n              </Text>\n            }\n          />\n        </Center>\n      </div>\n    )\n  }\n\n  const buttonClick = (customer) => {\n    // setCustomerContext(customer)\n    navigate('/dashboard')\n    dispatch(setCurrentCustomer(customer))\n\n  }\n\n\n\n\n\n  const rows = customerList.map((customer) => {\n    \n\n\n\n    return (\n      <tr key={customer.id}>\n        <td><Flex>{customer.profiling?.personal_details?.full_name}</Flex></td>\n        <td><Flex>{'CLID' + customer.id.substr(0, 6) + '....'}</Flex></td>\n        <td><Flex>{customer.email}</Flex></td>\n        <td><Flex>{customer.source}</Flex></td>\n        <td><Flex>{customer.mobile}</Flex></td>\n        <td><Flex>{!fetchedPofileCompleteness? <Loader/>: profileCompletion(customer.profile_completion)}</Flex></td>\n        <td>\n          <Button\n            // color={'#DDE5FF'}\n            // variant={'light'}\n            variant={'gradient'}\n            gradient={{ from: 'indigo', to: 'cyan' }}\n            onClick={() => buttonClick(customer)}>\n            View\n          </Button>\n        </td>\n      </tr>\n    )\n  }\n  );\n\n  return (\n    <Card shadow={'md'}>\n      <Table highlightOnHover>\n        <thead>\n          <tr>\n            <th><Flex><Text fw={900} fz={17}>Name</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Customer Id</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Email</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Source</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Mobile</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Profile Completion</Text></Flex></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </Card>\n  );\n}","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport { useEffect, useState } from \"react\"\nimport LightDarkButton from \"../../components/LightDarkButton\"\nimport { getCustomers, getCustomersProfileCompleteness } from \"../../redux/customerSlice\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\"\nimport { Link } from \"react-router-dom\";\n\n\n\nconst Customers = () => {\n\n\n    const dispatch = useDispatch();\n\n    const { status, customers, fetchedPofileCompleteness } = useSelector(state => state.customer);\n\n    // if(Array.isArray(customers) && customers.length > 0) setCustomerList(customers)\n\n    useEffect(() => {\n        dispatch(getCustomers());\n        dispatch(getCustomersProfileCompleteness())\n    }, []);\n\n\n\n\n    if (status === 'loading') {\n        return (\n            <LoadingOverlay visible overlayBlur={2}\n                loaderProps={{\n                    size: 'xl',\n                    variant: 'dots'\n                }}\n            />\n        )\n    }\n    else {\n        return (\n            <>\n                <Header height={{ base: 50, md: 70 }} p=\"md\" withBorder={false} m={'md'}>\n                    <div style={{ display: 'flex', alignItems: 'center', height: '100%', justifyContent: 'space-between' }}>\n                        <Text\n                            variant=\"gradient\"\n                            gradient={{ from: 'indigo', to: 'cyan', deg: 45 }}\n                            sx={{ fontFamily: 'Greycliff CF, sans-serif' }}\n                            ta=\"center\"\n                            fz=\"xl\"\n                            fw={700}\n                            mt={-20}\n                        >EAI CRM</Text>\n                        <TextInput\n                            placeholder=\"Search\"\n                            mb=\"md\"\n                            icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n                            radius='md'\n                            rightSection={\n                                <ActionIcon variant={'subtle'}>\n                                    <IconAdjustmentsHorizontal />\n                                </ActionIcon>\n                            }\n                        // value={}\n                        // onChange={}\n                        />\n                        <div>\n                            <LightDarkButton />\n                        </div>\n                    </div>\n                </Header>\n                <div style={{ display: 'flex', }}>\n                    <span>\n                        <Navbar width={{ base: 50 }} height={500} p=\"xs\" withBorder={false}>\n                            <Space h={5} />\n                            <Stack>\n                                <Link to=\"/acl\">\n                                    <ActionIcon variant=\"subtle\" c=\"cyan\">\n                                        <IconSettings size=\"1rem\" />\n                                    </ActionIcon>\n                                </Link>\n                                <ActionIcon variant=\"subtle\" c='cyan'><Icon3dCubeSphere size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAccessible size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconLayoutAlignBottom size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAnalyze size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"gradient\" gradient={{ from: 'black', to: 'indigo' }}><IconArrowBadgeDown size=\"1rem\" /></ActionIcon>\n                            </Stack>\n                        </Navbar>\n                    </span>\n                    <span style={{ flexGrow: '1', width: '100px' }}>\n                        <div style={{ padding: '10px' }}>\n                            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px', marginTop: '5px' }}>\n                                <span>\n                                    <Title pl={5}>Customers</Title>\n                                </span>\n                                <span>\n                                    <Container>\n                                        <Center>\n                                            <Flex mt={5}>\n                                                <TextInput w={30} />\n                                                <Text mt={5} ml={5} fw={20}>Items per page</Text>\n                                                <Container mt={5}>\n                                                    <Flex>\n                                                        <ActionIcon>\n                                                            <IconChevronLeft />\n                                                        </ActionIcon>\n                                                        <ActionIcon>\n                                                            <IconChevronRight />\n                                                        </ActionIcon>\n                                                    </Flex>\n                                                </Container>\n                                            </Flex>\n                                        </Center>\n                                    </Container>\n                                </span>\n                            </div>\n                            <TableDisplay customerList={customers} fetchedPofileCompleteness={fetchedPofileCompleteness} />\n                        </div>\n                    </span>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Customers;","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import { IconArrowNarrowLeft, IconBriefcase, IconCar, IconCarCrash, IconCircleKey, IconComet, IconFriends, IconHealthRecognition, IconPalette, IconReportMoney, IconSocial, IconTimeline, IconUser } from '@tabler/icons-react';\nimport { createStyles, Navbar, Group, Code, getStylesRef, rem, NavLink, Card, useMantineTheme, Stack } from '@mantine/core';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = createStyles((theme) => ({\n    link: {\n        ...theme.fn.focusStyles(),\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n        fontSize: theme.fontSizes.sm,\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n        // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n        borderRadius: theme.radius.sm,\n        fontWeight: 500,\n\n        '&:hover': {\n            backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n            color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n\n            [`& .${getStylesRef('icon')}`]: {\n                color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n            },\n        },\n    },\n\n    linkIcon: {\n        ref: getStylesRef('icon'),\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n        marginRight: theme.spacing.sm,\n    },\n\n    linkActive: {\n        '&, &:hover': {\n            // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n            backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n            // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n            color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n            [`& .${getStylesRef('icon')}`]: {\n                color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n            },\n        },\n    },\n}));\n\n\nconst data = [\n    { link: 'personalInformation', label: 'Personal Information', icon: <IconUser /> },\n    { link: 'keywords', label: 'Keywords', icon: <IconCircleKey /> },\n    { link: 'profiling', label: 'Profiling', icon: <IconTimeline /> },\n    { link: 'interests', label: 'Interests', icon: <IconPalette /> },\n    { link: 'occupation', label: 'Occupation', icon: <IconBriefcase /> },\n    { link: 'activity', label: 'Activity', icon: <IconComet /> },\n    { link: 'familydetails', label: 'Family Details', icon: <IconFriends /> },\n    { link: 'Financial Information', label: 'Financial Information', icon: <IconReportMoney /> },\n    { link: 'Insurance Details', label: 'Insurance Details  ', icon: <IconCarCrash /> },\n    { link: 'Vehicle', label: 'Vehicle', icon: <IconCar /> },\n    { link: 'Health', label: 'Health', icon: <IconHealthRecognition /> },\n    { link: 'Social Media', label: 'Social Media', icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = ({ opened, setOpened }) => {\n    const { classes, cx } = useStyles();\n    const [active, setActive] = useState('Personal Information');\n    const theme = useMantineTheme();\n\n    const links = data.map((item) => (\n        <NavLink\n            className={cx(classes.link, { [classes.linkActive]: item.label === active })}\n            icon={item.icon}\n            component={Link}\n            variant=\"subtle\"\n            to={item.link}\n            label={item.label}\n            key={item.label}\n            onClick={(event) => {\n                setActive(item.label)\n            }}\n        />\n    ));\n\n    return (\n        <Navbar\n            height={700}\n            // width={{ sm: 300 }}\n            p=\"md\"\n            className={classes.navbar}\n            hiddenBreakpoint=\"sm\"\n            hidden={!opened}\n            width={{ sm: 200, lg: 300 }}\n            withBorder={false}\n        >\n            <Stack>\n                <Card\n                    bg={theme.colorScheme == 'light' ? '#DDE5FF' : ''}\n                    mt={20}\n                >\n                    <Navbar.Section grow>\n                        {links}\n                    </Navbar.Section>\n                </Card>\n\n                <Navbar.Section>\n                    <NavLink icon={<IconArrowNarrowLeft />} component={Link} variant=\"subtle\" to='/' label={'Go Back'} rightSection />\n                </Navbar.Section>\n            </Stack>\n        </Navbar >\n    );\n}\n\nexport default DashboardNavbar","\nconst imageURL = require('./Avid Traveler.png');\nconst baseUrl = window.location.origin;\nconst finalImageUrl = baseUrl + imageURL;\n\nconsole.log(baseUrl,imageURL.default);\n\n\n\n// export default {\n//     [`Avid Traveler`]: new URL('./Avid Traveler.png', import.meta.url).href,\n//     [`Fitness Freak`]: new URL('./Fitness Freak.png', import.meta.url).href,\n//     [`Foodie`]: new URL('./Foodie.png', import.meta.url).href,\n//     [`Sports Fan`]: new URL('./Sports Fan.png', import.meta.url).href,\n//     [`Techie`]: new URL('./Techie.png', import.meta.url).href,\n// }\n\nexport default {\n    [`Avid Traveler`]: \"\",\n    [`Fitness Freak`]: \"\",\n    [`Foodie`]:\"\",\n    [`Sports Fan`]: \"\",\n    [`Techie`]:\"\",\n}\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    {percentage}%\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group>\n        </Paper>\n    );\n}","import { Grid } from '@mantine/core'\nimport assets from './assets'\nimport { StatsCard } from './StatCard'\n\nconst Profiling = () => {\n\n    const assetList = Object.entries(assets)\n    const stats = assetList.map((list) => {\n        const title = list[0]\n        const url = list[1]\n        function getCustomerStats() {\n            const frequency = Math.floor(Math.random() * 16); // A random frequency per month between 0 and 15\n            const maxLastUpdated = Math.floor((1 - frequency / 15) * 30);\n            const lastUpdated = Math.floor(Math.random() * (maxLastUpdated + 1)); // A random value between 0 and maxLastUpdated, representing the number of days ago\n            const maxCompleted = Math.min(Math.floor((30 - lastUpdated) * (frequency / 30) * 100), 100);\n            const percentageCompleted = Math.floor(Math.random() * (maxCompleted + 1)); // A random percentage between 0 and maxCompleted\n\n            return [frequency, percentageCompleted, lastUpdated];\n        }\n\n        const customerStats = getCustomerStats();\n        console.log(customerStats);\n        return (<>\n            <Grid.Col span={4}>\n                <StatsCard title={title} url={url} percentage={customerStats[1]} frequency={customerStats[0]} lastUpdated={customerStats[2]} />\n            </Grid.Col>\n        </>)\n    })\n    return (\n        <>\n            <Grid gutter=\"xl\">\n                {stats}\n            </Grid>\n        </>\n    )\n}\n\nexport default Profiling","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import { Avatar, Card, Center, Container, Divider, Grid, Group, RingProgress, Space, Text } from '@mantine/core'\nimport React, { useEffect, useState } from 'react'\nimport InfoTag from './InfoTag'\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n    const [profile, setProfile] = useState({ ...selectedCustomer.profiling.personal_details })\n    const { profile_completion } = selectedCustomer\n    const { source } = selectedCustomer\n\n    const profileCompletion = (percentage) => {\n        return (\n            <div>\n                <Center>\n                    <RingProgress\n                        mt={50}\n                        size={80}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </div>\n        )\n    }\n    return (\n        <>\n            <Container mt={-80}>\n                <Group grow position='apart'>\n                    <Text mt={70} fw={500}>Basic Details</Text>\n                    <Space h={40} />\n                    <div>\n                        <Space h={40} />\n                        {profileCompletion(profile_completion)}\n                    </div>\n                </Group>\n                <div style={{ marginTop: '-30px' }}>\n                    <InfoTag title={'Picture'} subject={<Avatar radius={'xl'} size='xl' />} />\n                    <Grid gutter=\"xl\" pt={'sm'}>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'First Name'} subject={profile.full_name.split(' ')[0]} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Last Name'} subject={profile.full_name.split(' ')[1]} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Gender'} subject={profile.gender} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Date of birth'} subject={profile.dob} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Age'} subject={profile.age} />\n                        </Grid.Col>\n                    </Grid>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Marital Status'} subject={profile.marital_status} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Source'} subject={source} />\n                        </Grid.Col>\n                    </Grid>\n                    <Divider my=\"md\" size={'xs'} color={'#4E70EA'} />\n                    <Text fw={500}>Contact Details</Text>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Email Address'} subject={profile.email} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Alternative Email'} subject={profile.alternate_email} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Mobile Number'} subject={profile.phone_number} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Alternative Mobile Number'} subject={profile.alternate_phone_number} />\n                        </Grid.Col>\n                    </Grid>\n                    <Divider my=\"md\" size={'xs'} color={'#4E70EA'} />\n                    <Text fw={500}>Address</Text>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Location(city)'} subject={profile.location} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'State'} subject={profile.state} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'PINCODE'} subject={profile.pincode} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Country'} subject={profile.country} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Address Line'} subject={profile.address} />\n                        </Grid.Col>\n                    </Grid>\n                </div>\n            </Container>\n        </>\n    )\n}\n\nexport default PersonalInformation","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button,Badge  } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords ,getKeywords} from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\nconst KeywordsEntry = ({updateKeywordValuesParent }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  const { customerKeywords,keywords,keywordsStatus,customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns,setUnknowns] = useState([])\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id,value,category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id,value,category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n  \n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n  \n  useEffect(() => {\n    if(keywordsStatus == 'success' && customerKeywordsStatus == 'success' ){\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n    \n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [ data,values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n    {keywordsStatus == 'success' && customerKeywordsStatus == 'success' ?\n    <>\n    <MultiSelect\n        data={data}\n        value={values}\n        onChange={(e) => setValue(e)}\n        label=\"Keywords\"\n        searchable\n        searchValue={searchValue}\n        onSearchChange={(event) => handleSearchChange(event)}\n        clearable\n        \n        placeholder=\"Add keywords\"\n        creatable\n        getCreateLabel={(query) => `+ Create ${query}`}\n        onCreate={(query) => {\n          const item = { value: query, label: query };\n          setData((current) => [...current, item]);\n          return item;\n        }}\n      />\n      \n      <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n              key={unknown}\n              variant=\"gradient\"\n              gradient={{ from: 'indigo', to: 'cyan' }}\n            >\n              {unknown}\n            </Badge>\n            ))}\n          </div>\n    </>\n    :<>\n    <p>Please wait.......</p>\n    </>\n    }\n      \n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\nconst Interests = () => {\n    const dispatch = useDispatch()\n    const { status, customerDetails } = useSelector((state) => state.customer);\n    const { customerKeywords,customerKeywordsStatus } = useSelector((state) => state.keyword);\n    const [interests,setInterests] = useState([])\n\n\n    \n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      return { category, values: _.map(values, 'value') };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n  \n  useEffect(() => {\n    if( customerKeywordsStatus == 'success' ){\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n    { customerKeywordsStatus == 'success' ?\n    <>\n      {interests.map((interest) => (\n  <React.Fragment key={interest.category}>\n    <Text fw={700}>{interest.category}</Text>\n    {interest.values.map((value) => (\n      <Badge\n        key={value}\n        variant=\"gradient\"\n        gradient={{ from: 'indigo', to: 'cyan' }}\n      >\n        {value}\n      </Badge>\n    ))}\n  </React.Fragment>\n))}\n    </> :\n    <>Loading interests...</>\n    }\n     \n        \n        </>\n  \n    )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  AppShell,\n  Navbar,\n  Header,\n  Text,\n  MediaQuery,\n  Burger,\n  useMantineTheme,\n  Card,\n  NavLink,\n  Container,\n  LoadingOverlay,\n  TextInput,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  IconAdjustmentsHorizontal,\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconComet,\n  IconFriends,\n  IconHammer,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSearch,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const {updateKeywordsStatus} = useSelector((state) => state.keyword)\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification,setNotification] = useState(false)\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  useEffect(() => {\n    if (routesClicked.at(-2) && routesClicked.at(-2) === \"/dashboard/keywords\") {\n      \n\n      const updateKeywordPayload = {\n        \"customerId\":customerDetails.id,\n        \"keywordsPayload\":keywordValues\n    }\n\n    setNotification(true)\n    sleep(5000).then(data => setNotification(false))\n\n    dispatch(updateKeywords(updateKeywordPayload))\n\n    \n    }\n  }, [routesClicked,dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <AppShell\n        styles={{\n          main: {\n            background:\n              theme.colorScheme === \"dark\" ? theme.colors.dark[8] : \"white\",\n          },\n        }}\n        navbarOffsetBreakpoint=\"sm\"\n        asideOffsetBreakpoint=\"sm\"\n        fixed\n        navbar={<DashboardNavbar opened={opened} setOpened={setOpened} />}\n        header={\n          <Header\n            height={{ base: 50, md: 70 }}\n            p=\"md\"\n            m={\"md\"}\n            withBorder={false}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                height: \"100%\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\n                <Burger\n                  opened={opened}\n                  onClick={() => setOpened((o) => !o)}\n                  size=\"sm\"\n                  color={theme.colors.gray[6]}\n                  mr=\"xl\"\n                />\n              </MediaQuery>\n\n              <Text\n                variant=\"gradient\"\n                gradient={{ from: \"indigo\", to: \"cyan\", deg: 45 }}\n                sx={{ fontFamily: \"Greycliff CF, sans-serif\" }}\n                ta=\"center\"\n                fz=\"xl\"\n                fw={700}\n                mt={-20}\n              >\n                EAI CRM\n              </Text>\n              <TextInput\n                placeholder=\"Search\"\n                mb=\"md\"\n                icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n                radius=\"md\"\n                rightSection={\n                  <ActionIcon variant={\"subtle\"}>\n                    <IconAdjustmentsHorizontal />\n                  </ActionIcon>\n                }\n                // value={}\n                // onChange={}\n              />\n              <div>\n                <LightDarkButton />\n              </div>\n            </div>\n          </Header>\n        }\n      >\n        <Container>\n          <Card\n            mt={20}\n            shadow={\"lg\"}\n            bg={theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"\"}\n            radius={\"md\"}\n            mih={510}\n          >\n            <Routes>\n              <Route>\n                <Route\n                  index\n                  element={\n                    <PersonalInformation selectedCustomer={customerDetails} />\n                  }\n                />\n                <Route\n                  path=\"/personalInformation\"\n                  element={\n                    <PersonalInformation selectedCustomer={customerDetails} />\n                  }\n                />\n                <Route path=\"/profiling\" element={<Profiling />} />\n                <Route\n                  path=\"/keywords\"\n                  element={\n                    <KeywordsEntry\n                      submitKeywords={submitKeywords}\n                      updateKeywordValuesParent={updateKeywordValuesParent}\n                    />\n                  }\n                />\n\n                <Route path=\"/interests\" element={<Interests />} />\n                <Route path=\"/occupation\" element={<Occupation />} />\n                <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                <Route path=\"/activity\" element={<Activity />} />\n\n\n              </Route>\n            </Routes>\n          </Card>\n          {showNotification && <>\n          <Notification\n          loading\n          title=\"Background Syncing\"\n          withCloseButton={true}\n          style={{backgroundColor:\"red !important\"}}\n        >\n          <p style={{color:\"red\"}}> Uploading latest keywords data onto server</p>\n          \n        </Notification>\n\n        </>}\n        </Container>\n        \n        \n      </AppShell>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus:\"idle\",\n  createRolesPermissionMappingStatus:\"idle\",\n  getAllRolesPermissionsMappingsByUserStatus:\"idle\",\n  roles: [],\n  permissions: [],\n  userRoles:[],\n  userPermissions :[],\n  permissionsByRole:[]\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/permissions\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async(roleid) => {\n    const {data} = await axios.get(\"/permissions/roles/\"+roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser =  createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async(userId) => {\n    const {data} = await axios.get(\"/user-role-permission-mappings/users/\"+userId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping:(state,action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e=>{\n        if(e.userId === action.payload){\n          if (e.role ) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    }\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload.data;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions,action.payload]\n  \n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n          if (e.role ) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n      })\n  \n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n    'campaignManagement/fetchRowData',\n    async (_, { getState }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n        const responses = [];\n\n        for (const rowKey of Object.keys(state.rows)) {\n            const row = state.rows[rowKey];\n            if (!row.first || !row.second || !row.third) {\n                throw new Error(\"Row has empty/default values. Fetching aborted.\");\n            }\n\n            const body = {\n                information_type: row.first.toLowerCase().split(' ').join('_'),\n                category: row.second.toLowerCase().split(' ').join('_'),\n                value: row.third.toLowerCase().split(' ').join('_')\n            };\n\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            const data = await response.json();\n            const figures = data.length;\n            const customerIDsForThisRow = data.map(customer => customer.id);\n\n            responses.push({\n                rowKey,\n                figures,\n                customerIDs: customerIDsForThisRow\n            });\n        }\n        return responses;\n    }\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n    'campaignManagement/fetchFiguresForRow',\n    async (rowId, { getState }) => {\n        const state = getState().campaignManagement;\n        const row = state.rows[rowId];\n        if (!row || !row.first || !row.second || !row.third) {\n            throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n        }\n\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n        const body = {\n            information_type: row.first.toLowerCase().split(' ').join('_'),\n            category: row.second.toLowerCase().split(' ').join('_'),\n            value: row.third.toLowerCase().split(' ').join('_')\n        };\n\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        });\n\n        const data = await response.json();\n        const figures = data.length;\n        const customerIDsForThisRow = data.map(customer => customer.id);\n\n        return { rowId, figures, customerIDs: customerIDsForThisRow };\n    }\n);\n\nexport const createCampaign = createAsyncThunk(\n    'campaignManagement/createCampaign',\n    async (_, { getState, rejectWithValue }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n        const body = {\n            name: state.eventName,\n            eventBased: true,\n            triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n            type: \"EMAIL\",\n            recurrenceType: state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n            start: state.tabData.Email.timelineState.startDate,\n            end: state.tabData.Email.timelineState.endDate,\n            templateText: state.tabData.Email.content,\n            customerIDs: state.allCustomerIDs\n        };\n\n        console.log('Publish body', body)\n\n        try {\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            console.log('response', response)\n\n            if (!response.ok) {\n                throw new Error('Failed to create campaign');\n            }\n\n            return response.json();\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst initialState = {\n    isModalOpen: false,\n    dropdownData: {\n        \"Personal Information\": {\n            \"Age\": [\"25-30\", \"31-35\"],\n            \"Gender\": [\"Male\", \"Female\"],\n            \"Marital Status\": [\"Single\", \"Married\"],\n            \"Location\": [\"Delhi\", \"Mumbai\"],\n        },\n        \"Interests\": {},\n        \"Occupation\": '',\n        \"Activity\": '',\n        \"Family Details\": '',\n        \"Financial Information\": '',\n        \"Insurance Details\": '',\n        \"Vehicle\": '',\n        \"Health\": '',\n    },\n    rows: {\n        [Date.now().toString()]: {\n            first: \"\",\n            second: \"\",\n            third: \"\",\n            figures: null,\n            customerIDs: []\n        }\n    },\n    allCustomerIDs: [],\n    selectedCombinations: [],\n    eventName: \"\",\n    eventDate: null,\n    step: 1,\n    activeTab: 'Email',\n    startDate: null,\n    endDate: null,\n    tabData: {\n        Email: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 500\n        },\n        SMS: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 160\n        },\n        Notification: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 250\n        },\n        Whatsapp: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 2000\n        }\n    },\n    radarData: [\n        { count: 120, subject: 'EZ-Auto' },\n        { count: 98, subject: 'Cyberior' },\n        { count: 86, subject: 'Homecare' },\n        { count: 99, subject: 'E-Portal 2.0' },\n        { count: 85, subject: 'EZ-Travel' },\n    ],\n    downloadDataStatus: null,\n    error: null,\n    rowIdsArray: [],\n    loadingStates: {},\n    errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n    name: \"campaignManagement\",\n    initialState,\n    reducers: {\n        toggleModal: (state, action) => {\n            state.isModalOpen = action.payload;\n        },\n        updateDropdownData: (state, action) => {\n            state.dropdownData = action.payload;\n        },\n        updateRows: (state, action) => {\n            state.rows = action.payload;\n            state.rowIdsArray = [];\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        updateSelectedCombinations: (state, action) => {\n            state.selectedCombinations = action.payload;\n        },\n        setCampaignName: (state, action) => {\n            state.campaignName = action.payload;\n        },\n        setEventName: (state, action) => {\n            state.eventName = action.payload;\n        },\n        setEventDate: (state, action) => {\n            state.eventDate = action.payload;\n        },\n        setStep: (state, action) => {\n            state.step = action.payload;\n        },\n        setStartDate: (state, action) => {\n            state.startDate = action.payload;\n        },\n        setEndDate: (state, action) => {\n            state.endDate = action.payload;\n            state.eventDate = action.payload;\n        },\n        setActiveTab: (state, action) => {\n            state.activeTab = action.payload;\n        },\n        updateTabData: (state, action) => {\n            state.tabData = action.payload;\n        },\n        setRadarData: (state, action) => {\n            state.radarData = action.payload;\n        },\n        resetModal: (state) => {\n            state.step = initialState.step;\n            state.campaignName = initialState.campaignName;\n            state.eventName = initialState.eventName;\n            state.activeTab = initialState.activeTab;\n            state.tabData = initialState.tabData;\n            state.eventDate = initialState.eventDate\n        },\n    },\n    extraReducers: {\n        [fetchRowData.pending]: (state) => {\n            state.downloadDataStatus = 'loading';\n        },\n        [fetchRowData.fulfilled]: (state, action) => {\n            state.downloadDataStatus = 'success';\n\n            action.payload.forEach(item => {\n                state.rows[item.rowKey].figures = item.figures;\n                state.rows[item.rowKey].customerIDs = item.customerIDs;\n            });\n\n            state.rowIdsArray = [...new Set([...state.rowIdsArray, ...action.payload.map(item => item.rowKey)])];\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        [fetchRowData.rejected]: (state, action) => {\n            state.downloadDataStatus = 'failed';\n            state.error = action.error.message;\n        },\n        [fetchFiguresForRow.pending]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'loading';\n            state.errors[rowId] = null;\n        },\n        [fetchFiguresForRow.fulfilled]: (state, action) => {\n            const { rowId, figures, customerIDs } = action.payload;\n            state.rows[rowId].figures = figures;\n            state.rows[rowId].customerIDs = customerIDs;\n            state.loadingStates[rowId] = 'loaded';\n\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        [fetchFiguresForRow.rejected]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'error';\n            state.errors[rowId] = action.error.message;\n        }\n    }\n});\n\nexport const {\n    toggleModal,\n    updateDropdownData,\n    updateRows,\n    updateSelectedCombinations,\n    setCampaignName,\n    setEventName,\n    setEventDate,\n    setStep,\n    setStartDate,\n    setEndDate,\n    setActiveTab,\n    updateTabData,\n    setRadarData,\n    resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\n    'campaign/fetchData',\n    async () => {\n        const response = {\n            data: [],\n        };\n        return response.data;\n    }\n);\n\nexport const fetchSources = createAsyncThunk(\n    'campaign/fetchSources',\n    async () => {\n        const response = {\n            sources: [],\n        };\n        return response.sources;\n    }\n);\n\nexport const fetchCampaignNames = createAsyncThunk(\n    'campaign/fetchCampaignNames',\n    async () => {\n        const response = {\n            campaignNames: [],\n        };\n        return response.campaignNames;\n    }\n);\n\nconst initialState = {\n    data: [{\n        name: 'Campaign Name 1',\n        contactability: 4000,\n        interested: 3000,\n        converted: 2000,\n        over: 100,\n        total: 7100\n    },\n    {\n        name: 'Campaign Name 2',\n        contactability: 9000,\n        interested: 6500,\n        converted: 4500,\n        over: 300,\n        total: 20300\n    },\n    {\n        name: 'Campaign Name 3',\n        contactability: 5000,\n        interested: 3700,\n        converted: 2500,\n        over: 150,\n        total: 11350\n    },\n    {\n        name: 'Campaign Name 4',\n        contactability: 5500,\n        interested: 4000,\n        converted: 2700,\n        over: 180,\n        total: 12380\n    },\n    {\n        name: 'Campaign Name 5',\n        contactability: 4800,\n        interested: 3400,\n        converted: 2300,\n        over: 120,\n        total: 10620\n    },\n    {\n        name: 'Campaign Name 6',\n        contactability: 4700,\n        interested: 3300,\n        converted: 2200,\n        over: 110,\n        total: 10310\n    },\n    {\n        name: 'Campaign Name 7',\n        contactability: 4600,\n        interested: 3200,\n        converted: 2100,\n        over: 100,\n        total: 10000\n    },\n    ],\n    sources: ['Homecare', 'Cyberior', 'EZ-Auto', 'EZ-Travel', 'E-Portal 2.0'],\n    campaignNames: ['Campaign 1', 'Campaign 2', 'Campaign 3'],\n    status: 'idle',\n    error: null,\n};\n\nconst campaignSlice = createSlice({\n    name: 'campaign',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchData.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(fetchData.fulfilled, (state, action) => {\n                state.status = 'succeeded';\n                if (action.payload && action.payload.length > 0) {\n                    state.data = action.payload;\n                }\n            })\n            .addCase(fetchData.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.error.message;\n            })\n            .addCase(fetchSources.fulfilled, (state, action) => {\n                if (action.payload && action.payload.length > 0) {\n                    state.sources = action.payload;\n                }\n            })\n            .addCase(fetchCampaignNames.fulfilled, (state, action) => {\n                if (action.payload && action.payload.length > 0) {\n                    state.campaignNames = action.payload;\n                }\n            });\n    },\n});\n\nexport default campaignSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n  },\n});","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate , Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate  to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.9e9a6d4e.png\";","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n    Box,\n    Flex,\n    Stack,\n    BackgroundImage,\n    Card,\n    Image,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { Link, redirect, useNavigate } from \"react-router-dom\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport loginImage from './assets/login.png'\nimport eaLogo from './assets/eaLogo.png'\nimport { loginUser } from \"../../redux/authSlice\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappings ,getAllRolesPermissionsMappingsByUser} from \"../../redux/rolesPermissionSlice\";\n\n\n\n\nexport default function Login() {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n\n\n    const { status, isLoggedIn,user } = useSelector((state) => state.auth);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(loginUser({ email, password }));\n    };\n\n    // useEffect(() => {\n    //     if(status === \"success\" && isLoggedIn){\n    //         dispatch(getAllRolesPermissionsMappings())\n    //     }\n    // },[status,isLoggedIn])\n\n    useEffect(() => {\n        if(status === \"success\" && isLoggedIn){\n            dispatch(getAllRolesPermissionsMappingsByUser(user._id))\n            navigate(\"/\")\n        }\n    },[status,navigate])\n\n    return (\n        <>\n            <Box>\n                <Stack>\n                    <Flex>\n                        <Box>\n                            <Paper>\n                                <BackgroundImage\n                                    style={{ width: '500px', height: '550px' }}\n                                    src={loginImage}\n                                    radius={'md'}\n                                    pt={300}\n                                    mt={95}\n                                    ml={69}\n                                >\n                                    <Text\n                                        c={'white'}\n                                        pl={48}\n                                        pr={56}\n                                    >\n                                        <Title>\n                                            Title\n                                        </Title>\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices tristique ligula ac suscipit.\n                                    </Text>\n                                    <Button\n                                        ml={48}\n                                        mb={48}\n                                        mt={30}\n                                    >\n                                        Read More\n                                        <IconArrowRight />\n\n                                    </Button>\n                                </BackgroundImage>\n                            </Paper>\n                        </Box>\n                        <Box>\n                            <Center>\n                                <Stack>\n                                    <Paper>\n                                        <Image\n                                            width={150}\n                                            height={128}\n                                            src={eaLogo}\n                                            mt={95}\n                                            mr={313}\n                                            ml={288}\n                                            mb={33}\n                                        />\n                                    </Paper>\n                                    <Card\n                                        shadow={'md'}\n                                        ml={50}\n                                        mr={100}\n                                        bg={'#F1F5F9'}\n                                    >\n\n                                        <TextInput label=\"Email\" placeholder=\"you@ea.in\" value={email} required onChange={(e) => setEmail(e.target.value)} />\n                                        <PasswordInput\n                                            label=\"Password\"\n                                            placeholder=\"Your password\"\n                                            required\n                                            mt=\"md\"\n                                            onChange={(e) => setPassword(e.target.value)}\n                                        />\n                                        <Group position=\"apart\" mt=\"lg\">\n                                            <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                                            {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                                        </Group>\n\n                                        <Button fullWidth mt=\"xl\" type=\"submit\" onClick={handleSubmit}>\n                                            {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                                        </Button>\n                                        \n                                        {status === \"failed\" && <Text style={{color:\"red\",padding:\"10px\"}}>Incorrect credentials !</Text>}\n\n                                    </Card>\n                                </Stack>\n                            </Center>\n                        </Box>\n                    </Flex>\n                </Stack>\n            </Box>\n        </>\n        // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n        // </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { Modal, MultiSelect, Button, ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport { useEffect, useState } from \"react\"\nimport LightDarkButton from \"../../components/LightDarkButton\"\nimport { getCustomers, getCustomersProfileCompleteness } from \"../../redux/customerSlice\"\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n    getAllRolesPermissionsMappings, getUserRolesPermissionsByMapping,\n    getAllPermissionsByRole, getAllPermissions, createRolesPermissionMapping, getAllRolesPermissionsMappingsByUser\n} from \"../../redux/rolesPermissionSlice\"\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from '@mantine/core';\nimport { Select } from '@mantine/core';\nimport { getUsers } from \"../../redux/authSlice\"\n\n\n\nconst Acl = () => {\n\n\n\n    const useStyles = createStyles((theme) => ({\n        header: {\n            position: 'sticky',\n            top: 0,\n            backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n            transition: 'box-shadow 150ms ease',\n\n            '&::after': {\n                content: '\"\"',\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                bottom: 0,\n                borderBottom: `${rem(1)} solid ${theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[2]\n                    }`,\n            },\n        },\n\n        scrolled: {\n            boxShadow: theme.shadows.sm,\n        },\n    }));\n\n    const { classes, cx } = useStyles();\n    const [scrolled, setScrolled] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [selectedUser, setSelectedUser] = useState(null)\n    const [selectedRole, setSelectedRole] = useState(null)\n    const [selectedPermission, setSelectedPermission] = useState(null)\n    const [selectedUserRoleName, setSelectedUserRoleName] = useState(null)\n\n    const dispatch = useDispatch();\n\n    const { rolesPermissionsStatus, rolesPermissions, userPermissions,\n        permissionsByRole, permissionsByRoleStatus, permissions } = useSelector(state => state.rolePermission);\n    const { user, users } = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch(getAllRolesPermissionsMappings());\n        dispatch(getUsers())\n        dispatch(getAllPermissions())\n    }, []);\n\n    useEffect(() => {\n        if (selectedUser !== null) {\n            const userBySelectedId = users.find(x => x.id === selectedUser);\n            if (userBySelectedId.role) {\n                setSelectedRole(userBySelectedId.role.id)\n                setSelectedUserRoleName(userBySelectedId.role.name)\n            }\n        }\n    }, [selectedUser])\n\n\n    useEffect(() => {\n        if (selectedRole !== null) {\n            dispatch(getAllPermissionsByRole(selectedRole));\n        }\n        setSelectedPermission(null)\n    }, [selectedRole])\n\n\n    const initialData = rolesPermissions.map((data) => ({\n        id: data.id,\n        rolename: data.role.name,\n        permissionname: data.permission.name,\n        username: data.user.email,\n        isactive: data.isActive ? \"active\" : \"inactive\",\n        created_at: data.created_at,\n    }));\n\n    const rows = initialData.map((row) => (\n        <tr key={row.id}>\n            <td>{row.rolename}</td>\n            <td>{row.permissionname}</td>\n            <td>{row.username}</td>\n            <td>{row.isactive}</td>\n            <td>{row.created_at}</td>\n        </tr>\n    ));\n\n\n    const handleAddRoleClick = () => {\n        setIsModalOpen(true);\n    };\n\n\n    const handleModalClose = () => {\n        setIsModalOpen(false)\n        setSelectedUser(null)\n        setSelectedRole(null)\n        setSelectedPermission(null)\n    }\n\n    const handleAssignPermission = () => {\n        dispatch(createRolesPermissionMapping({\n            \"roleId\": selectedRole,\n            \"permissionId\": selectedPermission,\n            \"userId\": selectedUser\n        }))\n        dispatch(getAllRolesPermissionsMappings())\n        handleModalClose()\n\n    }\n\n\n    if (rolesPermissionsStatus === 'loading') {\n        return (\n            <LoadingOverlay visible overlayBlur={2}\n                loaderProps={{\n                    size: 'xl',\n                    variant: 'dots'\n                }}\n            />\n        )\n    }\n    else {\n        return (\n            <>\n                <Header height={{ base: 50, md: 70 }} p=\"md\" withBorder={false} m={'md'}>\n                    <div style={{ display: 'flex', alignItems: 'center', height: '100%', justifyContent: 'space-between' }}>\n                        <Text\n                            variant=\"gradient\"\n                            gradient={{ from: 'indigo', to: 'cyan', deg: 45 }}\n                            sx={{ fontFamily: 'Greycliff CF, sans-serif' }}\n                            ta=\"center\"\n                            fz=\"xl\"\n                            fw={700}\n                            mt={-20}\n                        >EAI CRM</Text>\n                        <TextInput\n                            placeholder=\"Search\"\n                            mb=\"md\"\n                            icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n                            radius='md'\n                            rightSection={\n                                <ActionIcon variant={'subtle'}>\n                                    <IconAdjustmentsHorizontal />\n                                </ActionIcon>\n                            }\n                        // value={}\n                        // onChange={}\n                        />\n                        <div>\n                            <LightDarkButton />\n                        </div>\n                    </div>\n                </Header>\n                <div style={{ display: 'flex', }}>\n                    <span>\n                        <Navbar width={{ base: 50 }} height={500} p=\"xs\" withBorder={false}>\n                            <Space h={5} />\n                            <Stack>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconSettings size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><Icon3dCubeSphere size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAccessible size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconLayoutAlignBottom size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAnalyze size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"gradient\" gradient={{ from: 'black', to: 'indigo' }}><IconArrowBadgeDown size=\"1rem\" /></ActionIcon>\n                            </Stack>\n                        </Navbar>\n                    </span>\n                    <span style={{ flexGrow: '1', width: '100px' }}>\n                        <div style={{ padding: '10px' }}>\n                            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px', marginTop: '5px' }}>\n                                <span>\n                                    <Title pl={5}>ACL</Title>\n                                </span>\n                                <span>\n                                    <Container>\n                                        <Center>\n                                            <Flex mt={5}>\n                                                <Button\n                                                    variant=\"gradient\" gradient={{ from: 'indigo', to: 'cyan' }}\n                                                    className=\"mt-4\"\n                                                    onClick={handleAddRoleClick}\n                                                >\n                                                    Assign permissions\n                                                </Button>\n                                                <Modal\n                                                    opened={isModalOpen}\n                                                    onClose={handleModalClose}\n                                                    title=\"Assign permissions\"\n                                                    size=\"lg\"\n                                                    style={{ content: { maxHeight: '80vh' } }}\n\n                                                >\n                                                    <Text fz=\"xl\">Select user below assigning new permission</Text>\n                                                    {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n                                                    <br /><br />\n                                                    <Select\n                                                        label=\"Select user\"\n                                                        placeholder=\"Pick one\"\n                                                        data={users.map((user) => ({\n                                                            value: user.id,\n                                                            label: user.agentName || user.email,\n                                                        }))}\n                                                        value={selectedUser}\n                                                        onChange={setSelectedUser}\n\n\n                                                    />\n\n\n                                                    {Array.isArray(permissions) && permissions.length > 0 ? (\n                                                        <Select\n                                                            label=\"Select permission\"\n                                                            placeholder=\"Pick one\"\n                                                            disabled={selectedRole === null}\n                                                            data={permissions?.map((permission) => ({\n                                                                value: permission.id,\n                                                                label: permission.name,\n                                                                disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                                                            }))}\n                                                            value={selectedPermission}\n                                                            onChange={setSelectedPermission}\n                                                            dropdownComponent=\"div\"\n                                                        />\n                                                    ) : (<Text>Loading permissions</Text>)}\n\n\n                                                    <br />\n\n                                                    <Button\n                                                        variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                                                        className=\"mt-4\"\n                                                        onClick={handleAssignPermission}\n                                                        disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n                                                    >\n                                                        Assign\n                                                    </Button>\n\n                                                </Modal>\n                                                <Container mt={5}>\n                                                    <Flex>\n                                                        <ActionIcon>\n                                                            <IconChevronLeft />\n                                                        </ActionIcon>\n                                                        <ActionIcon>\n                                                            <IconChevronRight />\n                                                        </ActionIcon>\n                                                    </Flex>\n                                                </Container>\n                                            </Flex>\n                                        </Center>\n                                    </Container>\n                                </span>\n                            </div>\n\n                            <div>\n\n\n                                <ScrollArea h={600} onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n                                    <Table miw={700}>\n                                        <thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n                                            <tr>\n                                                <th>Role Name</th>\n                                                <th>Permission Name</th>\n                                                <th>User Email</th>\n                                                <th>Status</th>\n                                                <th>Created At</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>{rows}</tbody>\n                                    </Table>\n                                </ScrollArea>\n                            </div>\n                        </div>\n                    </span>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Acl;","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst PermissionDenied = () => {\n\n        return (\n            <>\n                <Header height={{ base: 50, md: 70 }} p=\"md\" withBorder={false} m={'md'}>\n                    <div style={{ display: 'flex', alignItems: 'center', height: '100%', justifyContent: 'space-between' }}>\n                        <Text\n                            variant=\"gradient\"\n                            gradient={{ from: 'indigo', to: 'cyan', deg: 45 }}\n                            sx={{ fontFamily: 'Greycliff CF, sans-serif' }}\n                            ta=\"center\"\n                            fz=\"xl\"\n                            fw={700}\n                            mt={-20}\n                        >EAI CRM</Text>\n                        <TextInput\n                            placeholder=\"Search\"\n                            mb=\"md\"\n                            icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n                            radius='md'\n                            rightSection={\n                                <ActionIcon variant={'subtle'}>\n                                    <IconAdjustmentsHorizontal />\n                                </ActionIcon>\n                            }\n                        // value={}\n                        // onChange={}\n                        />\n                        <div>\n                            <LightDarkButton />\n                        </div>\n                    </div>\n                </Header>\n                <div style={{ display: 'flex', }}>\n                    <span>\n                        <Navbar width={{ base: 50 }} height={500} p=\"xs\" withBorder={false}>\n                            <Space h={5} />\n                            <Stack>\n                                <Link to=\"/acl\">\n                                    <ActionIcon variant=\"subtle\" c=\"cyan\">\n                                        <IconSettings size=\"1rem\" />\n                                    </ActionIcon>\n                                </Link>\n                                <ActionIcon variant=\"subtle\" c='cyan'><Icon3dCubeSphere size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAccessible size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconLayoutAlignBottom size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAnalyze size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"gradient\" gradient={{ from: 'black', to: 'indigo' }}><IconArrowBadgeDown size=\"1rem\" /></ActionIcon>\n                            </Stack>\n                        </Navbar>\n                    </span>\n                    <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n                </div>\n            </>\n        )\n    \n}\n\nexport default PermissionDenied;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFiguresForRow } from '../../../../redux/campaignManagementSlice';\nimport { ActionIcon, Flex, Loader, Select } from '@mantine/core';\nimport { IconChevronDown, IconExclamationMark, IconRefresh, IconTrash, IconX } from '@tabler/icons-react';\n\nconst DropdownRow = ({ row, rowId, handleDropdownChange, dropdownData, selectedCombinations, deleteRow }) => {\n\n    const figures = row.figures;\n    const secondDropdownOptions = row.first ? Object.keys(dropdownData[row.first]) : [];\n\n    const thirdDropdownOptions = row.second\n        ? dropdownData[row.first][row.second].filter(option => {\n            const currentCombination = {\n                first: row.first,\n                second: row.second,\n                third: row.first === \"Interests\" ? option.value : option\n            };\n\n            const isSelectedCombination = selectedCombinations.some(selected =>\n                selected.first === currentCombination.first &&\n                selected.second === currentCombination.second &&\n                (row.first === \"Interests\" ? selected.third.value : selected.third) === currentCombination.third\n            );\n\n            const isSelectedInCurrentRow = selectedCombinations.some(selected =>\n                selected.rowId === rowId &&\n                selected.first === currentCombination.first &&\n                selected.second === currentCombination.second &&\n                (row.first === \"Interests\" ? selected.third.value : selected.third) === currentCombination.third\n            );\n\n            return !isSelectedCombination || isSelectedInCurrentRow;\n        })\n        : [];\n\n    const dispatch = useDispatch();\n    const loadingState = useSelector(state => state.campaignManagement.loadingStates[rowId]);\n    const error = useSelector(state => state.campaignManagement.errors[rowId]);\n\n    const handleRefresh = () => {\n        dispatch(fetchFiguresForRow(rowId));\n    };\n\n    const handleThirdDropdownChange = (value) => {\n        handleDropdownChange(rowId, \"third\", value);\n\n        dispatch(fetchFiguresForRow(rowId, value));\n    };\n\n    return (\n        <React.Fragment>\n            <div className='col-12 col-lg-3'>\n                <div className='mb-4 col-6 col-lg-12'>\n                    <Select\n                        data={Object.keys(dropdownData).map(option => ({\n                            value: option,\n                            label: typeof option === 'string' ? option : null\n                        }))}\n                        searchable\n                        rightSection={<IconChevronDown size=\"1rem\" />}\n                        rightSectionWidth={30}\n                        styles={{ rightSection: { pointerEvents: 'none' }, input: { cursor: 'pointer' } }}\n                        value={row.first}\n                        placeholder=\"Select Information Type\"\n                        onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n                    />\n                </div>\n            </div>\n            <div className='col-12 col-lg-3'>\n                <div className='mb-4 col-6 col-lg-12'>\n                    <Select\n                        data={secondDropdownOptions.map(option => ({\n                            value: option,\n                            label: typeof option === 'string' ? option : null\n                        }))}\n                        searchable\n                        rightSection={<IconChevronDown size=\"1rem\" />}\n                        rightSectionWidth={30}\n                        styles={{ rightSection: { pointerEvents: 'none' }, input: { cursor: 'pointer' } }}\n                        value={row.second}\n                        placeholder=\"Select Category\"\n                        onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n                    />\n                </div>\n            </div>\n            <div className='col-12 col-lg-3'>\n                <div className='mb-4 col-6 col-lg-12'>\n                    <Select\n                        data={thirdDropdownOptions.map(option =>\n                            typeof option === 'string'\n                                ? { value: option, label: option }\n                                : option\n                        )}\n                        searchable\n                        rightSection={<IconChevronDown size=\"1rem\" />}\n                        rightSectionWidth={30}\n                        styles={{ rightSection: { pointerEvents: 'none' }, input: { cursor: 'pointer' } }}\n                        value={row.third}\n                        placeholder=\"Select Sub-category\"\n                        onChange={handleThirdDropdownChange}\n                    />\n                </div>\n            </div>\n            <div className='col-12 col-lg-1'>\n                <ActionIcon onClick={() => deleteRow(rowId)} color='red' variant='subtle' size={'sm'}>\n                    <IconTrash />\n                </ActionIcon>\n            </div>\n            <div className='col-12 col-lg-2'>\n                {loadingState === 'loading' && <Loader />}\n                {loadingState === 'error' &&\n                    <Flex>\n                        <ActionIcon c={'red'}><IconExclamationMark /></ActionIcon>\n                        <ActionIcon c={'blue'} onClick={handleRefresh}><IconRefresh /></ActionIcon>\n                    </Flex>\n                }\n                {loadingState !== 'loading' && loadingState !== 'error' && (\n                    <>\n                        <Flex>\n                            <ActionIcon>\n                                {figures !== null ? figures : '-'}\n                            </ActionIcon>\n                            <ActionIcon c={'blue'} onClick={handleRefresh}><IconRefresh /></ActionIcon>\n                        </Flex>\n                    </>\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default DropdownRow;","import { useDispatch, useSelector } from \"react-redux\";\nimport { setEventName, setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst Step1 = () => {\n    const dispatch = useDispatch();\n    const eventName = useSelector(state => state.campaignManagement.eventName);\n    const eventDate = useSelector(state => state.campaignManagement.eventDate);\n\n    return (\n        <>\n            <div className='' style={{ minHeight: '100px' }}>\n                <Flex justify={'space-around'}>\n                    <Stack>\n                        <label className='date-inputs-control'>Event Name</label>\n                        <TextInput\n                            id=\"eventName\"\n                            w={400}\n                            name=\"eventName\"\n                            placeholder=\"Event Name\"\n                            type=\"text\"\n                            value={eventName}\n                            onChange={evt => dispatch(setEventName(evt.currentTarget.value))}\n                        />\n                    </Stack>\n                    <Stack >\n                        <label className='date-inputs-control'>Event date</label>\n                        {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n                        <DatePickerInput\n                            value={eventDate}\n                            popoverProps={{ withinPortal: true }}\n                            rightSection={<ActionIcon variant=\"subtle\"><IconCalendar size=\"1.1rem\" stroke={1.5} /></ActionIcon>}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                            w={200}\n                        />\n                    </Stack>\n                </Flex>\n            </div>\n        </>\n    );\n};\n\nexport default Step1;","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nfunction CustomDate({ setSelectedDate }) {\n\n    return (\n        <DatePickerInput\n            popoverProps={{ withinPortal: true }}\n            rightSection={<ActionIcon variant=\"subtle\"><IconCalendar size=\"1.1rem\" stroke={1.5} /></ActionIcon>}\n            label={<Text fw={'light'}>Date</Text>}\n            placeholder={<Text>Select Date</Text>}\n            onChange={(e) => setSelectedDate(e)}\n            mx=\"auto\"\n            maw={400}\n        />\n    );\n}\n\nexport default CustomDate","import { useEffect, useRef, useState } from \"react\";\nimport { TimeInput } from '@mantine/dates'\nimport { ActionIcon, Text, rem } from \"@mantine/core\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n    const ref = useRef(null);\n\n    const pickerControl = (\n        <ActionIcon variant=\"subtle\" color=\"gray\" onClick={() => ref.current?.showPicker()}>\n            <IconClock style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n        </ActionIcon>\n    );\n\n    return (\n        <TimeInput\n            value={(timeSelected ? timeSelected : '')}\n            placeholder=\"Select Time\"\n            label={<Text fw={'light'}>Time</Text>}\n            ref={ref}\n            rightSection={pickerControl}\n            onChange={(e) => setSelectedTime(e.target.value)} />\n    );\n}\n\nexport default CustomTime\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { ActionIcon, Badge, Box, Button, Card, Divider, Flex, Stack, rem } from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setEventDate } from '../../../../redux/campaignManagementSlice';\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n\n    const dispatch = useDispatch();\n    const eventDate = useSelector(state => state.campaignManagement.eventDate);\n\n    const defaultStartDate = new Date();\n\n    const defaultResults = {\n        startDate: defaultStartDate,\n        endDate: null,\n        recurrence: {\n            type: '',\n            recurrenceTime: '',\n            dailyFrequency: 1,\n            weeklyDays: [],\n            monthlyDay: '',\n            monthlyFrequency: '',\n            monthlyWeekday: '',\n            customDateTimes: []\n        }\n    };\n\n    const [startDate, setStartDate] = useState(initialState.startDate || defaultStartDate);\n    const [results, setResults] = useState(initialState.recurrence ? initialState : defaultResults);\n    console.log('results', results)\n\n    const weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    const monthlyFrequencies = ['first', 'second', 'third', 'fourth'];\n\n    const [showDropdown, setShowDropdown] = useState(false);\n    const [customDateTimes, setCustomDateTimes] = useState(results.recurrence.customDateTimes || []);\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [selectedTime, setSelectedTime] = useState(null);\n    const [recurrenceTime, setRecurrenceTime] = useState(results.recurrence.recurrenceTime || '');\n\n    const addCustomDate = () => {\n        if (selectedDate && selectedTime) {\n            const newCustomDateTime = { date: selectedDate, time: selectedTime };\n            setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n            setResults(prevState => ({\n                ...prevState,\n                recurrence: {\n                    ...prevState.recurrence,\n                    customDateTimes: [...prevState.recurrence.customDateTimes, newCustomDateTime]\n                }\n            }));\n            setSelectedDate(null);\n            setSelectedTime(null);\n            setShowDropdown(false);\n        }\n    };\n\n    useEffect(() => {\n        if (recurrenceTime) {\n            setResults(prevState => ({\n                ...prevState,\n                recurrence: {\n                    ...prevState.recurrence,\n                    recurrenceTime: recurrenceTime\n                }\n            }));\n        }\n    }, [recurrenceTime]);\n\n    useEffect(() => {\n        if (selectedDate && selectedTime) {\n            addCustomDate();\n        }\n    }, [selectedDate, selectedTime]);\n\n    useEffect(() => {\n        onUpdate(results);\n    }, [results]);\n\n    const handleDateChange = (field, date) => {\n        setResults(prevState => ({\n            ...prevState,\n            [field]: date,\n        }));\n\n        if (field === \"startDate\") {\n            setStartDate(date);\n        } else if (field === \"endDate\") {\n            dispatch(setEventDate(date));\n        }\n    };\n\n    const removeCustomDate = (indexToRemove) => {\n        const updatedCustomDateTimes = customDateTimes.filter((_, index) => index !== indexToRemove);\n        setCustomDateTimes(updatedCustomDateTimes);\n\n        setResults(prevState => ({\n            ...prevState,\n            recurrence: {\n                ...prevState.recurrence,\n                customDateTimes: updatedCustomDateTimes\n            }\n        }));\n    };\n\n    const handleRecurrenceChange = (field, value) => {\n        setResults(prevState => ({\n            ...prevState,\n            recurrence: {\n                ...prevState.recurrence,\n                [field]: value,\n            },\n        }));\n    };\n\n    const handleDailyFrequencyChange = (value) => {\n        let updatedValue = value !== 'Everyday' ? parseInt(value, 10) : 'Everyday';\n        handleRecurrenceChange('dailyFrequency', updatedValue);\n    };\n\n    const handleWeeklyDaysChange = (day) => {\n        const updatedDays = results.recurrence.weeklyDays.includes(day)\n            ? results.recurrence.weeklyDays.filter(d => d !== day)\n            : [...results.recurrence.weeklyDays, day];\n\n        handleRecurrenceChange('weeklyDays', updatedDays);\n    };\n\n    const handleMonthlyDayAndFrequencyChange = (field, value) => {\n        handleRecurrenceChange(field, parseInt(value, 10));\n    };\n\n    return (\n        <div>\n            <Divider mb={10} />\n            <div className='col-12 col-lg-12'>\n                <div className='time-title mb-20'>\n                    <Flex justify={'space-between'}>\n                        <h1>\n                            Timeline\n                        </h1>\n                        <Badge\n                            styles={{ root: { cursor: 'pointer' } }}\n                            onClick={() => onApplyForAll(results)}>Apply For All</Badge>\n                    </Flex>\n                </div>\n            </div>\n\n            <Flex>\n                <div className='col-6 col-lg-6'>\n                    <div className='mb-40'>\n                        <label htmlFor=\"startDate\" className='date-inputs-control'>Start date</label>\n                        <DatePicker className='form-control  inputs-control form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            selected={startDate}\n                            onChange={(date) => handleDateChange(\"startDate\", date)}\n                            minDate={new Date()} />\n                    </div>\n                </div>\n\n                <div className='col-6 col-lg-6'>\n                    <div className='mb-40'>\n                        <label htmlFor=\"endDate\" className='date-inputs-control'>End date</label>\n                        <DatePicker className='form-control  inputs-control form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            selected={eventDate}\n                            onChange={(date) => handleDateChange(\"endDate\", date)}\n                            minDate={new Date()} />\n                    </div>\n                </div>\n            </Flex>\n            <div className='col-12 col-lg-12'>\n                <div className='time-title mb-20'>\n                    <h1>Recurrence</h1>\n                </div>\n            </div>\n            <div className='row'>\n                <div className='col-12 col-lg-4'>\n                    <div className='mb-25 mt-10'>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input check-recu\" type=\"radio\" name=\"recurrence\" id=\"daily\" value=\"Daily\"\n                                checked={results.recurrence.type === 'Daily'} onChange={e => handleRecurrenceChange('type', e.target.value)} />\n                            <label className=\"form-check-label check-label\" htmlFor=\"daily\">Daily</label>\n                        </div>\n                    </div>\n                    <div className='mb-25'>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input check-recu\" type=\"radio\" name=\"recurrence\" id=\"weekly\" value=\"Weekly\"\n                                checked={results.recurrence.type === 'Weekly'} onChange={e => handleRecurrenceChange('type', e.target.value)} />\n                            <label className=\"form-check-label check-label\" htmlFor=\"weekly\">Weekly</label>\n                        </div>\n                    </div>\n                    <div className='mb-25'>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input check-recu\" type=\"radio\" name=\"recurrence\" id=\"monthly\" value=\"Monthly\"\n                                checked={results.recurrence.type === 'Monthly'} onChange={e => handleRecurrenceChange('type', e.target.value)} />\n                            <label className=\"form-check-label check-label\" htmlFor=\"monthly\">Monthly</label>\n                        </div>\n                    </div>\n                    <div className='mb-25'>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input check-recu\" type=\"radio\" name=\"recurrence\" id=\"custom\" value=\"Custom\"\n                                checked={results.recurrence.type === 'Custom'} onChange={e => handleRecurrenceChange('type', e.target.value)} />\n                            <label className=\"form-check-label check-label\" htmlFor=\"custom\">Custom</label>\n                        </div>\n                    </div>\n                </div>\n                <div className='col-12 col-lg-8'>\n                    {results.recurrence.type === 'Daily' && (\n                        <div className='col-6 col-lg-3'>\n                            <div className='mb-20 mt-10'>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input check-recu \" type=\"radio\" name=\"dailyOption\" id=\"everyNDaysOption\" value=\"EveryNDays\"\n                                        onChange={() => handleRecurrenceChange('dailyFrequency', 'EveryNDays')} />\n                                    <label className=\"form-check-label check-label chkinput\" htmlFor=\"everyNDaysOption\">\n                                        Every <span><input id=\"dailyFrequencyInput\" name=\"dailyFrequencyInput\" type=\"number\" min=\"1\" className='day-no' value={results.recurrence.dailyFrequency} onChange={e => handleDailyFrequencyChange(e.target.value)} /></span>day(s)\n                                    </label>\n                                </div>\n                            </div>\n                            <div className='mb-20'>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input check-recu\" type=\"radio\" name=\"dailyOption\" id=\"everydayOption\" value=\"Everyday\"\n                                        checked={results.recurrence.dailyFrequency === 'Everyday'}\n                                        onChange={() => handleRecurrenceChange('dailyFrequency', 'Everyday')} />\n                                    <label className=\"form-check-label check-label\" htmlFor=\"everydayOption\">\n                                        Everyday\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                    <div className='row'>\n                        {results.recurrence.type === 'Weekly' && weekDays.map(day => (\n                            <div className='col-2 col-lg-4'>\n                                <div key={day} className='mb-15 dis-inline web-dis-inline web-mb-0'>\n                                    <div className=\"form-check from-mrg-rtl mb-15\">\n                                        <input\n                                            className=\"form-check-input check-recu\"\n                                            type=\"checkbox\"\n                                            value={day}\n                                            checked={results.recurrence.weeklyDays.includes(day)}\n                                            onChange={() => handleWeeklyDaysChange(day)}\n                                        />\n                                        <label className=\"form-check-label check-label\">\n                                            {day}\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    {results.recurrence.type === 'Monthly' && (\n                        <div className='col-6 col-lg-9'>\n                            <div className='clearfix'>\n                                <div className='mb-25 mt-10'>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input check-recu\" type=\"radio\" name=\"monthlyOption\" id=\"monthlyOption1\" />\n                                        <label className=\"form-check-label check-label chkinput\">\n                                            Day <input\n                                                type=\"number\"\n                                                className='day-no'\n                                                onChange={e => handleMonthlyDayAndFrequencyChange('monthlyDay', e.target.value)}\n                                            />\n                                            of every <input\n                                                type=\"number\"\n                                                className='day-no'\n                                                onChange={e => handleMonthlyDayAndFrequencyChange('monthlyFrequency', e.target.value)}\n                                            /> month(s)\n                                        </label>\n                                    </div>\n                                </div>\n\n                                <div className='mb-25 mt-10'>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input check-recu\" type=\"radio\" name=\"monthlyOption\" id=\"monthlyOption2\" />\n                                        <label className=\"form-check-label check-label chkinput\" htmlFor=\"monthlyOption2\">\n                                            Day <input type=\"number\" className='day-no' />\n                                            of every\n                                            <span className='mrg-ltr'>\n                                                <select className=\"form-select dropday\" onChange={e => handleRecurrenceChange('monthlyFrequency', e.target.value)}>\n                                                    {monthlyFrequencies.map(freq => <option key={freq} value={freq}>{freq}</option>)}\n                                                </select>\n                                            </span>\n                                            <span className='mrg-ltr mrg-rtl'>\n                                                <select className=\"form-select dropday\" onChange={e => handleRecurrenceChange('monthlyWeekday', e.target.value)}>\n                                                    {weekDays.map(day => <option key={day} value={day}>{day}</option>)}\n                                                </select>\n                                            </span> of every month(s)\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {\n                        results.recurrence.type !== 'Custom' &&\n                        (\n                            results.recurrence.type === 'Daily'\n                            || results.recurrence.type === 'Weekly'\n                            || results.recurrence.type === 'Monthly'\n                        )\n                        &&\n                        (\n                            <Box w={100}>\n                                <CustomTime setSelectedTime={setRecurrenceTime} timeSelected={recurrenceTime} />\n                            </Box>\n                        )\n                    }\n                    {results.recurrence.type === 'Custom' && (\n                        <div>\n                            <Flex wrap={\"wrap\"}>\n                                <Flex mr={5} wrap={'wrap'}>\n                                    {customDateTimes.map((item, index) => (\n                                        <Badge\n                                            rightSection={\n                                                <ActionIcon\n                                                    size=\"xs\"\n                                                    color=\"blue\"\n                                                    radius=\"xl\"\n                                                    variant=\"transparent\"\n                                                    onClick={() => removeCustomDate(index)} // Add this onClick event here\n                                                >\n                                                    <IconX size={rem(10)} />\n                                                </ActionIcon>\n                                            }\n                                            size=\"lg\"\n                                            mr={5}\n                                            mb={5}\n                                            key={index}\n                                        >\n                                            {formatDateTime(item.date, item.time)}\n                                        </Badge>\n                                    ))}\n                                </Flex>\n                                <Stack>\n                                    <Badge\n                                        bg={'white'}\n                                        c={'gray'}\n                                        styles={{ root: { borderWidth: '1px', borderColor: 'gray', } }}\n                                        leftSection={<ActionIcon size={rem(20)}><IconPlus /></ActionIcon>}\n                                        rightSection={<ActionIcon><IconChevronDown /></ActionIcon>}\n                                        onClick={() => setShowDropdown(!showDropdown)}>Add More</Badge>\n                                    {showDropdown && (\n                                        <Box>\n                                            <Box shadow=\"lg\" w={200}>\n                                                <CustomDate setSelectedDate={setSelectedDate} />\n                                                <CustomTime setSelectedTime={setSelectedTime} timeSelected={selectedTime} />\n                                            </Box>\n                                        </Box>\n                                    )}\n                                </Stack>\n                            </Flex>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Timeline;","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from '@mantine/tiptap';\nimport { useEditor } from '@tiptap/react';\nimport Highlight from '@tiptap/extension-highlight';\nimport StarterKit from '@tiptap/starter-kit';\nimport Underline from '@tiptap/extension-underline';\nimport TextAlign from '@tiptap/extension-text-align';\nimport Superscript from '@tiptap/extension-superscript';\nimport SubScript from '@tiptap/extension-subscript';\nimport { useEffect } from 'react';\nimport DOMPurify from \"dompurify\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly }) => {\n    const editor = useEditor({\n        extensions: [\n            StarterKit,\n            Underline,\n            Link,\n            Superscript,\n            SubScript,\n            Highlight,\n            TextAlign.configure({ types: ['heading', 'paragraph'] }),\n        ],\n        content: initialContent.content,\n        onUpdate: ({ editor }) => {\n            onChange(editor.getHTML());\n        }\n    });\n\n    useEffect(() => {\n        // editor?.setOptions({ content: initialContent })\n        const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n        editor?.commands.insertContent(sanitizedContent)\n        console.log('Effect')\n    }, [initialContent.file]);\n\n    return (\n        <RichTextEditor\n            editor={editor}\n            readOnly={readOnly}\n            styles={{\n                root: {\n                    border: 'none',\n                    position: 'relative'\n                },\n                control: {\n                    backgroundColor: 'transparent',\n                    border: 'none',\n                },\n                controlsGroup: {\n                    position: 'relative'\n                },\n                content: {\n                    backgroundColor: 'transparent',\n                    overflow: 'auto',\n                    maxHeight: '210px',\n                },\n                toolbar: {\n                    backgroundColor: 'transparent',\n                }\n            }}\n        >\n            <RichTextEditor.Toolbar sticky stickyOffset={60}>\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.Bold />\n                    <RichTextEditor.Italic />\n                    <RichTextEditor.Underline />\n                    <RichTextEditor.Strikethrough />\n                    <RichTextEditor.ClearFormatting />\n                    <RichTextEditor.Highlight />\n                    <RichTextEditor.Code />\n                </RichTextEditor.ControlsGroup>\n\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.H1 />\n                    <RichTextEditor.H2 />\n                    <RichTextEditor.H3 />\n                    <RichTextEditor.H4 />\n                </RichTextEditor.ControlsGroup>\n\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.Blockquote />\n                    <RichTextEditor.Hr />\n                    <RichTextEditor.BulletList />\n                    <RichTextEditor.OrderedList />\n                    <RichTextEditor.Subscript />\n                    <RichTextEditor.Superscript />\n                </RichTextEditor.ControlsGroup>\n\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.Link />\n                    <RichTextEditor.Unlink />\n                </RichTextEditor.ControlsGroup>\n\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.AlignLeft />\n                    <RichTextEditor.AlignCenter />\n                    <RichTextEditor.AlignJustify />\n                    <RichTextEditor.AlignRight />\n                </RichTextEditor.ControlsGroup>\n            </RichTextEditor.Toolbar>\n\n            <RichTextEditor.Content />\n        </RichTextEditor>\n    );\n};\n\nexport default WysiwygEditor;","import \"./Whatsapp.css\";\nimport eaLogo from '../../../Login/assets/eaLogo.png'\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport { IconArrowAutofitLeft, IconArrowLeft, IconPhone, IconSend, IconSendOff, IconVideo } from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n    console.log('Sanitized', sanitizedContent)\n    return (\n        <div className=\"europ-assistance\">\n            <div className=\"frame\">\n                <div className=\"be-a-part-of-IPL-wrapper\">\n                    <p className=\"be-a-part-of-IPL\" dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n                </div>\n                <div className=\"group\">\n                    <div className=\"overlap-group\">\n                        <div className=\"div\">Book now</div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"overlap\">\n                <div className=\"text-wrapper-2\">Europ Assistance India</div>\n                {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n                <ActionIcon size={rem(13)} mt={17} c={'white'}><IconArrowLeft /></ActionIcon>\n                <div className=\"img-wrapper\">\n                    <img className=\"img\" alt=\"Img\" src={eaLogo} />\n                </div>\n                <div className=\"div-wrapper\">\n                    <div className=\"text-wrapper-3\">7:01 PM</div>\n                </div>\n                <div className=\"group-2\">\n                    {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n                    <Flex ml={10} mt={-1} >\n                        <ActionIcon size={rem(13)} c={'white'}><IconVideo /></ActionIcon>\n                        <ActionIcon size={rem(13)} c={'white'}><IconPhone /></ActionIcon>\n                    </Flex>\n                    <div className=\"three-dots\">\n                        <div className=\"ellipse\" />\n                        <div className=\"ellipse-2\" />\n                        <div className=\"ellipse-3\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"group-3\">\n                <div className=\"overlap-2\">\n                    {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n                    <div className=\"text-wrapper-4\">Type a message</div>\n                </div>\n                <div className=\"imagevector-wrapper\">\n                    {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from './FileUploader';\nimport {\n    setActiveTab,\n    updateTabData\n} from '../../../../redux/campaignManagementSlice';\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport './Step2.css'\n\nconst Step2 = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n    const [previewMode, setPreviewMode] = useState(false);\n\n    const enterPreviewMode = () => {\n        setPreviewMode(true);\n    };\n\n    const exitPreviewMode = () => {\n        setPreviewMode(false);\n    };\n\n    const handleTextInputWysiwyg = (content) => {\n        const updatedTabData = {\n            ...tabData,\n            [activeTab]: {\n                ...tabData[activeTab],\n                content: content,\n                characterCount: content.length\n            }\n        };\n        dispatch(updateTabData(updatedTabData));\n    };\n\n    const handleTimelineUpdate = (newState) => {\n        const updatedTabData = {\n            ...tabData,\n            [activeTab]: {\n                ...tabData[activeTab],\n                timelineState: newState\n            }\n        };\n        console.log('updatedTabData', updateTabData)\n        dispatch(updateTabData(updatedTabData));\n    };\n\n    const handleApplyForAll = (currentTimelineState) => {\n        const updatedTabData = { ...tabData };\n        ['Email', 'SMS', 'Notification', 'Whatsapp'].forEach(tab => {\n            updatedTabData[tab] = {\n                ...tabData[tab],\n                timelineState: currentTimelineState\n            };\n        });\n        dispatch(updateTabData(updatedTabData));\n        showNotification({\n            type: 'default',\n            title: 'Timelines applied',\n            message: 'Timelines have been added for all modes',\n        });\n    };\n\n    return (\n        <>\n            {previewMode && <div className=\"overlay\"></div>}\n            <div className={`modal-body modal-pad`}>\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n                            <div className=\"dis-block nav-pills me-3\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n                                {['Email', 'SMS', 'Notification', 'Whatsapp'].map(tab => (\n                                    previewMode ? (\n                                        <Box ml={-15}>\n                                            <Button\n                                                className=\"preview-container\"\n                                                key={tab}\n                                                onClick={() => dispatch(setActiveTab(tab))}\n                                                c={activeTab === tab ? \"#524EE1\" : \"white\"}\n                                                bg={activeTab === tab ? \"white\" : \"#524EE1\"}\n                                                sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                                size=\"lg\"\n                                                fullWidth\n                                                style={{ marginBottom: '10px' }}\n                                            >\n                                                <Text size={'xs'}>{tab}</Text>\n                                            </Button>\n                                        </Box>\n                                    ) : (\n                                        <button\n                                            key={tab}\n                                            className={`nav-link d-block mb-2 ${previewMode && activeTab !== tab ? 'tab-preview-container' : 'preview-container'} ${activeTab === tab ? 'active' : ''}`}\n                                            onClick={() => dispatch(setActiveTab(tab))}\n                                        >\n                                            {tab}\n                                        </button>\n                                    )\n                                ))}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-10\">\n                            <div className=\"preview-container tab-content tab-content-bg\">\n                                {['Email', 'SMS', 'Notification', 'Whatsapp'].map(tab => (\n                                    <div\n                                        key={tab}\n                                        className={` tab-pane fade ${activeTab === tab ? 'show active' : ''}`}\n                                        id={`v-pills-${tab}`}\n                                        role=\"tabpanel\"\n                                    >\n                                        <Box >\n                                            {\n                                                previewMode ? (\n                                                    <Box h={250} >\n                                                        <Preview content={tabData[tab]?.content} tab={tab} />\n                                                    </Box>\n                                                ) : (\n                                                    <Box h={290} mt={-40}>\n                                                        <WysiwygEditor\n                                                            key={activeTab}\n                                                            initialContent={tabData[tab]}\n                                                            onChange={handleTextInputWysiwyg}\n                                                        />\n                                                    </Box>\n                                                )\n                                            }\n                                        </Box>\n                                        <Flex direction={\"row-reverse\"} mt={20}>\n                                            <div className=\"character-count\">\n                                                {tabData[activeTab].characterCount}/{tabData[activeTab].charLimit}\n                                            </div>\n                                            {!previewMode && (\n                                                <Box ml={5}>\n                                                    {tabData[activeTab].characterCount > tabData[activeTab].charLimit &&\n                                                        <div className=\"character-limit-error\">Character limit exceeded!</div>\n                                                    }\n                                                </Box>\n                                            )}\n                                        </Flex>\n                                        <Box mt={'-4%'} >\n                                            {!previewMode ? (\n                                                <Button\n                                                    bg={'#524EE1'}\n                                                    sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                                    onClick={enterPreviewMode}>\n                                                    Preview\n                                                </Button>\n                                            ) : (\n                                                <Button\n                                                    bg={'#524EE1'}\n                                                    sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                                    onClick={exitPreviewMode}>\n                                                    OK\n                                                </Button>\n                                            )}\n                                        </Box>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Box className={`${!previewMode ? 'tab-preview-container' : ''}`}>\n                        {!previewMode && (\n                            <>\n                                <Flex direction={'row-reverse'} mr={-100} mt={-20}>\n                                    <FileUploader key={activeTab} />\n                                </Flex>\n                                <Timeline\n                                    key={activeTab}\n                                    onUpdate={handleTimelineUpdate}\n                                    onApplyForAll={handleApplyForAll}\n                                    initialState={tabData[activeTab]?.timelineState || {}}\n                                />\n                            </>\n                        )}\n                    </Box>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Step2;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport { Button, Center, Modal } from \"@mantine/core\";\nimport './CampaignModal.css';\nimport { toggleModal, setStep, setEventName, createCampaign } from \"../../../../redux/campaignManagementSlice\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst CampaignModal = () => {\n    const dispatch = useDispatch();\n    const { isModalOpen, eventName, step } = useSelector(state => state.campaignManagement);\n    const campaignManagementState = useSelector(state => state.campaignManagement);\n\n    const [showConfirmation, setShowConfirmation] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const handlePublish = () => {\n        dispatch(createCampaign())\n            .then(res => {\n                if (createCampaign.fulfilled.match(res)) {\n                    showNotification({\n                        type: 'default',\n                        title: `Campaign Published`,\n                        message: `The campaign has been published successfully`,\n                        color: 'green'\n                    });\n                    dispatch(toggleModal(false));\n                } else {\n                    showNotification({\n                        type: 'error',\n                        title: `Campaign Failed`,\n                        message: res.error.message,\n                        color: 'red'\n                    });\n                }\n            });\n    };\n\n    const handleClose = () => {\n        showNotification({\n            type: 'default',\n            title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n            message: `Click Run campaign to run the campaign again`,\n        });\n        dispatch(toggleModal(false));\n    };\n\n    const handleNext = () => {\n        if (!eventName.trim()) {\n            showNotification({\n                type: 'warning',\n                title: `Please provide an event name`,\n                message: `Event name is required to proceed.`,\n            });\n        } else {\n            dispatch(setStep(2));\n        }\n    };\n\n    const handlePublishConfirmation = () => {\n        setShowConfirmation(true);\n    };\n\n    const handleConfirmedPublish = () => {\n        setLoading(true);\n        setShowConfirmation(false);\n        handlePublish();\n    };\n\n    return (\n        <>\n            <Modal\n                opened={isModalOpen}\n                withCloseButton={false}\n                closeOnClickOutside={false}\n                size={'xl'}\n                styles={{ content: { 'overflow': 'visible' } }}\n            >\n                <div className=\"modal-header modal-header-wrap\">\n                    <div className='modeltitle'>\n                        <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n                        <h2>Step: {step}/2</h2>\n                        {step === 2 && <IconArrowLeft cursor={'pointer'} onClick={() => dispatch(setStep(1))} />}\n                    </div>\n                    <button type=\"button\" className=\"btn-close\" onClick={handleClose} aria-label=\"Close\"></button>\n                </div>\n\n                <div>\n                    {step === 1 ? (\n                        <Step1\n                            eventName={eventName}\n                            setEventName={event => dispatch(setEventName(event))}\n                        />\n                    ) : (\n                        <div>\n                            <Step2 />\n                        </div>\n                    )}\n                </div>\n\n                <div>\n                    {step === 1 ? (\n                        <Center>\n                            <Button\n                                bg={'#524EE1'}\n                                sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                onClick={handleNext}>\n                                Next\n                            </Button>\n                        </Center>\n                    ) : (\n                        <Center>\n                            <Button\n                                bg={'#524EE1'}\n                                sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                onClick={handlePublishConfirmation}>\n                                Publish\n                            </Button>\n                        </Center>\n                    )}\n                </div>\n            </Modal >\n\n            <Modal\n                opened={showConfirmation}\n                withCloseButton={true}\n                onClose={() => setShowConfirmation(false)}\n                title=\"Confirm Campaign Publish\"\n                size={'md'}\n            >\n                <p>Are you sure you want to publish this campaign?</p>\n                <Center>\n                    <Button\n                        bg={'#524EE1'}\n                        sx={{ marginRight: '10px', '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                        onClick={handleConfirmedPublish}\n                        disabled={loading}\n                    >\n                        {loading ? \"Publishing...\" : \"Yes, Publish\"}\n                    </Button>\n                    <Button\n                        variant=\"outline\"\n                        onClick={() => setShowConfirmation(false)}\n                    >\n                        No, Go back\n                    </Button>\n                </Center>\n            </Modal>\n        </>\n    );\n}\n\nexport default CampaignModal;","import { useDispatch, useSelector } from 'react-redux';\nimport CampaignModal from './CampaignModal';\nimport { resetModal, fetchRowData, toggleModal } from '../../../../redux/campaignManagementSlice';\nimport { showNotification } from '@mantine/notifications';\n\nconst ButtonGroup = () => {\n    const dispatch = useDispatch();\n    const downloadDataStatus = useSelector(state => state.campaignManagement.downloadDataStatus);\n    const isModalOpen = useSelector(state => state.campaignManagement.isModalOpen);\n    const allCustomerIDs = useSelector(state => state.campaignManagement.allCustomerIDs); // <-- Add this line\n\n    const handleOpenModal = () => {\n        if (allCustomerIDs.length === 0) {\n            showNotification({\n                title: `Error!`,\n                message: `No customers have been selected. Please ensure atleast one customer`,\n                color: 'red'\n            });\n            return;\n        }\n        dispatch(toggleModal(true));\n        dispatch(resetModal());\n        showNotification({\n            title: `Success!`,\n            message: `Campaign initiated against customers in pool.`,\n            color: 'green',\n        });\n    };\n\n    const handleDownloadData = () => {\n        dispatch(fetchRowData());\n        if (downloadDataStatus === 'loading') {\n            showNotification({\n                title: `Fetching Datasets`,\n                message: `Please wait while the data is being fetched`,\n                color: 'blue'\n            });\n        } else if (downloadDataStatus === 'success') {\n            showNotification({\n                title: `Success!`,\n                message: `Data fetched successfully!`,\n                color: 'green',\n            });\n        } else if (downloadDataStatus === 'failed') {\n            showNotification({\n                title: `Error!`,\n                message: `Failed to fetch data. Please try again.`,\n                color: 'red',\n            });\n        }\n    };\n\n    return (\n        <div className='row web-pt-0 pt-5 web-mb-25'>\n            <div className='col-12 col-lg-6 web-mb-20'>\n                <button\n                    type='button'\n                    className='btn datebtn'\n                    onClick={handleDownloadData}\n                >\n                    Download Data\n                </button>\n            </div>\n            <div className='col-12 col-lg-6'>\n                <button\n                    type='button'\n                    className='btn runcamp'\n                    onClick={handleOpenModal}\n                >\n                    Run Campaign\n                </button>\n                {isModalOpen && <CampaignModal isOpen={isModalOpen} closeModal={() => toggleModal(false)} />}\n            </div>\n        </div>\n    );\n};\n\nexport default ButtonGroup;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectRadarData } from '../../../../redux/campaignManagementSlice';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, ResponsiveContainer } from 'recharts';\n\nconst RadarLinear = () => {\n    const radarData = useSelector(selectRadarData);\n\n    const updatedData = radarData.map(item => ({\n        ...item,\n        subject: `${item.subject} \\n ${item.count}`,\n    }));\n\n    const CustomizedAxisTick = (props) => {\n        const { x, y, payload } = props;\n        const text = payload.value.split('\\n');\n\n        return (\n            <g transform={`translate(${x},${y})`}>\n                {text.map((value, index) => (\n                    <text key={index} x={0} y={index * 5} dy={index === 0 ? -5 : 5} textAnchor=\"middle\" fill=\"#666\">\n                        {value}\n                    </text>\n                ))}\n            </g>\n        );\n    };\n\n    return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n                <Radar name=\"Customer Campaign\" dataKey=\"count\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n            </RadarChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default RadarLinear;","import { useDispatch, useSelector } from 'react-redux';\nimport { setRadarData, selectRadarData } from '../../../../redux/campaignManagementSlice';\nimport RadarLinear from './RadarLinear';\nimport ButtonGroup from './ButtonGroup';\n\nconst Demographic = () => {\n    const dispatch = useDispatch();\n    const radarData = useSelector(selectRadarData);\n    const allCustomerIDs = useSelector(state => state.campaignManagement.allCustomerIDs);\n\n    const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n    const handleDownload = () => {\n        const baseTotal = 18247000;\n        const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n        const desiredTotal = baseTotal + randomAdjustment;\n\n        let randomizedData = radarData.map(item => {\n            let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n            return { ...item, count: randomCount };\n        });\n\n        // Adjusting the values to ensure the total is close to the desired value\n        const currentTotal = randomizedData.reduce((acc, curr) => acc + curr.count, 0);\n        const difference = desiredTotal - currentTotal;\n        if (difference !== 0) {\n            randomizedData[0].count += difference;\n        }\n\n        dispatch(setRadarData(randomizedData));\n    };\n\n    return (\n        <div className='col-12 col-lg-4'>\n            <div className='dem-grapic clearfix'>\n                <div className='dem-title mb-4'>\n                    <h1>Total Demographic</h1>\n                </div>\n                <div className='fullwidth mb-2 mt-5'>\n                    <RadarLinear />\n                </div>\n                <div className='row mt-2'>\n                    <div className='col-12 col-lg-12 text-center mb-2'>\n                        <span className='total-numb pe-2'>\n                            {/* {totalCount.toLocaleString('en-IN')} */}\n                        </span>\n                        <span className='total-users'>{allCustomerIDs.length} Users matching your criteria</span>\n                    </div>\n                    {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n                    <ButtonGroup />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Demographic;","import { ActionIcon, Box, Flex, Select, Text, Title } from '@mantine/core';\nimport { IconChevronDown } from '@tabler/icons-react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LabelList } from 'recharts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchData, fetchSources, fetchCampaignNames } from '../../../../redux/campaignSlice';\n\nconst BarStackedView = () => {\n    const dispatch = useDispatch();\n\n    const data = useSelector((state) => state.campaign.data);\n    const sources = useSelector((state) => state.campaign.sources);\n    const campaignNames = useSelector((state) => state.campaign.campaignNames);\n    const status = useSelector((state) => state.campaign.status);\n    const error = useSelector((state) => state.campaign.error);\n\n    useEffect(() => {\n        if (status === 'idle') {\n            dispatch(fetchData());\n            dispatch(fetchSources());\n            dispatch(fetchCampaignNames());\n        }\n    }, [status, dispatch]);\n\n    return (\n        <>\n            <Box p={30} h={500} w={'100%'} >\n                <Title c={'#4e70ea'}>Other Campaign Comparison</Title>\n                <Box>\n                    <Flex>\n                        <Select\n                            maw={320}\n                            mx=\"auto\"\n                            label={<Text c={'dimmed'}>Campaign(s)</Text>}\n                            data={['All', ...campaignNames]}\n                            transitionProps={{ transition: 'pop-top-left', duration: 80, timingFunction: 'ease' }}\n                            withinPortal\n                            rightSection={<ActionIcon><IconChevronDown /></ActionIcon>}\n                        />\n                        <Select\n                            maw={320}\n                            mx=\"auto\"\n                            label={<Text c={'dimmed'}>Source(s)</Text>}\n                            data={sources}\n                            transitionProps={{ transition: 'pop-top-left', duration: 80, timingFunction: 'ease' }}\n                            withinPortal\n                            rightSection={<ActionIcon><IconChevronDown /></ActionIcon>}\n                        />\n                    </Flex>\n                </Box>\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart\n                        width={500}\n                        height={300}\n                        data={data}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 20,\n                            bottom: 5,\n                        }}\n                        maxBarSize={60}\n                    >\n                        <CartesianGrid strokeLinecap=\"3\" horizontalCoordinatesGenerator={(props) => props.height > 250 ? [75, 150, 225] : [100, 200]} vertical={false} />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis\n                            label={{ value: 'No. of Customers', angle: -90, position: 'insideLeft', offset: -4 }}\n                        />\n                        <Tooltip />\n                        <Legend iconType='circle' verticalAlign='top' align='right' offset={-10} />\n                        <Bar dataKey=\"contactability\" stackId=\"a\" fill=\"#8334f8\" />\n                        <Bar dataKey=\"interested\" stackId=\"a\" fill=\"#883538\" />\n                        <Bar dataKey=\"converted\" stackId=\"a\" fill=\"#8884d8\" />\n                        <Bar dataKey=\"over\" stackId=\"a\" fill=\"#82ca9d\">\n                            <LabelList position={'top'} />\n                        </Bar>\n\n                    </BarChart>\n                </ResponsiveContainer>\n            </Box>\n        </>\n    );\n};\n\nexport default BarStackedView;","import React, { useEffect } from 'react';\nimport DropdownRow from './DropdownRow';\nimport ButtonGroup from './ButtonGroup';\nimport '../../_customer-Profile.scss';\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getKeywords } from '../../../../redux/keywordSlice';\nimport { IconPlus } from '@tabler/icons-react';\nimport { ActionIcon, Box, Flex, Group, Text } from '@mantine/core';\nimport { toggleModal, updateDropdownData, updateRows, updateSelectedCombinations } from '../../../../redux/campaignManagementSlice';\nimport Demographic from './Demographic';\nimport BarStackedView from '../ViewCampaigns/BarStackedCampaign';\n\nconst Analysis = () => {\n    const dispatch = useDispatch();\n\n    const {\n        isModalOpen,\n        dropdownData,\n        rows,\n        selectedCombinations\n    } = useSelector(state => state.campaignManagement);\n\n    useEffect(() => {\n        dispatch(getKeywords());\n    }, [dispatch]);\n\n    const keywords = useSelector(state => state.keyword.keywords);\n    console.log(keywords, keywords)\n    const keywordsStatus = useSelector(state => state.keyword.keywordsStatus);\n\n    if (keywordsStatus === 'loading') {\n        console.log('loading...')\n    }\n\n    if (keywordsStatus === 'failed') {\n        console.log('Error getting keywords')\n    }\n\n    useEffect(() => {\n        if (keywordsStatus === 'success') {\n            const updatedDropdownData = { ...dropdownData.Interests };\n\n            keywords.forEach(keyword => {\n                if (!updatedDropdownData[keyword.category]) {\n                    updatedDropdownData[keyword.category] = [];\n                }\n                updatedDropdownData[keyword.category].push({ label: keyword.value, value: keyword.id });\n            });\n\n            const finalDropdownData = {\n                ...dropdownData,\n                Interests: updatedDropdownData\n            };\n\n            dispatch(updateDropdownData(finalDropdownData));\n        }\n    }, [keywordsStatus, keywords]);\n\n    const handleDropdownChange = (rowId, dropdown, value) => {\n        const updatedRows = { ...rows };\n        updatedRows[rowId] = {\n            ...updatedRows[rowId],\n            [dropdown]: value\n        };\n\n        let updatedCombinations = [...selectedCombinations];\n\n        if (dropdown === \"first\") {\n            updatedRows[rowId].second = \"\";\n            updatedRows[rowId].third = \"\";\n        } else if (dropdown === \"second\") {\n            updatedRows[rowId].third = \"\";\n        } else if (dropdown === \"third\") {\n            let thirdValue;\n            if (updatedRows[rowId].first === \"Interests\") {\n                thirdValue = dropdownData[updatedRows[rowId].first][updatedRows[rowId].second].find(opt => opt.value === value);\n            } else {\n                thirdValue = value;\n            }\n\n            updatedCombinations = updatedCombinations.filter(combination => combination.rowId !== rowId);\n\n            updatedCombinations.push({\n                rowId,\n                first: updatedRows[rowId].first,\n                second: updatedRows[rowId].second,\n                third: thirdValue\n            });\n        }\n\n        dispatch(updateRows(updatedRows));\n        dispatch(updateSelectedCombinations(updatedCombinations));\n    };\n\n    const addRow = () => {\n        const newRow = {\n            [Date.now().toString()]: {\n                first: \"\",\n                second: \"\",\n                third: \"\"\n            }\n        };\n        dispatch(updateRows({ ...rows, ...newRow }));\n    };\n\n    const deleteRow = (rowId) => {\n        const updatedRows = { ...rows };\n        delete updatedRows[rowId];\n\n        const updatedSelectedCombinations = selectedCombinations.filter(combination => combination.rowId !== rowId);\n\n        dispatch(updateRows(updatedRows));\n        dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n    };\n\n    const handleModalToggle = (status) => {\n        dispatch(toggleModal(status));\n    };\n\n    return (\n        <>\n            <div className='col-xs-12 col-lg-12'>\n                <div className='chart-bx mb-5'>\n                    <div className='row'>\n                        <div className='col-12 col-lg-8'>\n                            <div className='col-12 col-lg-12 mb-3'>\n                                <Flex justify={'space-between'}>\n                                    <div className='bx-title mb-2 dis-inline'>\n                                        <h1>Customer Profile Analysis</h1>\n                                    </div>\n                                    <div className='pl-90'>\n                                        <Group onClick={addRow} style={{ cursor: 'pointer' }}>\n                                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                                <IconPlus color='#4E70EA' />\n                                            </ActionIcon>\n                                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                                        </Group>\n                                    </div>\n                                </Flex>\n                            </div>\n                            <div className='row' style={{ maxHeight: '250px', overflowY: 'scroll' }}>\n                                <div className='col-12 col-lg-3'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Select Information Type</h1>\n                                    </div>\n                                </div>\n                                <div className='col-12 col-lg-3'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Select Category</h1>\n                                    </div>\n                                </div>\n                                <div className='col-12 col-lg-3'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Select Sub-category</h1>\n                                    </div>\n                                </div>\n                                <div className='col-12 col-lg-1'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Delete</h1>\n                                    </div>\n                                </div>\n                                <div className='col-12 col-lg-2'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Figures</h1>\n                                    </div>\n                                </div>\n                                {Object.entries(rows).map(([rowId, rowData]) => (\n                                    <DropdownRow\n                                        key={rowId}\n                                        row={rowData}\n                                        rowId={rowId}\n                                        handleDropdownChange={handleDropdownChange}\n                                        dropdownData={dropdownData}\n                                        selectedCombinations={selectedCombinations}\n                                        deleteRow={deleteRow}\n                                    />\n                                ))}\n                            </div>\n                            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n                        </div>\n                        <Demographic />\n                    </div>\n                </div>\n            </div>\n            <Box h={1000} w={'100%'}>\n                <BarStackedView />\n            </Box>\n        </>\n    );\n}\n\nexport default Analysis;","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { setAuth } from \"./redux/authSlice\";\nimport { ColorScheme, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport Layout from \"./components/Layout\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { ThemeProvider } from \"./ThemeProvider\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const { rolesPermissionsStatus, rolesPermissions, userPermissions, getAllRolesPermissionsMappingsByUserStatus } = useSelector(state => state.rolePermission);\n\n  if (getAllRolesPermissionsMappingsByUserStatus === \"success\") console.log(userPermissions);\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(permission => permission.name === permissionName);\n  }\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider colorScheme={colorScheme} toggleColorScheme={toggleColorScheme}>\n      <MantineProvider theme={{ colorScheme }} withGlobalStyles withNormalizeCSS>\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          {hasPermission(userPermissions, \"customer dashboard\") ? (\n            <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n          ) : (\n            <PrivateRoute path=\"/dashboard/*\" element={<PermissionDenied />} />\n          )}\n          {hasPermission(userPermissions, \"user view\") ? (\n            <PrivateRoute path=\"/\" element={<Customers />} />\n          ) : (\n            <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n          )}\n          {hasPermission(userPermissions, \"acl\") ? (\n            <PrivateRoute path=\"/acl\" element={<Acl />} />\n          ) : (\n            <PrivateRoute path=\"/acl\" element={<PermissionDenied />} />\n          )}\n          <Route path=\"/campaign\" element={<Analysis />} />\n          <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n          <Route path=\"/agent\" element={<AgentEntry />} />\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n\n\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}