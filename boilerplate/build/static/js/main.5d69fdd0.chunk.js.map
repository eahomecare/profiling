{"version":3,"sources":["i18n.js","utils/sleep.js","redux/customerSlice.js","StyledComponents/StyledTable.jsx","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/StatCard.jsx","redux/profileTypesSlice.js","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","components/AgentPages/Remarks.tsx","components/Remarks/RemarkListings.jsx","components/FinancialInformation/FinancialInformation.jsx","components/InsuranceDetails/InsuranceDetails.jsx","components/VehicleDetails/VehicleDetails.jsx","pages/Dashboard/InfoTag.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/campaignListSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/AllCampaigns/AllCampaigns.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","components/ProfileTableDisplay.jsx","pages/Profile/assets/Avid Traveler.png","pages/Profile/assets/Fitness Freak.png","pages/Profile/assets/Foodie.png","pages/Profile/assets/Sports Fan.png","pages/Profile/assets/Techie.png","pages/Profile/assets/index.ts","pages/Profile/assets/Auto Lover.png","pages/Profile/assets/Musicophile.png","pages/Profile/assets/Gadgets Freaks.png","pages/Profile/assets/AddProfile.png","pages/Profile/Profile.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","getCustomerRemarks","_ref5","_callee5","customerId","_yield$axios$get5","_context5","_x3","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","customerRemarks","remarksStatus","reducers","setCurrentCustomer","state","action","payload","clearCurrentCustomer","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","updatedCustomers","customer","profileCompletion","_objectSpread","profile_completion","_customerSlice$action","actions","StyledTable","_ref","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","_ref2","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","size","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","TableDisplay","customerList","dispatch","useDispatch","navigate","useNavigate","useMemo","accessorFn","_row$profiling","_row$profiling$person","profiling","personal_details","full_name","header","substr","accessorKey","minSize","percentage","RingProgress","thickness","sections","value","label","weight","align","Loader","type","Customers","_useSelector","useSelector","useEffect","refreshButton","IconRefresh","LoadingOverlay","visible","overlayBlur","overlayColor","loaderProps","variant","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","fontFamily","fontWeight","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconClipboardText","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","location","useLocation","links","item","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","ta","fz","Badge","Progress","fetchData","response","process","t0","fetchProfileTypes","fetchProfileMappings","profileId","profilingSlice","profileTypes","profileMappings","profileTypesStatus","profileMappingsStatus","error","builder","addCase","message","Profiling","profileData","profileTypesCustomerMapping","stats","profile","Grid","Col","span","profileType","srcUrl","Math","round","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","source","memoizedSelectedCustomer","randomDetails","randomLocation","faker","city","randomState","randomAddress","streetAddress","randomPincode","zipCode","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","handleSubmitKeywords","setData","_useSelector2","rolePermission","rolesPermissionsStatus","_useSelector3","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","setUnknowns","_useState9","_useState10","isDataChanged","setDataChanged","transformedData","category","allKeywords","unknownValues","filter","obj","hasChanged","isEqual","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","readOnly","alignSelf","Interests","interests","setInterests","groupedByCategory","groupBy","uniq","interest","React","Fragment","gradient","from","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","tempEditData","setTempEditData","headerElements","headerItem","index","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","toString","bg","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","industry","incomeBracket","Occupation","gender","relationship","phone","email","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Remarks","Textarea","RemarkListings","currentCustomerId","_useDisclosure","useDisclosure","_useDisclosure2","opened","_useDisclosure2$","open","close","selectedRemark","setSelectedRemark","remark","Modal","onClose","centered","agentName","date","time","acc_no","ifsc","branch","FinancialInformation","validity","expiry","InsuranceDetails","vin","product_type","VehicleDetails","Dashboard","submitKeywords","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","_useState11","auth","isLoggedIn","_useState12","_useState13","_useState14","_useState15","_useState16","pathname","Card","textAlign","phone_number","undefined","Routes","Route","element","path","keywordsPayload","then","Notification","loading","withCloseButton","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","window","atob","charCodeAt","slice","join","JSON","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_yield$axios$post3","_x4","authSlice","user","userStatus","users","setAuth","logout","localStorage","clear","defaults","headers","common","reload","storage","getItem","_id","access_token","_parseJwt","sub","setItem","stringify","_parseJwt2","_authSlice$actions","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","_ref6","createRolesPermissionMapping","_ref7","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_context9","_x6","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","_rolesPermissionSlice","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","keywordsUsed","selectedCombinations","combination","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","isModalOpen","dropdownData","Age","Gender","Location","Vehicle","Health","Date","now","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","fetchSources","sources","fetchCampaignNames","campaignNames","campaignSlice","selectedCampaign","selectCampaign","delivered","totalSent","interested","success","failure","failed","converted","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectHoveredItem","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","fetchCampaigns","_error$response","determineCampaignStatus","campaign","currentDate","isActive","campaignStatus","campaigns","store","configureStore","reducer","campaignManagementReducer","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","campaignListSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","h","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","assets","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","entries","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","floor","random","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Divider","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","Space","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","min","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","margin","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","cell","AllCampaigns","campaignState","colSpan","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","IconUserDollar","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","handleUserActionModal","selected_user","updatedUserData","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","address","pincode","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","handleSubmit","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","chartData","strokeDasharray","CustomerProfileAnalysis","selectedSource","setSelectedSource","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$textColor","textColor","_ref$text","isHovered","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","handleMouseLeave","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","flex","Root","ProfileTableDisplay","Profile","_React$useState","_React$useState2","setChecked","showTable","setShowTable","IconArrowBack","profileTypeId","float","App","setColorScheme","login","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.5d69fdd0.chunk.js","sourcesContent":["import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory: [],\n  fetchedPofileCompleteness: false,\n  customerServiceHistoryStatus: \"idle\",\n  customerDetailsStatus: \"idle\",\n  customerRemarks: [], // New field for storing customer remarks\n  remarksStatus: \"idle\", // New status field for customer remarks\n};\n\nexport const getCustomers = createAsyncThunk(\n  \"customer/getCustomers\",\n  async () => {\n    // await sleep(3000)\n    const { data } = await axios.get(\"/customers\");\n    return data;\n  },\n);\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\n  \"customer/getCustomersProfileCompleteness\",\n  async () => {\n    await sleep(200);\n    const { data } = await axios.get(\"/profile\");\n    return data;\n  },\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  },\n);\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerServicesHistory\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  },\n);\n\nexport const getCustomerRemarks = createAsyncThunk(\n  \"customer/getCustomerRemarks\",\n  async (customerId) => {\n    const { data } = await axios.get(\"/customers/remarks/\" + customerId);\n    console.log(\"Remarks in thunk\", data);\n    return data;\n  },\n);\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer: (state, action) => {\n      state.customerDetails = action.payload;\n    },\n    clearCurrentCustomer: (state, action) => {\n      state.customerDetails = []\n      state.customerDetailsStatus = \"idle\"\n    }\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const curr_state_obj = {};\n      const res_obj = {};\n      state.customers.map((e) => (curr_state_obj[e.id] = e));\n      action.payload.customer_details.map((e) => (res_obj[e.id] = e));\n      state.customers = Object.values(Object.assign(curr_state_obj, res_obj));\n    },\n    [getCustomers.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerDetails.pending]: (state) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload;\n    },\n    [getCustomerDetails.rejected]: (state) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion\n          ? action.payload.profileCompletion[customer.id]\n          : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n      state.customers = updatedCustomers;\n      state.fetchedPofileCompleteness = true;\n    },\n    [getCustomersProfileCompleteness.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n    [getCustomerRemarks.pending]: (state) => {\n      state.remarksStatus = \"loading\";\n    },\n    [getCustomerRemarks.fulfilled]: (state, action) => {\n      state.remarksStatus = \"success\";\n      state.customerRemarks = action.payload; // Assuming API returns an array of remarks\n    },\n    [getCustomerRemarks.rejected]: (state) => {\n      state.remarksStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer, clearCurrentCustomer } = customerSlice.actions;\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  console.log(\"topProps\", topProps);\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setCurrentCustomer } from \"../redux/customerSlice\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\nexport default function TableDisplay({\n  customerList,\n  fetchedPofileCompleteness,\n  topProps,\n}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const profileCompletion = (percentage) => {\n    return (\n      <Box>\n        <RingProgress\n          size={45}\n          thickness={3}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 25\n                  ? \"#1D9B25\"\n                  : percentage > 50\n                  ? \"#CFA400\"\n                  : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </Box>\n    );\n  };\n\n  const handleRowClick = (customer) => {\n    navigate(\"/dashboard\");\n    dispatch(setCurrentCustomer(customer));\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorFn: (row) => `${row.profiling?.personal_details?.full_name}`,\n        id: \"name\",\n        header: \"Name\",\n      },\n      {\n        accessorFn: (row) => `CLID${row.id.substr(0, 6)}....`,\n        id: \"customerId\",\n        header: \"Customer Id\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 400,\n      },\n      {\n        accessorKey: \"source\",\n        header: \"Source\",\n      },\n      {\n        accessorKey: \"mobile\",\n        header: \"Mobile\",\n      },\n      {\n        accessorFn: (row) =>\n          !fetchedPofileCompleteness ? (\n            <Loader type={\"dots\"} color=\"#0d5ff9\" />\n          ) : (\n            profileCompletion(row.profile_completion)\n          ),\n        id: \"profileCompletion\",\n        header: \"Profile Completion\",\n      },\n    ],\n    [fetchedPofileCompleteness],\n  );\n\n  return (\n    <Box>\n      <StyledTable\n        columns={columns}\n        data={customerList}\n        onRowClick={handleRowClick}\n        topProps={topProps}\n      />\n    </Box>\n  );\n}\n","import { LoadingOverlay, Title, Button, ActionIcon } from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\nimport { IconRefresh } from \"@tabler/icons-react\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n  const { status, customers, fetchedPofileCompleteness } = useSelector(\n    (state) => state.customer,\n  );\n\n  useEffect(() => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  }, [dispatch]);\n\n  const handleRefresh = () => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  };\n\n  const refreshButton = (\n    <ActionIcon c={\"#0d5ff9\"} size={\"sm\"} onClick={handleRefresh}>\n      <IconRefresh />\n    </ActionIcon>\n  );\n\n  if (status === \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n            <div style={{ padding: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"20px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <span>\n                  <Title pl={5}>Customers</Title>\n                </span>\n              </div>\n              <TableDisplay\n                customerList={customers}\n                fetchedPofileCompleteness={fetchedPofileCompleteness}\n                topProps={() => refreshButton}\n              />\n            </div>\n          </span>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconClipboardText,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #0d5ff9\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0D5FF9\",\n      boxShadow: `\n rgba(13, 95, 249, 1) 0px 1px 1px,\n rgba(13, 95, 249, 0.5) 0px 2px 2px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 3px 5px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"remarks\", label: \"Remarks\", icon: <IconClipboardText /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  { link: \"fi\", label: \"Financial Information\", icon: <IconReportMoney /> },\n  { link: \"id\", label: \"Insurance Details  \", icon: <IconCarCrash /> },\n  { link: \"vd\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const location = useLocation();\n\n  const links = data.map((item) => (\n    <NavLink\n      className={cx(classes.link, {\n        [classes.linkActive]: item.label === active,\n      })}\n      icon={item.icon}\n      component={Link}\n      variant=\"subtle\"\n      to={item.link}\n      label={item.label}\n      key={item.label}\n      onClick={(event) => {\n        setActive(item.label);\n      }}\n    />\n  ));\n\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to={\"/dashboard\"}\n            onClick={console.log(location)}\n            c=\"#0d5ff9\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    <Badge size=\"lg\">{percentage}%</Badge>\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            {/* <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group> */}\n        </Paper>\n    );\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  data: [],\n  profileTypes: [],\n  profileMappings: [],\n  status: \"idle\",\n  profileTypesStatus: \"idle\",\n  profileMappingsStatus: \"idle\",\n  error: null,\n};\n\n// Async thunk for fetching customer data\nexport const fetchData = createAsyncThunk(\n  \"profiling/fetchData\",\n  async (customerId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/customer-mapping/${customerId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile types\nexport const fetchProfileTypes = createAsyncThunk(\n  \"profiling/fetchProfileTypes\",\n  async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-types`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile mappings by profile ID\nexport const fetchProfileMappings = createAsyncThunk(\n  \"profiling/fetchProfileMappings\",\n  async (profileId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/profile-customer-mappings-by-profile/${profileId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\nconst profilingSlice = createSlice({\n  name: \"profiling\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error =\n          action.error.message ||\n          \"Failed to fetch profile types for the customer\";\n      })\n      .addCase(fetchProfileTypes.pending, (state) => {\n        state.profileTypesStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileTypes.fulfilled, (state, action) => {\n        state.profileTypesStatus = \"succeeded\";\n        state.profileTypes = action.payload;\n      })\n      .addCase(fetchProfileTypes.rejected, (state, action) => {\n        state.profileTypesStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile types\";\n      })\n      .addCase(fetchProfileMappings.pending, (state) => {\n        state.profileMappingsStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileMappings.fulfilled, (state, action) => {\n        state.profileMappingsStatus = \"succeeded\";\n        state.profileMappings = []\n        state.profileMappings = action.payload;\n      })\n      .addCase(fetchProfileMappings.rejected, (state, action) => {\n        state.profileMappingsStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile mappings\";\n      });\n  },\n});\n\nexport default profilingSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"@mantine/core\";\nimport { StatsCard } from \"./StatCard\";\nimport { fetchData } from \"../../redux/profileTypesSlice\";\n\nconst Profiling = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(\n    (state) => state.profileTypesCustomerMapping.data,\n  );\n  const { customerDetails } = useSelector((state) => state.customer);\n\n  console.log(\"Profiling data\", profileData);\n\n  useEffect(() => {\n    dispatch(fetchData(customerDetails.id));\n  }, [dispatch, customerDetails]);\n\n  const stats = profileData.map((profile) => (\n    <Grid.Col key={profile.profileType.id} span={4}>\n      <StatsCard\n        title={profile.profileType.name}\n        url={profile.profileType.srcUrl}\n        percentage={Math.round(profile.profileCompletion)}\n      />\n    </Grid.Col>\n  ));\n\n  return (\n    <>\n      <Grid gutter=\"xl\">{stats}</Grid>\n    </>\n  );\n};\n\nexport default Profiling;\n\n","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport InfoTag from \"./InfoTag\";\nimport { fakerEN_IN as faker } from \"@faker-js/faker\";\nimport { useSelector } from \"react-redux\";\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { customerDetails } = useSelector((state) => state.customer);\n  console.log(\"state\", customerDetails);\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n  const memoizedSelectedCustomer = useMemo(\n    () => selectedCustomer,\n    [selectedCustomer.id, selectedCustomer.profiling.personal_details],\n  );\n\n  const randomDetails = useMemo(() => {\n    return {\n      randomLocation: faker.location.city(),\n      randomState: faker.location.state(),\n      randomAddress: faker.location.streetAddress(),\n      randomPincode: faker.location.zipCode(),\n    };\n  }, [memoizedSelectedCustomer]);\n\n\n  if (profile) {\n    return (\n      <>\n        <Container>\n\n          <div>\n            <Text fw={500}>Address</Text>\n            <Grid gutter=\"xl\">\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Location(city)\"}\n                  subject={randomDetails.randomLocation}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"State\"} subject={randomDetails.randomState} />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"PINCODE\"}\n                  subject={randomDetails.randomPincode}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"Country\"} subject=\"India\" />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Address Line\"}\n                  subject={randomDetails.randomAddress}\n                />\n              </Grid.Col>\n            </Grid>\n          </div>\n        </Container>\n      </>\n    );\n\n  } else {\n    return (\n      <>Fetching profile ...</>\n    )\n  }\n\n\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent, handleSubmitKeywords }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n  const [isDataChanged, setDataChanged] = useState(false);\n\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n\n\n  useEffect(() => {\n    const hasChanged = !_.isEqual(values, transformedData.map((obj) => obj.value));\n    setDataChanged(hasChanged);\n  }, [values, transformedData]);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          <div style={{ alignSelf: \"center\", padding: \"10px\" }}>\n            {isDataChanged && hasPermission(userPermissions, \"keywords_edit\") && <Button variant=\"light\"\n              onClick={() => handleSubmitKeywords()}\n            >\n              Update keywords\n            </Button>\n            }\n\n          </div>\n\n\n\n          {/* <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div> */}\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\n\nconst Interests = () => {\n  const dispatch = useDispatch()\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { customerKeywords, customerKeywordsStatus } = useSelector((state) => state.keyword);\n  const [interests, setInterests] = useState([])\n\n\n\n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      // Use _.uniq to remove duplicate values\n      const uniqueValues = _.uniq(_.map(values, 'value'));\n      return { category, values: uniqueValues };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n\n  useEffect(() => {\n    if (customerKeywordsStatus == 'success') {\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n      {customerKeywordsStatus == 'success' ?\n        <>\n          {interests.map((interest) => (\n            <React.Fragment key={interest.category}>\n              <Text fw={700}>{interest.category}</Text>\n              {interest.values.map((value) => (\n                <Badge\n                  key={value}\n                  variant=\"gradient\"\n                  gradient={{ from: 'indigo', to: 'cyan' }}\n                >\n                  {value}\n                </Badge>\n              ))}\n            </React.Fragment>\n          ))}\n        </> :\n        <>Loading interests...</>\n      }\n\n\n    </>\n\n  )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport { useDisclosure } from \"@mantine/hooks\";\nimport { Modal, Group, Button } from \"@mantine/core\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport { getCustomerRemarks } from \"../../redux/customerSlice\"; // replace 'path_to_your' with the actual path\n\nconst RemarkListings = () => {\n  const dispatch = useDispatch();\n  const customerRemarks = useSelector(\n    (state) => state.customer.customerRemarks,\n  );\n  const remarksStatus = useSelector((state) => state.customer.remarksStatus);\n  const currentCustomerId = useSelector(\n    (state) => state.customer.customerDetails.id,\n  ); // Assuming 'id' is the field in customerDetails for the customer's ID\n\n  const [opened, { open, close }] = useDisclosure(false);\n  const [selectedRemark, setSelectedRemark] = useState(null);\n\n  useEffect(() => {\n    if (currentCustomerId) {\n      dispatch(getCustomerRemarks(currentCustomerId));\n    }\n  }, [dispatch, currentCustomerId]);\n\n  // Define columns for StyledTable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"agentName\",\n        header: \"Agent Name\",\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Date\",\n      },\n      {\n        accessorKey: \"time\",\n        header: \"Time\",\n      },\n      {\n        accessorKey: \"remark\",\n        header: \"Remark\",\n      },\n    ],\n    [],\n  );\n\n  const handleRowClick = (remark) => {\n    setSelectedRemark(remark);\n    open();\n  };\n\n  return (\n    <>\n      <Box>\n        {remarksStatus === \"success\" ? (\n          <StyledTable\n            columns={columns}\n            data={customerRemarks}\n            onRowClick={handleRowClick}\n          />\n        ) : remarksStatus === \"loading\" ? (\n          <p>Loading...</p>\n        ) : (\n          <p>Failed to load remarks.</p>\n        )}\n      </Box>\n\n      <Modal opened={opened} onClose={close} title=\"Remark Details\" centered>\n        {selectedRemark && (\n          <div>\n            <p>\n              <strong>Agent Name:</strong> {selectedRemark.agentName}\n            </p>\n            <p>\n              <strong>Date:</strong> {selectedRemark.date}\n            </p>\n            <p>\n              <strong>Time:</strong> {selectedRemark.time}\n            </p>\n            <p>\n              <strong>Remark:</strong> {selectedRemark.remark}\n            </p>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default RemarkListings;\n","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Financial Information';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'Acc. No', 'Variant', 'IFSC code', 'Branch'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    acc_no: '',\n    variant: '',\n    ifsc: '',\n    branch: '',\n});\n\n\nexport function FinancialInformation() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Insurance Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Source', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    source: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function InsuranceDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Vehicle Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'VIN/Chassis no.', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    vin: '',\n    product_type: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function VehicleDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { Text } from '@mantine/core';\nimport React from 'react';\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: \"-10px\" }}>\n            <Text fz={'sm'} c='dimmed' style={{ alignSelf: \"start\" }}>{title}</Text>\n            <Text style={{ alignSelf: \"end\" }}>{subject}</Text>\n        </div>\n    );\n};\n\nexport default InfoTag;\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n  Space,\n  Center,\n  RingProgress,\n  Text,\n  Badge\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\nimport Remarks from \"../../components/AgentPages/Remarks\";\nimport RemarkListings from \"../../components/Remarks/RemarkListings\";\nimport { FinancialInformation } from \"../../components/FinancialInformation/FinancialInformation\";\nimport { InsuranceDetails } from \"../../components/InsuranceDetails/InsuranceDetails\";\nimport { VehicleDetails } from \"../../components/VehicleDetails/VehicleDetails\";\nimport { IconUserSquareRounded } from '@tabler/icons-react';\nimport { Avatar } from '@mantine/core';\nimport { IconUser } from \"@tabler/icons-react\";\nimport InfoTag from \"./InfoTag\";\n\n\n\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const [profile, setProfile] = useState({\n    ...customerDetails.profiling.personal_details,\n  });\n  const { profile_completion } = customerDetails;\n\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  const handleSubmitKeywords = () => {\n\n    const payload = {\n      customerId: customerDetails.id,\n      keywordsPayload: keywordValues,\n    };\n    setNotification(true);\n    sleep(5000).then((data) => setNotification(false));\n    dispatch(updateKeywords(payload));\n\n\n  }\n\n  const profileCompletion = (percentage = 0) => {\n    return (\n      <div>\n\n        <RingProgress\n          mt={0}\n          size={100}\n          thickness={8}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 75\n                  ? \"#1D9B25\"\n                  : percentage > 60\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </div>\n    );\n  };\n\n  // useEffect(() => {\n  //   if (\n  //     routesClicked.at(-2) &&\n  //     routesClicked.at(-2) === \"/dashboard/keywords\"\n  //   ) {\n  //     const updateKeywordPayload = {\n  //       customerId: customerDetails.id,\n  //       keywordsPayload: keywordValues,\n  //     };\n\n  //     setNotification(true);\n  //     sleep(5000).then((data) => setNotification(false));\n\n  //     dispatch(updateKeywords(updateKeywordPayload));\n  //   }\n  // }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Grid.Col span={12}>\n              <Card>\n                <Grid>\n                  <Grid.Col span={2}>\n                    <Grid.Col span={12} style={{ textAlign: \"center\" }}>\n                      <Avatar color=\"blue\" size=\"lg\">\n                        <IconUser size=\"lg\" />\n                      </Avatar>\n                    </Grid.Col>\n                    {/* <Grid.Col span={12}>\n                      <Badge color=\"yellow\" variant=\"filled\" size=\"lg\">HNI</Badge>\n                    </Grid.Col> */}\n\n                  </Grid.Col>\n\n                  <Grid.Col span={4}>\n                    <Text fw={500}>Basic Info</Text>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Name\"} subject={profile.full_name} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Email Address\"} subject={customerDetails.email} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Gender\"} subject={profile.gender} />\n                    </Grid.Col>\n                  </Grid.Col>\n                  <Grid.Col span={6}>\n                    <Grid.Col span={12} >\n                      <Center> {profileCompletion(profile_completion)}</Center>\n                    </Grid.Col>\n                  </Grid.Col>\n\n                </Grid>\n              </Card>\n            </Grid.Col>\n\n\n\n            <Grid.Col span={12}>\n              <Card shadow={\"lg\"} radius={\"md\"}>\n                <Routes>\n                  <Route>\n                    <Route\n                      index\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route\n                      path=\"/personalInformation\"\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route path=\"/profiling\" element={<Profiling />} />\n                    <Route\n                      path=\"/keywords\"\n                      element={\n                        <KeywordsEntry\n                          submitKeywords={submitKeywords}\n                          updateKeywordValuesParent={updateKeywordValuesParent}\n                          handleSubmitKeywords={handleSubmitKeywords}\n                        />\n                      }\n                    />\n\n                    <Route path=\"/interests\" element={<Interests />} />\n                    <Route path=\"/remarks\" element={<RemarkListings />} />\n                    <Route path=\"/occupation\" element={<Occupation />} />\n                    <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                    <Route path=\"/activity\" element={<Activity />} />\n                    <Route path=\"/fi\" element={<FinancialInformation />} />\n                    <Route path=\"/id\" element={<InsuranceDetails />} />\n                    <Route path=\"/vd\" element={<VehicleDetails />} />\n                  </Route>\n                </Routes>\n              </Card>\n\n            </Grid.Col>\n\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Syncing keywords\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setAuth: (state, action) => {\n      const storage = JSON.parse(localStorage.getItem(\"login\"));\n      if (Object.keys(storage).length > 0) {\n        const { email, _id } = storage\n        state.user.email = email;\n        state.user._id = _id;\n        state.status = \"success\";\n        state.isLoggedIn = true;\n      } else {\n        state.isLoggedIn = false;\n      }\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n  \"campaignManagement/fetchRowData\",\n  async (_, { getState }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n    const responses = [];\n    let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n    for (const rowKey of Object.keys(state.rows)) {\n      const row = state.rows[rowKey];\n      if (!row.first || !row.second || !row.third) {\n        throw new Error(\"Row has empty/default values. Fetching aborted.\");\n      }\n\n      const body = {\n        information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n        category: row.second.toLowerCase().split(\" \").join(\"_\"),\n        value: row.third.toLowerCase().split(\" \").join(\"_\"),\n      };\n\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n      const customerIDsForThisRow = data.map((customer) => customer.id);\n\n      if (commonCustomerIDs === null) {\n        commonCustomerIDs = new Set(customerIDsForThisRow);\n      } else {\n        commonCustomerIDs = new Set(\n          [...commonCustomerIDs].filter((id) =>\n            customerIDsForThisRow.includes(id),\n          ),\n        );\n      }\n\n      responses.push({\n        rowKey,\n        figures: commonCustomerIDs.size,\n        customerIDs: [...commonCustomerIDs],\n      });\n    }\n    return responses;\n  },\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n  \"campaignManagement/fetchFiguresForRow\",\n  async (rowId, { getState }) => {\n    const state = getState().campaignManagement;\n    const row = state.rows[rowId];\n    if (!row || !row.first || !row.second || !row.third) {\n      throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n    }\n\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n    const body = {\n      information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n      category: row.second.toLowerCase().split(\" \").join(\"_\"),\n      value: row.third.toLowerCase().split(\" \").join(\"_\"),\n    };\n\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n    const customerIDsForThisRow = data.map((customer) => customer.id);\n\n    // Retrieve customer IDs from all preceding rows\n    let commonCustomerIDs = customerIDsForThisRow;\n    for (const otherRowId of Object.keys(state.rows)) {\n      if (Number(otherRowId) < Number(rowId)) {\n        const otherRow = state.rows[otherRowId];\n        commonCustomerIDs = commonCustomerIDs.filter((id) =>\n          otherRow.customerIDs.includes(id),\n        );\n      }\n    }\n\n    return {\n      rowId,\n      figures: commonCustomerIDs.length,\n      customerIDs: commonCustomerIDs,\n    };\n  },\n);\n\nexport const createCampaign = createAsyncThunk(\n  \"campaignManagement/createCampaign\",\n  async (_, { getState, rejectWithValue }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n    const keywordsUsed = state.selectedCombinations\n      .filter(\n        (combination) => combination.first === \"Interests\" && combination.third,\n      )\n      .map((combination) => combination.third.value);\n\n    const body = {\n      name: state.eventName,\n      eventBased: true,\n      triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n      type: \"EMAIL\",\n      recurrenceType:\n        state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n      start: state.tabData.Email.timelineState.startDate,\n      end: state.tabData.Email.timelineState.endDate,\n      templateText: state.tabData.Email.content,\n      customerIDs: state.allCustomerIDs,\n      keywordsUsed,\n    };\n\n    console.log(\"Publish body\", body);\n\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      console.log(\"response\", response);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create campaign\");\n      }\n\n      return response.json();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst initialState = {\n  isModalOpen: false,\n  dropdownData: {\n    \"Personal Information\": {\n      Age: [\"25-30\", \"31-35\"],\n      Gender: [\"Male\", \"Female\"],\n      \"Marital Status\": [\"Single\", \"Married\"],\n      Location: [\"Delhi\", \"Mumbai\"],\n    },\n    Interests: {},\n    Occupation: \"\",\n    Activity: \"\",\n    \"Family Details\": \"\",\n    \"Financial Information\": \"\",\n    \"Insurance Details\": \"\",\n    Vehicle: \"\",\n    Health: \"\",\n  },\n  rows: {\n    [Date.now().toString()]: {\n      first: \"\",\n      second: \"\",\n      third: \"\",\n      figures: null,\n      customerIDs: [],\n    },\n  },\n  allCustomerIDs: [],\n  selectedCombinations: [],\n  eventName: \"\",\n  eventDate: null,\n  step: 1,\n  activeTab: \"Email\",\n  startDate: null,\n  endDate: null,\n  tabData: {\n    Email: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 500,\n    },\n    SMS: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 160,\n    },\n    Notification: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 250,\n    },\n    Whatsapp: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 2000,\n    },\n  },\n  radarData: [\n    { count: 120, subject: \"EZ-Auto\" },\n    { count: 98, subject: \"Cyberior\" },\n    { count: 86, subject: \"Homecare\" },\n    { count: 99, subject: \"E-Portal 2.0\" },\n    { count: 85, subject: \"EZ-Travel\" },\n  ],\n  downloadDataStatus: null,\n  error: null,\n  rowIdsArray: [],\n  loadingStates: {},\n  errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n  name: \"campaignManagement\",\n  initialState,\n  reducers: {\n    toggleModal: (state, action) => {\n      state.isModalOpen = action.payload;\n    },\n    updateDropdownData: (state, action) => {\n      state.dropdownData = action.payload;\n    },\n    updateRows: (state, action) => {\n      state.rows = action.payload;\n      state.rowIdsArray = [];\n      state.allCustomerIDs = [\n        ...new Set(\n          Object.values(state.rows)\n            .filter((row) => row.customerIDs && row.customerIDs.length)\n            .flatMap((row) => row.customerIDs),\n        ),\n      ];\n    },\n    updateSelectedCombinations: (state, action) => {\n      state.selectedCombinations = action.payload;\n    },\n    setCampaignName: (state, action) => {\n      state.campaignName = action.payload;\n    },\n    setEventName: (state, action) => {\n      state.eventName = action.payload;\n    },\n    setEventDate: (state, action) => {\n      state.eventDate = action.payload;\n    },\n    setStep: (state, action) => {\n      state.step = action.payload;\n    },\n    setStartDate: (state, action) => {\n      state.startDate = action.payload;\n    },\n    setEndDate: (state, action) => {\n      state.endDate = action.payload;\n      state.eventDate = action.payload;\n    },\n    setActiveTab: (state, action) => {\n      state.activeTab = action.payload;\n    },\n    updateTabData: (state, action) => {\n      state.tabData = action.payload;\n    },\n    setRadarData: (state, action) => {\n      state.radarData = action.payload;\n    },\n    resetModal: (state) => {\n      state.step = initialState.step;\n      state.campaignName = initialState.campaignName;\n      state.eventName = initialState.eventName;\n      state.activeTab = initialState.activeTab;\n      state.tabData = initialState.tabData;\n      state.eventDate = initialState.eventDate;\n    },\n  },\n  extraReducers: {\n    [fetchRowData.pending]: (state) => {\n      state.downloadDataStatus = \"loading\";\n    },\n    [fetchRowData.fulfilled]: (state, action) => {\n      state.downloadDataStatus = \"success\";\n\n      action.payload.forEach((item) => {\n        state.rows[item.rowKey].figures = item.figures;\n        state.rows[item.rowKey].customerIDs = item.customerIDs;\n      });\n\n      state.rowIdsArray = [\n        ...new Set([\n          ...state.rowIdsArray,\n          ...action.payload.map((item) => item.rowKey),\n        ]),\n      ];\n\n      const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n      state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n    },\n    [fetchRowData.rejected]: (state, action) => {\n      state.downloadDataStatus = \"failed\";\n      state.error = action.error.message;\n    },\n    [fetchFiguresForRow.pending]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"loading\";\n      state.errors[rowId] = null;\n    },\n    [fetchFiguresForRow.fulfilled]: (state, action) => {\n      const { rowId, figures, customerIDs } = action.payload;\n      state.rows[rowId].figures = figures;\n      state.rows[rowId].customerIDs = customerIDs;\n      state.loadingStates[rowId] = \"loaded\";\n\n      const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n      if (Number(rowId) === lastRowId) {\n        state.allCustomerIDs = [...customerIDs];\n      }\n    },\n    [fetchFiguresForRow.rejected]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"error\";\n      state.errors[rowId] = action.error.message;\n    },\n  },\n});\n\nexport const {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n  setCampaignName,\n  setEventName,\n  setEventDate,\n  setStep,\n  setStartDate,\n  setEndDate,\n  setActiveTab,\n  updateTabData,\n  setRadarData,\n  resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nexport const fetchSources = createAsyncThunk(\n  \"campaign/fetchSources\",\n  async () => {\n    const response = {\n      sources: [],\n    };\n    return response.sources;\n  },\n);\n\nexport const fetchCampaignNames = createAsyncThunk(\n  \"campaign/fetchCampaignNames\",\n  async () => {\n    const response = {\n      campaignNames: [],\n    };\n    return response.campaignNames;\n  },\n);\n\nconst initialState = {\n  data: [],\n  sources: [\"Homecare\", \"Cyberior\", \"EZ-Auto\", \"EZ-Travel\", \"E-Portal 2.0\"],\n  campaignNames: [\"Campaign 1\", \"Campaign 2\", \"Campaign 3\"],\n  selectedCampaign: \"All\",\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaign = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload.map((item) => ({\n          name: item.campaignName,\n          delivered: item.totalSent,\n          interested: item.success,\n          failure: item.failed,\n          converted: 0,\n        }));\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      })\n      .addCase(fetchSources.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.sources = action.payload;\n        }\n      })\n      .addCase(fetchCampaignNames.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.campaignNames = action.payload;\n        }\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async (source) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async (source) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`,\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  campaignStatus: \"idle\",\n  campaigns: [],\n  error: null,\n};\n\nexport const fetchCampaigns = createAsyncThunk(\n  \"campaigns/fetchCampaigns\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/campaign`,\n      );\n      console.log(\"Campaign List response data\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching campaigns:\", error);\n      return rejectWithValue(\n        error.response?.data || \"Unable to fetch campaigns\",\n      );\n    }\n  },\n);\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchCampaigns.pending]: (state) => {\n      state.campaignStatus = \"loading\";\n      state.error = null; // Reset the error state\n    },\n    [fetchCampaigns.fulfilled]: (state, action) => {\n      console.log(\"Received campaigns:\", action.payload);\n      state.campaignStatus = \"success\";\n      state.campaigns = action.payload.map((campaign) => ({\n        ...campaign,\n        status: determineCampaignStatus(campaign),\n      }));\n      console.log(\"Final campaigns for table:\", action.payload);\n    },\n    [fetchCampaigns.rejected]: (state, action) => {\n      state.campaignStatus = \"failed\";\n      state.error = action.payload;\n    },\n  },\n});\n\nfunction determineCampaignStatus(campaign) {\n  const currentDate = new Date();\n  const startDate = new Date(campaign.start);\n  const endDate = new Date(campaign.end);\n\n  if (endDate < currentDate) return \"Closed\";\n  if (startDate > currentDate) return \"Pending\";\n  if (currentDate >= startDate && currentDate <= endDate)\n    return campaign.isActive ? \"On-going\" : \"Cancelled\";\n  return \"Unknown\";\n}\n\nexport default campaignSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\nimport profilingSlice from \"./profileTypesSlice\";\nimport campaignListSlice from \"./campaignListSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n    profileTypesCustomerMapping: profilingSlice,\n    campaignListSlice: campaignListSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n      navigate(\"/\");\n    }\n  }, [status, navigate]);\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#0d5ff9\", to: \"#F3F6FF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#0d5ff9\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      // topProps={() => (\n      //   <Flex>\n      //     <StyledButton\n      //       compact\n      //       onClick={() => {\n      //         console.log(\"Create Permission clicked!\");\n      //       }}\n      //     >\n      //       Create Permission\n      //     </StyledButton>\n      //   </Flex>\n      // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#0d5ff9\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#0d5ff9\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#0d5ff9\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n      const currentCombination = {\n        first: row.first,\n        second: row.second,\n        third: row.first === \"Interests\" ? option.value : option,\n      };\n\n      const isSelectedCombination = selectedCombinations.some(\n        (selected) =>\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      const isSelectedInCurrentRow = selectedCombinations.some(\n        (selected) =>\n          selected.rowId === rowId &&\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      return !isSelectedCombination || isSelectedInCurrentRow;\n    })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#0d5ff9\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#0d5ff9\"\n          fill=\"#0d5ff9\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#0d5ff9\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        border: \"2px solid #0d5ff9\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  useEffect(() => {\n    // Check if the Redux state `eventDate` is different from the local state `endDate`\n    // and if so, update the local state to match the Redux state\n    if (eventDate && (!results.endDate || results.endDate !== eventDate)) {\n      setResults((prevState) => ({\n        ...prevState,\n        endDate: eventDate,\n      }));\n\n      // Optionally, if you want to update the Redux state as well\n      dispatch(setEventDate(eventDate));\n    }\n  }, [eventDate, dispatch, results.endDate]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#0d5ff9\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#0d5ff9\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#0d5ff9\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#0d5ff9\"}\n                      bg={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#F3F6FF\",\n                          color: \"#0d5ff9\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${activeTab === tab ? \"show active\" : \"\"\n                      }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                              <div className=\"character-limit-error\">\n                                Character limit exceeded!\n                              </div>\n                            )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#F3F6FF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import {\n  ActionIcon,\n  Box,\n  Flex,\n  Select,\n  Text,\n  Title,\n  Loader,\n  Group,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  fetchData,\n  fetchSources,\n  fetchCampaignNames,\n  selectCampaign,\n} from \"../../redux/campaignSlice\";\nimport { Link } from \"react-router-dom\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector((state) => state.campaign.data);\n  const sources = useSelector((state) => state.campaign.sources);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n      dispatch(fetchSources());\n      dispatch(fetchCampaignNames());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#0d5ff9\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              data={[\"All\", ...campaignNames]}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={(value) => dispatch(selectCampaign(value))}\n            />\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Source(s)</Text>}\n              data={sources}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"name\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#F3F6FF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#0d5ff9\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#F3F6FF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#0d5ff9\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#0d5ff9\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#0d5ff9\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"}>\n              <Stack>\n                <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                  <Text fw={\"bold\"}>Communications</Text>\n                  <Center>\n                    <ActionIcon c={\"#0d5ff9\"}>\n                      <IconTableExport />\n                    </ActionIcon>\n                    <Text fw={\"bold\"}>Export</Text>\n                  </Center>\n                </Flex>\n                <Box>\n                  <VerticalBarChart />\n                </Box>\n              </Stack>\n            </Card>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import {\n  Card,\n  createStyles,\n  Table,\n  ScrollArea,\n  Flex,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { IconEdit, IconTrash } from \"@tabler/icons-react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCampaigns } from \"../../../../redux/campaignListSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  header: {\n    backgroundColor: theme.colors.blue[1],\n    \"& th\": {\n      borderColor: theme.colors.gray[4],\n    },\n  },\n  cell: {\n    borderColor: theme.colors.gray[4],\n    \"&:not(:last-of-type)\": {\n      marginRight: theme.spacing.xs,\n    },\n  },\n}));\n\nconst AllCampaigns = () => {\n  const dispatch = useDispatch();\n  const campaignState = useSelector((state) => state.campaignListSlice);\n  const { classes } = useStyles();\n\n  useEffect(() => {\n    dispatch(fetchCampaigns());\n  }, [dispatch]);\n\n  if (campaignState.campaignStatus === \"loading\") {\n    return <p>Loading...</p>;\n  }\n  if (campaignState.campaignStatus === \"failed\") {\n    return <p>Error loading campaigns. Details: {campaignState.error}</p>;\n  }\n\n  return (\n    <Card>\n      <ScrollArea>\n        <Table striped highlightOnHover>\n          <thead className={classes.header}>\n            <tr>\n              <th>Campaign Name</th>\n              <th>Communication Type</th>\n              <th>Total No. of Customers</th>\n              <th>Create Campaign Date</th>\n              <th>Event Date</th>\n              <th>Campaign Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {campaignState.campaigns && campaignState.campaigns.length > 0 ? (\n              campaignState.campaigns.map((campaign) => (\n                <tr key={campaign.id}>\n                  <td className={classes.cell}>{campaign.name}</td>\n                  <td className={classes.cell}>{campaign.type}</td>\n                  <td className={classes.cell}>{campaign.customers.length}</td>\n                  <td className={classes.cell}>\n                    {new Date(campaign.created_at).toLocaleDateString()}\n                  </td>\n                  <td className={classes.cell}>\n                    {new Date(campaign.end).toLocaleDateString()}\n                  </td>\n                  <td className={classes.cell}>{campaign.status}</td>\n                  <td className={classes.cell}>\n                    {campaign.status !== \"Closed\" && (\n                      <>\n                        <Flex>\n                          <ActionIcon c=\"lightblue\">\n                            <IconEdit />\n                          </ActionIcon>\n                          <ActionIcon c=\"red\">\n                            <IconTrash />\n                          </ActionIcon>\n                        </Flex>\n                      </>\n                    )}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"7\">No campaigns available</td>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n      </ScrollArea>\n    </Card>\n  );\n};\n\nexport default AllCampaigns;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\nimport AllCampaigns from \"../AllCampaigns/AllCampaigns\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(\"keywords fetched for analysis\", keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n              ...updatedDropdownData[keyword.category],\n              { label: keyword.value, value: keyword.id },\n            ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Data Analysis\n            </Text>\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#0d5ff9\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#0d5ff9\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#0d5ff9\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n      <AllCampaigns />\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#0d5ff9\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#F3F6FF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#F3F6FF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#F3F6FF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#0d5ff9\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#0d5ff9\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#F3F6FF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #0d5ff9\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\nimport { IconUserDollar } from \"@tabler/icons-react\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#00239c,#0d5ff9)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#0d5ff9)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            //            boxShadow: `\n            // rgba(13, 95, 249, 0.17) 0px -23px 25px 0px inset,\n            // rgba(13, 95, 249, 0.15) 0px -36px 30px 0px inset,\n            // rgba(13, 95, 249, 0.1) 0px -79px 40px 0px inset,\n            // rgba(13, 95, 249, 0.06) 0px 2px 1px,\n            // rgba(13, 95, 249, 0.09) 0px 4px 2px,\n            // rgba(13, 95, 249, 0.09) 0px 8px 4px,\n            // rgba(13, 95, 249, 0.09) 0px 16px 8px,\n            // rgba(13, 95, 249, 0.09) 0px 32px 16px\n            //    `,\n\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )}\n\n\n              {true && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/profile\"\n                  label=\"Profiles\"\n                  icon={<IconUserDollar size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/profile\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#F3F6FF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n        id: data.id,\n        roleId: data.roleId,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email.split(\"@\").length > 0 ? row.original.email.split(\"@\")[0] : \"\"}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          active\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton compact onClick={handleAddUserModal}>\n        //       + Create User\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            My Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#0d5ff9\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#0d5ff9\",\n                      \"&:hover\": {\n                        backgroundColor: \"#F3F6FF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#0d5ff9\",\n                  color: \"#0d5ff9\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F3F6FF\",\n                    color: \"#0d5ff9\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Change Password\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = ({ source }) => {\n  console.log(source);\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\nimport { useState } from \"react\";\n\nconst CustomerProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = ({ source }) => {\n  const dispatch = useDispatch();\n  console.log(\"source for profiles\", source);\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n  console.log(\"Chart data for profiles\", chartData);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      onMouseEnter={() => dispatch(setHoveredItem(text))}\n      onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  const dispatch = useDispatch();\n  const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#F3F6FF\"}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#0d5ff9\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#0d5ff9\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            onMouseEnter={() => handleMouseEnter(entry.name)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                sx={{\n                  transition: \"transform 0.3s ease\",\n                  transform:\n                    hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                  backgroundImage:\n                    hoveredItem === entry.name\n                      ? \"radial-gradient(#000000 20% ,#0d5ff9)\"\n                      : \"none\",\n                }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n  Group,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Flex style={{ width: \"100%\", alignItems: \"flex-start\" }}>\n      {/* First Card for Selectors and Pie Chart */}\n      <Card\n        shadow={\"lg\"}\n        radius={\"md\"}\n        style={{ marginRight: \"20px\", flex: 3 }}\n      >\n        <Box>\n          <Flex justify={\"space-between\"}>\n            <Center>\n              <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                Profile\n              </Text>\n            </Center>\n            <Center>\n              <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                <IconArrowRight />\n              </ActionIcon>\n            </Center>\n          </Flex>\n        </Box>\n        <Grid grow>\n          <Grid.Col span={4}>\n            <Stack>\n              <StyledSelect\n                disabled={status === \"loading\"}\n                label={\"Profile\"}\n                placeholder={\"Select Profile(s)\"}\n                data={profileOptions}\n                onChange={(value) => setSelectedProfile(value)}\n              />\n              <StyledSelect\n                disabled={status === \"loading\"}\n                label={\"Demographics\"}\n                placeholder={\"Select Main Demographics\"}\n                data={demographicOptions}\n                onChange={(value) => setSelectedDemographic(value)}\n              />\n            </Stack>\n          </Grid.Col>\n          <Grid.Col span={8}>\n            <Center>\n              {status === \"loading\" ? (\n                <Loader c=\"5c0ff2\" size=\"lg\" />\n              ) : (\n                <ProfilePieChart />\n              )}\n            </Center>\n          </Grid.Col>\n        </Grid>\n      </Card>\n\n      {/* Second Card for Profile Data */}\n      <Card shadow={\"lg\"} radius={\"md\"}>\n        <Center style={{ height: \"100%\" }}>\n          <ProfileDataCard />\n        </Center>\n      </Card>\n    </Flex>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useMemo, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCustomerDetails } from \"../redux/customerSlice\";\nimport { useSelector } from \"react-redux\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\n\nexport default function ProfileTableDisplay({ customerList }) {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const customerDetailsStatus = useSelector(state => state.customer.customerDetailsStatus)\n\n\n\n  const handleRowClick = (customer) => {\n    dispatch(getCustomerDetails(customer.customerId));\n  };\n\n  useEffect(() => {\n    if (customerDetailsStatus === \"success\") {\n      navigate(\"/dashboard\");\n    }\n\n    console.log(customerDetailsStatus);\n  }, [customerDetailsStatus, navigate]);\n\n  const columns = [\n    {\n      accessorKey: \"customerName\",\n      header: \"Name\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"email\",\n      header: \"Email\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"source\",\n      header: \"Source\",\n    },\n    {\n      accessorKey: \"level\",\n      header: \"Level\",\n    }\n  ];\n\n\n\n\n  return (\n    <Box style={{ marginTop: \"30px\" }}>\n      <StyledTable columns={columns} data={customerList} onRowClick={handleRowClick} />\n    </Box>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProfileTypes, fetchProfileMappings } from '../../redux/profileTypesSlice';\nimport { Grid, Card, Image, Text, Switch } from '@mantine/core';\nimport ProfileTableDisplay from '../../components/ProfileTableDisplay';\nimport { Button } from '@mantine/core';\nimport { IconArrowBack } from '@tabler/icons-react';\nimport { clearCurrentCustomer } from '../../redux/customerSlice';\nimport assets from \"./assets\";\n\n\nconst Profile = () => {\n  const [checked, setChecked] = React.useState(false);\n\n  const dispatch = useDispatch();\n  const profileTypes = useSelector((state) => state.profileTypesCustomerMapping.profileTypes);\n  const status = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const error = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const profileMappings = useSelector((state) => state.profileTypesCustomerMapping.profileMappings);\n  const profileMappingsStatus = useSelector((state) => state.profileTypesCustomerMapping.profileMappingsStatus);\n  const [showTable, setShowTable] = useState(false)\n  console.log(profileMappingsStatus);\n\n\n  useEffect(() => {\n    dispatch(clearCurrentCustomer())\n    dispatch(fetchProfileTypes());\n\n  }, [dispatch]);\n\n  const handleProfileTypeClick = (profileTypeId) => {\n    // Call fetchProfileMappings with the profileTypeId\n    dispatch(fetchProfileMappings(profileTypeId));\n    setShowTable(true)\n  };\n\n  const handleTableRender = () => {\n    if (profileMappingsStatus == 'loading') {\n      return <>Loading ...</>\n    } else if (profileMappingsStatus == 'failed') {\n      return <>Something went wrong</>\n    } else if (profileMappingsStatus == 'succeeded') {\n      return <>\n        <ProfileTableDisplay customerList={profileMappings} />\n\n      </>\n    }\n  }\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Profile Types</h1>\n      <Grid>\n        {!showTable ? profileTypes.map((profileType) => (\n          <Grid.Col span={3} key={profileType.id}>\n            <Card shadow=\"sm\" padding=\"lg\" component=\"a\" target=\"_blank\">\n              <Card.Section>\n                <Image\n                  src={assets[profileType.name]}\n                  style={{ width: '200px', height: '200px' }} // Set fixed width and height\n                />\n              </Card.Section>\n\n              <Card.Section style={{ padding: '10px' }}>\n                <Text\n                  fw={500}\n                  size=\"lg\"\n                  style={{ display: 'inline-block', marginRight: '10px', cursor: 'pointer' }}\n                  onClick={() => handleProfileTypeClick(profileType.id)}\n                >\n                  {profileType.name}\n                </Text>\n\n                <Switch\n                  checked={checked}\n                  onChange={(event) => setChecked(event.currentTarget.checked)}\n                  style={{ display: 'inline-block', float: 'right' }}\n                />\n              </Card.Section>\n            </Card>\n          </Grid.Col>\n        )) : <><Button onClick={() => setShowTable(false)} variant='text'><IconArrowBack /> Back </Button> <br /> {handleTableRender()}</>}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\nimport { setAuth } from \"./redux/authSlice\";\nimport Profile from './pages/Profile/Profile'\nimport AllCampaigns from \"./pages/Campaign/components/AllCampaigns/AllCampaigns\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  useEffect(() => {\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\n    if (isLoggedIn) {\n      dispatch(setAuth());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {/* {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/\" element={<BoardStats />} />\n              ) : (\n                <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n              )} */}\n              <PrivateRoute path=\"/\" element={<Root />} />\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute path=\"/users\" element={<PermissionDenied />} />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n              <PrivateRoute path=\"/profile\" element={<Profile />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}