{"version":3,"sources":["i18n.js","utils/sleep.js","redux/customerSlice.js","redux/elasticCustomersSlice.js","StyledComponents/StyledTable.jsx","StyledComponents/StyledTable3.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/StatCard.jsx","redux/profileTypesSlice.js","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","components/AgentPages/Remarks.tsx","components/Remarks/RemarkListings.jsx","components/FinancialInformation/FinancialInformation.jsx","components/InsuranceDetails/InsuranceDetails.jsx","components/VehicleDetails/VehicleDetails.jsx","pages/Dashboard/InfoTag.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/campaignListSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/AllCampaigns/AllCampaigns.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","components/ProfileTableDisplay.jsx","pages/Profile/Profile.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","getCustomerRemarks","_ref5","_callee5","customerId","_yield$axios$get5","_context5","_x3","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerProfileCompletion","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","customerRemarks","remarksStatus","reducers","setCurrentCustomer","state","action","payload","setCurrentCustomerProfileCompletion","clearCurrentCustomer","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","updatedCustomers","customer","profileCompletion","_objectSpread","profile_completion","_customerSlice$action","actions","loading","error","pagination","from","size","searchQuery","columnSearchQuery","fetchPaginatedResults","_ref","_ref2","_ref$from","_ref$size","rejectWithValue","response","params","t0","message","performGlobalSearch","_ref6","searchTerm","_x4","performCompoundSearch","_ref9","_ref7","_ref8","searchTerms","JSON","stringify","_x5","_x6","elasticCustomerSlice","resetSearch","loadingStateElasticCustomers","builder","addCase","_elasticCustomerSlice","selectCustomers","elasticCustomers","isLoading","selectPagination","createSelector","filter","includes","StyledTable","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","StyledTable3","dispatch","useDispatch","navigate","useNavigate","useSelector","_useState","useState","_useState2","_slicedToArray","setSearchTerm","_useState3","_useState4","useEffect","fetchData","useMemo","accessorKey","header","accessorFn","slice","minSize","useCallback","pageIndex","pageSize","globalFilter","_ref2$filters","filters","calculatedFrom","isNaN","keys","length","handleRowClick","profile_percentage","mode","enablePagination","manualPagination","rowCount","onGlobalFilterChange","value","onPaginationChange","fontWeight","Customers","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","align","fontFamily","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","label","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","variant","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconClipboardText","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","active","setActive","myRole","useLocation","auth","links","item","index","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","percentage","frequency","lastUpdated","Avatar","src","ta","fz","Badge","Progress","process","fetchProfileTypes","fetchProfileMappings","profileId","profilingSlice","profileTypes","profileMappings","profileTypesStatus","profileMappingsStatus","Profiling","profileData","profileTypesCustomerMapping","stats","profile","Grid","Col","span","profileType","srcUrl","Math","round","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","profiling","personal_details","source","memoizedSelectedCustomer","randomDetails","randomLocation","faker","location","city","randomState","randomAddress","streetAddress","randomPincode","zipCode","marital_status","travel_address","anniversary","employment","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","handleSubmitKeywords","setData","_useSelector","_useSelector2","rolePermission","rolesPermissionsStatus","_useSelector3","keyword","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","setUnknowns","_useState9","_useState10","isDataChanged","setDataChanged","transformedData","category","allKeywords","unknownValues","obj","hasChanged","isEqual","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","readOnly","alignSelf","Interests","interests","setInterests","groupedByCategory","groupBy","uniq","interest","React","Fragment","gradient","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","tempEditData","setTempEditData","headerElements","headerItem","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","currentTarget","toString","bg","selected","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","type","industry","incomeBracket","Occupation","gender","relationship","phone","email","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Loader","Remarks","Textarea","RemarkListings","currentCustomerId","_useDisclosure","useDisclosure","_useDisclosure2","opened","_useDisclosure2$","open","close","selectedRemark","setSelectedRemark","remark","Modal","onClose","centered","agentName","date","time","acc_no","ifsc","branch","FinancialInformation","validity","expiry","InsuranceDetails","vin","product_type","VehicleDetails","Dashboard","_customerDetails$prof","submitKeywords","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","_useState11","isLoggedIn","_useState12","_useState13","_useState14","_useState15","_useState16","pathname","LoadingOverlay","visible","overlayBlur","loaderProps","Card","textAlign","isHNI","full_name","phone_number","undefined","RingProgress","thickness","sections","weight","Routes","Route","element","path","keywordsPayload","then","Notification","withCloseButton","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","window","atob","charCodeAt","join","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_yield$axios$post3","authSlice","user","userStatus","users","_reducers","setAuth","logout","localStorage","clear","defaults","headers","common","reload","storage","getItem","_id","access_token","_parseJwt","sub","setItem","_parseJwt2","_authSlice$actions","setMyRole","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","createRolesPermissionMapping","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_context9","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","_rolesPermissionSlice","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","keywordsUsed","selectedCombinations","combination","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","isModalOpen","dropdownData","Age","Gender","Location","Vehicle","Health","Date","now","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","campaignSlice","campaignNames","selectedCampaigns","selectCampaign","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","fetchCampaigns","_error$response","determineCampaignStatus","campaign","currentDate","isActive","campaignStatus","campaigns","store","configureStore","reducer","campaignManagementReducer","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","campaignListSlice","elasticCustomersSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","route_permission","h","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","assets","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","entries","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","floor","random","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Divider","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","Space","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","IconRefresh","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","min","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","setSelectedCampaigns","margin","chartData","delivered","totalSent","converted","success","interested","failure","failed","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","AllCampaigns","campaignState","reversedData","reverse","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","handleUserActionModal","selected_user","updatedUserData","overlayColor","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","address","pincode","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","handleSubmit","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","strokeDasharray","CustomerProfileAnalysis","selectedSource","setSelectedSource","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$text","textColor","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","flex","Root","ProfileTableDisplay","customerList","Profile","showTable","setShowTable","checkedStates","setCheckedStates","imageDict","IconArrowBack","profileTypeId","isChecked","prevStates","float","App","setColorScheme","login","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.928e049d.chunk.js","sourcesContent":["import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerProfileCompletion: null,\n  customerServiceHistory: [],\n  fetchedPofileCompleteness: false,\n  customerServiceHistoryStatus: \"idle\",\n  customerDetailsStatus: \"idle\",\n  customerRemarks: [], // New field for storing customer remarks\n  remarksStatus: \"idle\", // New status field for customer remarks\n};\n\nexport const getCustomers = createAsyncThunk(\n  \"customer/getCustomers\",\n  async () => {\n    // await sleep(3000)\n    const { data } = await axios.get(\"/customers\");\n    return data;\n  },\n);\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\n  \"customer/getCustomersProfileCompleteness\",\n  async () => {\n    await sleep(200);\n    const { data } = await axios.get(\"/profile\");\n    return data;\n  },\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  },\n);\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerServicesHistory\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  },\n);\n\nexport const getCustomerRemarks = createAsyncThunk(\n  \"customer/getCustomerRemarks\",\n  async (customerId) => {\n    const { data } = await axios.get(\"/customers/remarks/\" + customerId);\n    console.log(\"Remarks in thunk\", data);\n    return data;\n  },\n);\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer: (state, action) => {\n      state.customerDetails = action.payload;\n    },\n    setCurrentCustomerProfileCompletion: (state, action) => {\n      state.customerProfileCompletion = action.payload;\n    },\n    clearCurrentCustomer: (state, action) => {\n      // state.customerDetails = [];\n      state.customerDetailsStatus = \"idle\";\n    },\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const curr_state_obj = {};\n      const res_obj = {};\n      state.customers.map((e) => (curr_state_obj[e.id] = e));\n      action.payload.customer_details.map((e) => (res_obj[e.id] = e));\n      state.customers = Object.values(Object.assign(curr_state_obj, res_obj));\n    },\n    [getCustomers.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerDetails.pending]: (state) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload;\n    },\n    [getCustomerDetails.rejected]: (state) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion\n          ? action.payload.profileCompletion[customer.id]\n          : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n      state.customers = updatedCustomers;\n      state.fetchedPofileCompleteness = true;\n    },\n    [getCustomersProfileCompleteness.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n    [getCustomerRemarks.pending]: (state) => {\n      state.remarksStatus = \"loading\";\n    },\n    [getCustomerRemarks.fulfilled]: (state, action) => {\n      state.remarksStatus = \"success\";\n      state.customerRemarks = action.payload; // Assuming API returns an array of remarks\n    },\n    [getCustomerRemarks.rejected]: (state) => {\n      state.remarksStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const {\n  setCurrentCustomer,\n  clearCurrentCustomer,\n  setCurrentCustomerProfileCompletion,\n} = customerSlice.actions;\n","import {\n  createSlice,\n  createAsyncThunk,\n  createSelector,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Define initial state\nconst initialState = {\n  customers: [],\n  loading: false,\n  error: null,\n  pagination: { from: 0, size: 10 }, // Default pagination settings\n  searchQuery: \"\", // Tracks the global search query\n  columnSearchQuery: {}, // Tracks the column-specific search queries\n};\n\nconsole.log(\n  \"Initializing elasticCustomersSlice with initialState:\",\n  initialState,\n);\n\n// Async thunk for fetching paginated results\nexport const fetchPaginatedResults = createAsyncThunk(\n  \"elasticCustomers/fetchPaginatedResults\",\n  async ({ from = 0, size = 10 }, { rejectWithValue }) => {\n    console.log(`Fetching paginated results: from=${from}, size=${size}`);\n    try {\n      const response = await axios.get(\n        \"/customers/elastic/fetch-paginated-results\",\n        { params: { from, size } },\n      );\n      console.log(\"Fetched paginated results successfully\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching paginated results:\", error.message);\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\n// Async thunk for global search\nexport const performGlobalSearch = createAsyncThunk(\n  \"elasticCustomers/performGlobalSearch\",\n  async ({ searchTerm, from, size }, { rejectWithValue }) => {\n    console.log(\n      `Performing global search: searchTerm=${searchTerm}, from=${from}, size=${size}`,\n    );\n    try {\n      const response = await axios.get(\"/customers/elastic/global-search\", {\n        params: { searchTerm, from, size },\n      });\n      console.log(\"Global search results:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in global search:\", error.message);\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\n// Async thunk for compound search\nexport const performCompoundSearch = createAsyncThunk(\n  \"elasticCustomers/performCompoundSearch\",\n  async ({ searchTerms, from, size }, { rejectWithValue }) => {\n    console.log(\n      `Performing compound search: searchTerms=${JSON.stringify(\n        searchTerms,\n      )}, from=${from}, size=${size}`,\n    );\n    try {\n      const response = await axios.get(\"/customers/elastic/compound-search\", {\n        params: { ...searchTerms, from, size },\n      });\n      console.log(\"Compound search results:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in compound search:\", error.message);\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\n// Slice definition\nconst elasticCustomerSlice = createSlice({\n  name: \"elasticCustomers\",\n  initialState,\n  reducers: {\n    resetSearch: (state) => {\n      console.log(\"Resetting search queries\");\n      state.searchQuery = \"\";\n      state.columnSearchQuery = {};\n    },\n    loadingStateElasticCustomers: (state) => {\n      console.log(\"load state for elastic customer true\");\n      state.loading = true;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPaginatedResults.pending, (state) => {\n        console.log(\"Fetching paginated results pending\");\n        state.loading = true;\n      })\n      .addCase(fetchPaginatedResults.fulfilled, (state, action) => {\n        console.log(\"Fetching paginated results fulfilled\");\n        state.customers = action.payload;\n        state.loading = false;\n        state.error = null;\n      })\n      .addCase(fetchPaginatedResults.rejected, (state, action) => {\n        console.log(\"Fetching paginated results rejected\", action.payload);\n        state.error = action.payload;\n        state.loading = false;\n      })\n      .addCase(performGlobalSearch.fulfilled, (state, action) => {\n        console.log(\"Global search fulfilled\");\n        state.customers = action.payload;\n        state.loading = false;\n        state.error = null;\n      })\n      .addCase(performCompoundSearch.fulfilled, (state, action) => {\n        console.log(\"Compound search fulfilled\");\n        state.customers = action.payload;\n        state.loading = false;\n        state.error = null;\n      });\n  },\n});\n\n// Export actions and reducer\nexport const { resetSearch, loadingStateElasticCustomers } =\n  elasticCustomerSlice.actions;\nexport default elasticCustomerSlice.reducer;\n\n// Selectors\nexport const selectCustomers = (state) => {\n  console.log(\"Selecting customers\");\n  return state.elasticCustomers.customers;\n};\nexport const isLoading = (state) => {\n  console.log(\"Checking if loading\");\n  return state.elasticCustomers.loading;\n};\nexport const selectPagination = (state) => {\n  console.log(\"Selecting pagination\");\n  return state.elasticCustomers.pagination;\n};\n\n// Example selector using createSelector for memoization\nexport const selectFilteredCustomers = createSelector(\n  [selectCustomers, (state, filter) => filter],\n  (customers, filter) => {\n    console.log(`Filtering customers with filter: ${filter}`);\n    return customers.filter((customer) => customer.name.includes(filter));\n  },\n);\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  console.log(\"topProps\", topProps);\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  fetchPaginatedResults,\n  performGlobalSearch,\n  performCompoundSearch,\n  selectCustomers,\n  isLoading,\n  selectPagination,\n  resetSearch,\n} from \"../redux/elasticCustomersSlice\";\nimport { clearCurrentCustomer } from \"../redux/customerSlice\";\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Flex,\n  ActionIcon,\n  Text,\n  useMantineTheme,\n  Group,\n  Center,\n} from \"@mantine/core\";\nimport {\n  getCustomerDetails,\n  setCurrentCustomerProfileCompletion,\n} from \"../redux/customerSlice\";\n\nconst StyledTable3 = () => {\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const customers = useSelector(selectCustomers);\n  const loading = useSelector(isLoading);\n  const pagination = useSelector(selectPagination);\n  const { from, size } = pagination;\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [columnSearch, setColumnSearch] = useState({});\n\n  const customerDetailsStatus = useSelector(\n    (state) => state.customer.customerDetailsStatus,\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchTerm) {\n        // Perform global search if there's a searchTerm\n        dispatch(performGlobalSearch({ searchTerm, from: 0, size }));\n      } else {\n        // Fetch paginated results if there's no searchTerm\n        dispatch(fetchPaginatedResults({ from, size }));\n      }\n    };\n\n    fetchData();\n  }, [dispatch, from, size, searchTerm]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetSearch());\n    };\n  }, [dispatch]);\n\n  const columns = useMemo(\n    () => [\n      { accessorKey: \"name\", header: \"Name\" },\n      {\n        accessorFn: (row) => `CLID${row.customerId.slice(0, 6)}...`,\n        id: \"customerId\",\n        header: \"Customer ID\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 300,\n      },\n      { accessorKey: \"source\", header: \"Source\" },\n      { accessorKey: \"mobile\", header: \"Mobile\" },\n      { accessorKey: \"profile_percentage\", header: \"Profile Completion (%)\" },\n    ],\n    [],\n  );\n\n  const fetchData = useCallback(\n    ({ pageIndex, pageSize, globalFilter, filters = {} }) => {\n      const calculatedFrom = isNaN(pageIndex * pageSize)\n        ? 0\n        : pageIndex * pageSize;\n      if (globalFilter) {\n        dispatch(\n          performGlobalSearch({\n            searchTerm: globalFilter,\n            from: calculatedFrom,\n            size: pageSize,\n          }),\n        );\n      } else if (Object.keys(filters).length) {\n        dispatch(\n          performCompoundSearch({\n            searchTerms: filters,\n            from: calculatedFrom,\n            size: pageSize,\n          }),\n        );\n      } else {\n        dispatch(\n          fetchPaginatedResults({ from: calculatedFrom, size: pageSize }),\n        );\n      }\n    },\n    [dispatch],\n  );\n\n  const handleExportRows = useCallback((rows) => {\n    const csv = generateCsv(\n      mkConfig({\n        filename: \"exported_customers\",\n        useKeysAsHeaders: true,\n      }),\n    )(rows.map((row) => row.original));\n    download(csv);\n  }, []);\n\n  const handleRowClick = useCallback(\n    (row) => {\n      console.log(row); // Adjust based on what data you need from the clicked row\n      dispatch(getCustomerDetails(row.customerId));\n      dispatch(setCurrentCustomerProfileCompletion(row.profile_percentage)); // Adjust based on actual data structure\n    },\n    [dispatch],\n  );\n\n  // Use useEffect to listen for changes to customerDetailsStatus\n  useEffect(() => {\n    if (customerDetailsStatus === \"success\") {\n      // Navigate to the dashboard (or wherever you need) once details are successfully fetched\n      dispatch(clearCurrentCustomer());\n      navigate(\"/dashboard\");\n    }\n  }, [customerDetailsStatus, navigate]);\n\n  const localTheme = createTheme({\n    palette: {\n      mode: theme.colorScheme === \"dark\" ? \"dark\" : \"light\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={customers}\n        loading={loading}\n        onRowClick={({ row }) => console.log(row)}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        enablePagination\n        manualPagination\n        rowCount={size}\n        state={{\n          density: \"compact\",\n          globalFilter: searchTerm,\n          pagination: {\n            pageIndex: from / size,\n            pageSize: size,\n          },\n        }}\n        onGlobalFilterChange={(value) => setSearchTerm(value)}\n        onPaginationChange={(state) => fetchData({ ...state })}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => handleRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  color={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fontWeight={\"bold\"} color={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{/* Add any top props if needed */}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n          </Box>\n        )}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable3;\n","import {\n  LoadingOverlay,\n  Title,\n  Button,\n  ActionIcon,\n  Loader,\n  Center,\n  Stack,\n} from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n  clearCurrentCustomer,\n} from \"../../redux/customerSlice\";\nimport { loadingStateElasticCustomers } from \"../../redux/elasticCustomersSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\nimport { IconRefresh } from \"@tabler/icons-react\";\nimport StyledTable3 from \"../../StyledComponents/StyledTable3\";\nimport { fetchPaginatedResults } from \"../../redux/elasticCustomersSlice\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n  // const { status, customers, fetchedPofileCompleteness } = useSelector(\n  //   (state) => state.customer,\n  // );\n  //\n  useEffect(() => {\n    dispatch(clearCurrentCustomer());\n  }, []);\n  // //\n  // useEffect(() => {\n  //   dispatch(getCustomers());\n  //   dispatch(getCustomersProfileCompleteness());\n  // }, [dispatch]);\n  //\n  // const handleRefresh = () => {\n  //   dispatch(getCustomers());\n  //   dispatch(getCustomersProfileCompleteness());\n  // };\n\n  // const refreshButton = (\n  //   <ActionIcon c={\"#0d5ff9\"} size={\"sm\"} onClick={handleRefresh}>\n  //     <IconRefresh />\n  //   </ActionIcon>\n  // );\n\n  // if () {\n  //   return (\n  //     <Center>\n  //       <Loader c=\"#0d5ff9\" size=\"lg\" />\n  //     </Center>\n  //     // <LoadingOverlay\n  //     //   visible\n  //     //   overlayBlur={2}\n  //     //   overlayColor={\"#F3F6FF\"}\n  //     //   loaderProps={{\n  //     //     color: \"#0d5ff9\",\n  //     //     size: \"xl\",\n  //     //     variant: \"dots\",\n  //     //   }}\n  //     // />\n  //   );\n  // } else {\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n          <div style={{ padding: \"10px\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginBottom: \"20px\",\n                marginTop: \"5px\",\n              }}\n            >\n              <span>\n                <Title pl={5}>Customers</Title>\n              </span>\n            </div>\n            {/* <TableDisplay */}\n            {/*   customerList={customers} */}\n            {/*   fetchedPofileCompleteness={fetchedPofileCompleteness} */}\n            {/*   topProps={() => refreshButton} */}\n            {/* /> */}\n            <StyledTable3 />\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n//};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconClipboardText,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #0d5ff9\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0D5FF9\",\n      boxShadow: `\n rgba(13, 95, 249, 1) 0px 1px 1px,\n rgba(13, 95, 249, 0.5) 0px 2px 2px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 3px 5px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"remarks\", label: \"Remarks\", icon: <IconClipboardText /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  { link: \"fi\", label: \"Financial Information\", icon: <IconReportMoney /> },\n  { link: \"id\", label: \"Insurance Details  \", icon: <IconCarCrash /> },\n  { link: \"vd\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const location = useLocation();\n  const { myRole } = useSelector((state) => state.auth);\n\n\n  const links = data\n    .filter((item, index) => (myRole === 'qc' ? index < 2 : true))\n    .map((item) => (\n      <NavLink\n        className={cx(classes.link, {\n          [classes.linkActive]: item.label === active,\n        })}\n        icon={item.icon}\n        component={Link}\n        variant=\"subtle\"\n        to={item.link}\n        label={item.label}\n        key={item.label}\n        onClick={(event) => {\n          setActive(item.label);\n        }}\n      />\n    ));\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to={\"/customers\"}\n            c=\"#0d5ff9\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    <Badge size=\"lg\">{percentage}%</Badge>\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            {/* <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group> */}\n        </Paper>\n    );\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  data: [],\n  profileTypes: [],\n  profileMappings: [],\n  status: \"idle\",\n  profileTypesStatus: \"idle\",\n  profileMappingsStatus: \"idle\",\n  error: null,\n};\n\n// Async thunk for fetching customer data\nexport const fetchData = createAsyncThunk(\n  \"profiling/fetchData\",\n  async (customerId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/customer-mapping/${customerId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile types\nexport const fetchProfileTypes = createAsyncThunk(\n  \"profiling/fetchProfileTypes\",\n  async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-types`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile mappings by profile ID\nexport const fetchProfileMappings = createAsyncThunk(\n  \"profiling/fetchProfileMappings\",\n  async (profileId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/profile-customer-mappings-by-profile/${profileId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\nconst profilingSlice = createSlice({\n  name: \"profiling\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error =\n          action.error.message ||\n          \"Failed to fetch profile types for the customer\";\n      })\n      .addCase(fetchProfileTypes.pending, (state) => {\n        state.profileTypesStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileTypes.fulfilled, (state, action) => {\n        state.profileTypesStatus = \"succeeded\";\n        state.profileTypes = action.payload;\n      })\n      .addCase(fetchProfileTypes.rejected, (state, action) => {\n        state.profileTypesStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile types\";\n      })\n      .addCase(fetchProfileMappings.pending, (state) => {\n        state.profileMappingsStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileMappings.fulfilled, (state, action) => {\n        state.profileMappingsStatus = \"succeeded\";\n        state.profileMappings = []\n        state.profileMappings = action.payload;\n      })\n      .addCase(fetchProfileMappings.rejected, (state, action) => {\n        state.profileMappingsStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile mappings\";\n      });\n  },\n});\n\nexport default profilingSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"@mantine/core\";\nimport { StatsCard } from \"./StatCard\";\nimport { fetchData } from \"../../redux/profileTypesSlice\";\n\nconst Profiling = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(\n    (state) => state.profileTypesCustomerMapping.data,\n  );\n  const { customerDetails } = useSelector((state) => state.customer);\n\n  console.log(\"Profiling data\", profileData);\n\n  useEffect(() => {\n    dispatch(fetchData(customerDetails.id));\n  }, [dispatch, customerDetails]);\n\n  const stats = profileData.map((profile) => (\n    <Grid.Col key={profile.profileType.id} span={4}>\n      <StatsCard\n        title={profile.profileType.name}\n        url={profile.profileType.srcUrl}\n        percentage={Math.round(profile.profileCompletion)}\n      />\n    </Grid.Col>\n  ));\n\n  return (\n    <>\n      <Grid gutter=\"xl\">{stats}</Grid>\n    </>\n  );\n};\n\nexport default Profiling;\n\n","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport InfoTag from \"./InfoTag\";\nimport { fakerEN_IN as faker } from \"@faker-js/faker\";\nimport { useSelector } from \"react-redux\";\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { customerDetails } = useSelector((state) => state.customer);\n  console.log(\"state\", customerDetails);\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n  const memoizedSelectedCustomer = useMemo(\n    () => selectedCustomer,\n    [selectedCustomer.id, selectedCustomer.profiling.personal_details],\n  );\n\n  const randomDetails = useMemo(() => {\n    return {\n      randomLocation: faker.location.city(),\n      randomState: faker.location.state(),\n      randomAddress: faker.location.streetAddress(),\n      randomPincode: faker.location.zipCode(),\n    };\n  }, [memoizedSelectedCustomer]);\n\n  if (profile) {\n    return (\n      <>\n        <Container>\n          <div>\n            <Text fw={500}>Address & Other Info</Text>\n            <Grid gutter=\"xl\">\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Location(city)\"}\n                  subject={randomDetails.randomLocation}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"State\"} subject={randomDetails.randomState} />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"PINCODE\"}\n                  subject={randomDetails.randomPincode}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"Country\"} subject=\"India\" />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Address Line\"}\n                  subject={randomDetails.randomAddress}\n                />\n              </Grid.Col>\n            </Grid>\n          </div>\n          <div>\n            <Grid gutter=\"xl\">\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Marital status\"}\n                  subject={profile.marital_status}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Travel Address\"}\n                  subject={profile.travel_address}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"Anniversary\"} subject={profile.anniversary} />\n              </Grid.Col>\n\n              <Grid.Col span={6}>\n                <InfoTag title={\"Employment\"} subject={profile.employment} />\n              </Grid.Col>\n            </Grid>\n          </div>\n        </Container>\n      </>\n    );\n  } else {\n    return <>Fetching profile ...</>;\n  }\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent, handleSubmitKeywords }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n  const [isDataChanged, setDataChanged] = useState(false);\n\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n\n\n  useEffect(() => {\n    const hasChanged = !_.isEqual(values, transformedData.map((obj) => obj.value));\n    setDataChanged(hasChanged);\n  }, [values, transformedData]);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          <div style={{ alignSelf: \"center\", padding: \"10px\" }}>\n            {isDataChanged && hasPermission(userPermissions, \"keywords_edit\") && <Button variant=\"light\"\n              onClick={() => handleSubmitKeywords()}\n            >\n              Update keywords\n            </Button>\n            }\n\n          </div>\n\n\n\n          {/* <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div> */}\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\n\nconst Interests = () => {\n  const dispatch = useDispatch()\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { customerKeywords, customerKeywordsStatus } = useSelector((state) => state.keyword);\n  const [interests, setInterests] = useState([])\n\n\n\n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      // Use _.uniq to remove duplicate values\n      const uniqueValues = _.uniq(_.map(values, 'value'));\n      return { category, values: uniqueValues };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n\n  useEffect(() => {\n    if (customerKeywordsStatus == 'success') {\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n      {customerKeywordsStatus == 'success' ?\n        <>\n          {interests.map((interest) => (\n            <React.Fragment key={interest.category}>\n              <Text fw={700}>{interest.category}</Text>\n              {interest.values.map((value) => (\n                <Badge\n                  key={value}\n                  variant=\"gradient\"\n                  gradient={{ from: 'indigo', to: 'cyan' }}\n                >\n                  {value}\n                </Badge>\n              ))}\n            </React.Fragment>\n          ))}\n        </> :\n        <>Loading interests...</>\n      }\n\n\n    </>\n\n  )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport { useDisclosure } from \"@mantine/hooks\";\nimport { Modal, Group, Button } from \"@mantine/core\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport { getCustomerRemarks } from \"../../redux/customerSlice\"; // replace 'path_to_your' with the actual path\n\nconst RemarkListings = () => {\n  const dispatch = useDispatch();\n  const customerRemarks = useSelector(\n    (state) => state.customer.customerRemarks,\n  );\n  const remarksStatus = useSelector((state) => state.customer.remarksStatus);\n  const currentCustomerId = useSelector(\n    (state) => state.customer.customerDetails.id,\n  ); // Assuming 'id' is the field in customerDetails for the customer's ID\n\n  const [opened, { open, close }] = useDisclosure(false);\n  const [selectedRemark, setSelectedRemark] = useState(null);\n\n  useEffect(() => {\n    if (currentCustomerId) {\n      dispatch(getCustomerRemarks(currentCustomerId));\n    }\n  }, [dispatch, currentCustomerId]);\n\n  // Define columns for StyledTable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"agentName\",\n        header: \"Agent Name\",\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Date\",\n      },\n      {\n        accessorKey: \"time\",\n        header: \"Time\",\n      },\n      {\n        accessorKey: \"remark\",\n        header: \"Remark\",\n      },\n    ],\n    [],\n  );\n\n  const handleRowClick = (remark) => {\n    setSelectedRemark(remark);\n    open();\n  };\n\n  return (\n    <>\n      <Box>\n        {remarksStatus === \"success\" ? (\n          <StyledTable\n            columns={columns}\n            data={customerRemarks}\n            onRowClick={handleRowClick}\n          />\n        ) : remarksStatus === \"loading\" ? (\n          <p>Loading...</p>\n        ) : (\n          <p>Failed to load remarks.</p>\n        )}\n      </Box>\n\n      <Modal opened={opened} onClose={close} title=\"Remark Details\" centered>\n        {selectedRemark && (\n          <div>\n            <p>\n              <strong>Agent Name:</strong> {selectedRemark.agentName}\n            </p>\n            <p>\n              <strong>Date:</strong> {selectedRemark.date}\n            </p>\n            <p>\n              <strong>Time:</strong> {selectedRemark.time}\n            </p>\n            <p>\n              <strong>Remark:</strong> {selectedRemark.remark}\n            </p>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default RemarkListings;\n","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Financial Information';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'Acc. No', 'Variant', 'IFSC code', 'Branch'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    acc_no: '',\n    variant: '',\n    ifsc: '',\n    branch: '',\n});\n\n\nexport function FinancialInformation() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Insurance Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Source', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    source: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function InsuranceDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Vehicle Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'VIN/Chassis no.', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    vin: '',\n    product_type: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function VehicleDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { Text } from '@mantine/core';\nimport React from 'react';\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: \"-10px\" }}>\n            <Text fz={'sm'} c='dimmed' style={{ alignSelf: \"start\" }}>{title}</Text>\n            <Text style={{ alignSelf: \"end\" }}>{subject}</Text>\n        </div>\n    );\n};\n\nexport default InfoTag;\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n  Space,\n  Center,\n  RingProgress,\n  Text,\n  Badge\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\nimport Remarks from \"../../components/AgentPages/Remarks\";\nimport RemarkListings from \"../../components/Remarks/RemarkListings\";\nimport { FinancialInformation } from \"../../components/FinancialInformation/FinancialInformation\";\nimport { InsuranceDetails } from \"../../components/InsuranceDetails/InsuranceDetails\";\nimport { VehicleDetails } from \"../../components/VehicleDetails/VehicleDetails\";\nimport { IconUserSquareRounded } from '@tabler/icons-react';\nimport { Avatar } from '@mantine/core';\nimport { IconUser } from \"@tabler/icons-react\";\nimport InfoTag from \"./InfoTag\";\n\n\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n\n  const { status, customerDetails, customerProfileCompletion } = useSelector((state) => state.customer);\n  const [profile, setProfile] = useState({\n    ...customerDetails.profiling?.personal_details,\n  });\n\n  const { profile_completion } = customerDetails;\n\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n\n\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n\n\n  useEffect(() => {\n    if (!customerDetails || Object.keys(customerDetails).length === 0) {\n      navigate(\"/customers\");\n    }\n  }, [customerDetails, navigate]);\n\n\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  const handleSubmitKeywords = () => {\n\n    const payload = {\n      customerId: customerDetails.id,\n      keywordsPayload: keywordValues,\n    };\n    setNotification(true);\n    sleep(5000).then((data) => setNotification(false));\n    dispatch(updateKeywords(payload));\n\n\n  }\n\n  const profileCompletion = (percentage = 0) => {\n    return (\n      <div>\n\n        <RingProgress\n          mt={0}\n          size={100}\n          thickness={8}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 75\n                  ? \"#1D9B25\"\n                  : percentage > 60\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </div>\n    );\n  };\n\n  // useEffect(() => {\n  //   if (\n  //     routesClicked.at(-2) &&\n  //     routesClicked.at(-2) === \"/dashboard/keywords\"\n  //   ) {\n  //     const updateKeywordPayload = {\n  //       customerId: customerDetails.id,\n  //       keywordsPayload: keywordValues,\n  //     };\n\n  //     setNotification(true);\n  //     sleep(5000).then((data) => setNotification(false));\n\n  //     dispatch(updateKeywords(updateKeywordPayload));\n  //   }\n  // }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Grid.Col span={12}>\n              <Card>\n                <Grid>\n                  <Grid.Col span={2}>\n                    <Grid.Col span={12} style={{ textAlign: \"center\" }}>\n                      <Avatar color=\"blue\" size=\"lg\">\n                        <IconUser size=\"lg\" />\n                      </Avatar>\n                    </Grid.Col>\n                    {customerDetails.isHNI &&\n                      <Grid.Col span={12}>\n                        <Badge color=\"yellow\" variant=\"filled\" size=\"lg\">HNI</Badge>\n                      </Grid.Col>\n                    }\n\n\n                  </Grid.Col>\n\n                  <Grid.Col span={6}>\n                    <Text fw={500}>Basic Info</Text>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Name\"} subject={profile.full_name} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Email Address\"} subject={customerDetails.email} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Gender\"} subject={profile.gender} />\n                    </Grid.Col>\n                  </Grid.Col>\n                  <Grid.Col span={4}>\n                    <Grid.Col span={12} >\n                      <Center> {profileCompletion(customerProfileCompletion)}</Center>\n                    </Grid.Col>\n                  </Grid.Col>\n\n                </Grid>\n              </Card>\n            </Grid.Col>\n\n\n\n            <Grid.Col span={12}>\n              <Card shadow={\"lg\"} radius={\"md\"}>\n                <Routes>\n                  <Route>\n                    <Route\n                      index\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route\n                      path=\"/personalInformation\"\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route path=\"/profiling\" element={<Profiling />} />\n                    <Route\n                      path=\"/keywords\"\n                      element={\n                        <KeywordsEntry\n                          submitKeywords={submitKeywords}\n                          updateKeywordValuesParent={updateKeywordValuesParent}\n                          handleSubmitKeywords={handleSubmitKeywords}\n                        />\n                      }\n                    />\n\n                    <Route path=\"/interests\" element={<Interests />} />\n                    <Route path=\"/remarks\" element={<RemarkListings />} />\n                    <Route path=\"/occupation\" element={<Occupation />} />\n                    <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                    <Route path=\"/activity\" element={<Activity />} />\n                    <Route path=\"/fi\" element={<FinancialInformation />} />\n                    <Route path=\"/id\" element={<InsuranceDetails />} />\n                    <Route path=\"/vd\" element={<VehicleDetails />} />\n                  </Route>\n                </Routes>\n              </Card>\n\n            </Grid.Col>\n\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Syncing keywords\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  myRole: null,\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setAuth: (state, action) => {\n      const storage = JSON.parse(localStorage.getItem(\"login\"));\n      if (Object.keys(storage).length > 0) {\n        const { email, _id } = storage\n        state.user.email = email;\n        state.user._id = _id;\n        state.status = \"success\";\n        state.isLoggedIn = true;\n      } else {\n        state.isLoggedIn = false;\n      }\n    },\n\n    setMyRole: (state, action) => {\n      state.myRole = action.payload\n    }\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout, setMyRole } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n  \"campaignManagement/fetchRowData\",\n  async (_, { getState }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n    const responses = [];\n    let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n    for (const rowKey of Object.keys(state.rows)) {\n      const row = state.rows[rowKey];\n      if (!row.first || !row.second || !row.third) {\n        throw new Error(\"Row has empty/default values. Fetching aborted.\");\n      }\n\n      const body = {\n        information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n        category: row.second.toLowerCase().split(\" \").join(\"_\"),\n        value: row.third.toLowerCase().split(\" \").join(\"_\"),\n      };\n\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n      const customerIDsForThisRow = data.map((customer) => customer.id);\n\n      if (commonCustomerIDs === null) {\n        commonCustomerIDs = new Set(customerIDsForThisRow);\n      } else {\n        commonCustomerIDs = new Set(\n          [...commonCustomerIDs].filter((id) =>\n            customerIDsForThisRow.includes(id),\n          ),\n        );\n      }\n\n      responses.push({\n        rowKey,\n        figures: commonCustomerIDs.size,\n        customerIDs: [...commonCustomerIDs],\n      });\n    }\n    return responses;\n  },\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n  \"campaignManagement/fetchFiguresForRow\",\n  async (rowId, { getState }) => {\n    const state = getState().campaignManagement;\n    const row = state.rows[rowId];\n    if (!row || !row.first || !row.second || !row.third) {\n      throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n    }\n\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n    const body = {\n      information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n      category: row.second.toLowerCase().split(\" \").join(\"_\"),\n      value: row.third.toLowerCase().split(\" \").join(\"_\"),\n    };\n\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n    const customerIDsForThisRow = data.map((customer) => customer.id);\n\n    // Retrieve customer IDs from all preceding rows\n    let commonCustomerIDs = customerIDsForThisRow;\n    for (const otherRowId of Object.keys(state.rows)) {\n      if (Number(otherRowId) < Number(rowId)) {\n        const otherRow = state.rows[otherRowId];\n        commonCustomerIDs = commonCustomerIDs.filter((id) =>\n          otherRow.customerIDs.includes(id),\n        );\n      }\n    }\n\n    return {\n      rowId,\n      figures: commonCustomerIDs.length,\n      customerIDs: commonCustomerIDs,\n    };\n  },\n);\n\nexport const createCampaign = createAsyncThunk(\n  \"campaignManagement/createCampaign\",\n  async (_, { getState, rejectWithValue }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n    const keywordsUsed = state.selectedCombinations\n      .filter(\n        (combination) => combination.first === \"Interests\" && combination.third,\n      )\n      .map((combination) => combination.third.value);\n\n    const body = {\n      name: state.eventName,\n      eventBased: true,\n      triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n      type: \"EMAIL\",\n      recurrenceType:\n        state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n      start: state.tabData.Email.timelineState.startDate,\n      end: state.tabData.Email.timelineState.endDate,\n      templateText: state.tabData.Email.content,\n      customerIDs: state.allCustomerIDs,\n      keywordsUsed,\n    };\n\n    console.log(\"Publish body\", body);\n\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      console.log(\"response\", response);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create campaign\");\n      }\n\n      return response.json();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst initialState = {\n  isModalOpen: false,\n  dropdownData: {\n    \"Personal Information\": {\n      Age: [\"25-30\", \"31-35\"],\n      Gender: [\"Male\", \"Female\"],\n      \"Marital Status\": [\"Single\", \"Married\"],\n      Location: [\"Delhi\", \"Mumbai\"],\n    },\n    Interests: {},\n    Occupation: \"\",\n    Activity: \"\",\n    \"Family Details\": \"\",\n    \"Financial Information\": \"\",\n    \"Insurance Details\": \"\",\n    Vehicle: \"\",\n    Health: \"\",\n  },\n  rows: {\n    [Date.now().toString()]: {\n      first: \"\",\n      second: \"\",\n      third: \"\",\n      figures: null,\n      customerIDs: [],\n    },\n  },\n  allCustomerIDs: [],\n  selectedCombinations: [],\n  eventName: \"\",\n  eventDate: null,\n  step: 1,\n  activeTab: \"Email\",\n  startDate: null,\n  endDate: null,\n  tabData: {\n    Email: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 500,\n    },\n    SMS: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 160,\n    },\n    Notification: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 250,\n    },\n    Whatsapp: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 2000,\n    },\n  },\n  radarData: [\n    { count: 120, subject: \"EZ-Auto\" },\n    { count: 98, subject: \"Cyberior\" },\n    { count: 86, subject: \"Homecare\" },\n    { count: 99, subject: \"E-Portal 2.0\" },\n    { count: 85, subject: \"EZ-Travel\" },\n  ],\n  downloadDataStatus: null,\n  error: null,\n  rowIdsArray: [],\n  loadingStates: {},\n  errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n  name: \"campaignManagement\",\n  initialState,\n  reducers: {\n    toggleModal: (state, action) => {\n      state.isModalOpen = action.payload;\n    },\n    updateDropdownData: (state, action) => {\n      state.dropdownData = action.payload;\n    },\n    updateRows: (state, action) => {\n      state.rows = action.payload;\n      state.rowIdsArray = [];\n      state.allCustomerIDs = [\n        ...new Set(\n          Object.values(state.rows)\n            .filter((row) => row.customerIDs && row.customerIDs.length)\n            .flatMap((row) => row.customerIDs),\n        ),\n      ];\n    },\n    updateSelectedCombinations: (state, action) => {\n      state.selectedCombinations = action.payload;\n    },\n    setCampaignName: (state, action) => {\n      state.campaignName = action.payload;\n    },\n    setEventName: (state, action) => {\n      state.eventName = action.payload;\n    },\n    setEventDate: (state, action) => {\n      state.eventDate = action.payload;\n    },\n    setStep: (state, action) => {\n      state.step = action.payload;\n    },\n    setStartDate: (state, action) => {\n      state.startDate = action.payload;\n    },\n    setEndDate: (state, action) => {\n      state.endDate = action.payload;\n      state.eventDate = action.payload;\n    },\n    setActiveTab: (state, action) => {\n      state.activeTab = action.payload;\n    },\n    updateTabData: (state, action) => {\n      state.tabData = action.payload;\n    },\n    setRadarData: (state, action) => {\n      state.radarData = action.payload;\n    },\n    resetModal: (state) => {\n      state.step = initialState.step;\n      state.campaignName = initialState.campaignName;\n      state.eventName = initialState.eventName;\n      state.activeTab = initialState.activeTab;\n      state.tabData = initialState.tabData;\n      state.eventDate = initialState.eventDate;\n    },\n  },\n  extraReducers: {\n    [fetchRowData.pending]: (state) => {\n      state.downloadDataStatus = \"loading\";\n    },\n    [fetchRowData.fulfilled]: (state, action) => {\n      state.downloadDataStatus = \"success\";\n\n      action.payload.forEach((item) => {\n        state.rows[item.rowKey].figures = item.figures;\n        state.rows[item.rowKey].customerIDs = item.customerIDs;\n      });\n\n      state.rowIdsArray = [\n        ...new Set([\n          ...state.rowIdsArray,\n          ...action.payload.map((item) => item.rowKey),\n        ]),\n      ];\n\n      const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n      state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n    },\n    [fetchRowData.rejected]: (state, action) => {\n      state.downloadDataStatus = \"failed\";\n      state.error = action.error.message;\n    },\n    [fetchFiguresForRow.pending]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"loading\";\n      state.errors[rowId] = null;\n    },\n    [fetchFiguresForRow.fulfilled]: (state, action) => {\n      const { rowId, figures, customerIDs } = action.payload;\n      state.rows[rowId].figures = figures;\n      state.rows[rowId].customerIDs = customerIDs;\n      state.loadingStates[rowId] = \"loaded\";\n\n      const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n      if (Number(rowId) === lastRowId) {\n        state.allCustomerIDs = [...customerIDs];\n      }\n    },\n    [fetchFiguresForRow.rejected]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"error\";\n      state.errors[rowId] = action.error.message;\n    },\n  },\n});\n\nexport const {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n  setCampaignName,\n  setEventName,\n  setEventDate,\n  setStep,\n  setStartDate,\n  setEndDate,\n  setActiveTab,\n  updateTabData,\n  setRadarData,\n  resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nconst initialState = {\n  data: [],\n  campaignNames: [],\n  selectedCampaigns: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaigns = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n        state.campaignNames = action.payload.map((item) => item.campaignName);\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async (source) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async (source) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`,\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  campaignStatus: \"idle\",\n  campaigns: [],\n  error: null,\n};\n\nexport const fetchCampaigns = createAsyncThunk(\n  \"campaigns/fetchCampaigns\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/campaign`,\n      );\n      console.log(\"Campaign List response data\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching campaigns:\", error);\n      return rejectWithValue(\n        error.response?.data || \"Unable to fetch campaigns\",\n      );\n    }\n  },\n);\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchCampaigns.pending]: (state) => {\n      state.campaignStatus = \"loading\";\n      state.error = null; // Reset the error state\n    },\n    [fetchCampaigns.fulfilled]: (state, action) => {\n      console.log(\"Received campaigns:\", action.payload);\n      state.campaignStatus = \"success\";\n      state.campaigns = action.payload.map((campaign) => ({\n        ...campaign,\n        status: determineCampaignStatus(campaign),\n      }));\n      console.log(\"Final campaigns for table:\", action.payload);\n    },\n    [fetchCampaigns.rejected]: (state, action) => {\n      state.campaignStatus = \"failed\";\n      state.error = action.payload;\n    },\n  },\n});\n\nfunction determineCampaignStatus(campaign) {\n  const currentDate = new Date();\n  const startDate = new Date(campaign.start);\n  const endDate = new Date(campaign.end);\n\n  if (endDate < currentDate) return \"Closed\";\n  if (startDate > currentDate) return \"Pending\";\n  if (currentDate >= startDate && currentDate <= endDate)\n    return campaign.isActive ? \"On-going\" : \"Cancelled\";\n  return \"Unknown\";\n}\n\nexport default campaignSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\nimport profilingSlice from \"./profileTypesSlice\";\nimport campaignListSlice from \"./campaignListSlice\";\nimport elasticCustomersSlice from \"./elasticCustomersSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n    profileTypesCustomerMapping: profilingSlice,\n    campaignListSlice: campaignListSlice,\n    elasticCustomers: elasticCustomersSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n\n  const route_permission = {\n    \"profile_dashboard\": \"/\",\n    \"customer_dashboard\": \"/customers\"\n  }\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (getAllRolesPermissionsMappingsByUserStatus == \"success\") {\n      userPermissions.length > 0 && route_permission[userPermissions[0].name] ? navigate(route_permission[userPermissions[0].name]) : navigate(\"/pd\")\n\n    }\n  }, [getAllRolesPermissionsMappingsByUserStatus, navigate])\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#0d5ff9\", to: \"#F3F6FF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#0d5ff9\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      // topProps={() => (\n      //   <Flex>\n      //     <StyledButton\n      //       compact\n      //       onClick={() => {\n      //         console.log(\"Create Permission clicked!\");\n      //       }}\n      //     >\n      //       Create Permission\n      //     </StyledButton>\n      //   </Flex>\n      // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#0d5ff9\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#0d5ff9\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#0d5ff9\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n      const currentCombination = {\n        first: row.first,\n        second: row.second,\n        third: row.first === \"Interests\" ? option.value : option,\n      };\n\n      const isSelectedCombination = selectedCombinations.some(\n        (selected) =>\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      const isSelectedInCurrentRow = selectedCombinations.some(\n        (selected) =>\n          selected.rowId === rowId &&\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      return !isSelectedCombination || isSelectedInCurrentRow;\n    })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#0d5ff9\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#0d5ff9\"\n          fill=\"#0d5ff9\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#0d5ff9\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        border: \"2px solid #0d5ff9\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  useEffect(() => {\n    // Check if the Redux state `eventDate` is different from the local state `endDate`\n    // and if so, update the local state to match the Redux state\n    if (eventDate && (!results.endDate || results.endDate !== eventDate)) {\n      setResults((prevState) => ({\n        ...prevState,\n        endDate: eventDate,\n      }));\n\n      // Optionally, if you want to update the Redux state as well\n      dispatch(setEventDate(eventDate));\n    }\n  }, [eventDate, dispatch, results.endDate]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setRecurrenceTime(\"\");\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#0d5ff9\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#0d5ff9\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#0d5ff9\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#0d5ff9\"}\n                      bg={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#F3F6FF\",\n                          color: \"#0d5ff9\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${activeTab === tab ? \"show active\" : \"\"\n                      }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                              <div className=\"character-limit-error\">\n                                Character limit exceeded!\n                              </div>\n                            )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#F3F6FF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ActionIcon,\n  Box,\n  Flex,\n  MultiSelect,\n  Text,\n  Title,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { fetchData, selectCampaign } from \"../../redux/campaignSlice\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.campaign.data);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  const [selectedCampaigns, setSelectedCampaigns] = useState([]);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  const handleCampaignSelect = (selected) => {\n    setSelectedCampaigns(selected);\n    dispatch(selectCampaign(selected));\n  };\n\n  const filteredData =\n    selectedCampaigns.length > 0\n      ? data.filter((campaign) =>\n          selectedCampaigns.includes(campaign.campaignName),\n        )\n      : data;\n\n  // Map API data to chart data\n  const chartData = filteredData.map((item) => ({\n    ...item,\n    delivered: item.totalSent,\n    converted: item.success,\n    interested: item.success,\n    failure: item.failed,\n  }));\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#0d5ff9\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <MultiSelect\n              maw={320}\n              mx=\"auto\"\n              data={campaignNames}\n              placeholder={\"All\"}\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              searchable\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={handleCampaignSelect}\n              value={selectedCampaigns}\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={chartData}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"campaignName\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#F3F6FF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#0d5ff9\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#F3F6FF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#0d5ff9\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#0d5ff9\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#0d5ff9\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"}>\n              <Stack>\n                <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                  <Text fw={\"bold\"}>Communications</Text>\n                  <Center>\n                    <ActionIcon c={\"#0d5ff9\"}>\n                      <IconTableExport />\n                    </ActionIcon>\n                    <Text fw={\"bold\"}>Export</Text>\n                  </Center>\n                </Flex>\n                <Box>\n                  <VerticalBarChart />\n                </Box>\n              </Stack>\n            </Card>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import { ActionIcon, Flex } from \"@mantine/core\";\nimport { IconEdit, IconTrash } from \"@tabler/icons-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCampaigns } from \"../../../../redux/campaignListSlice\";\nimport StyledTable from \"../../../../StyledComponents/StyledTable\";\n\nconst AllCampaigns = () => {\n  const dispatch = useDispatch();\n  const campaignState = useSelector((state) => state.campaignListSlice);\n\n  useEffect(() => {\n    dispatch(fetchCampaigns());\n  }, [dispatch]);\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"name\",\n        header: \"Campaign Name\",\n      },\n      {\n        accessorKey: \"type\",\n        header: \"Communication Type\",\n      },\n      {\n        accessorKey: \"customers\",\n        header: \"Total No. of Customers\",\n        accessorFn: (row) => row.customers.length,\n      },\n      {\n        accessorKey: \"created_at\",\n        header: \"Create Campaign Date\",\n        accessorFn: (row) => new Date(row.created_at).toLocaleDateString(),\n      },\n      {\n        accessorKey: \"end\",\n        header: \"Event Date\",\n        accessorFn: (row) => new Date(row.end).toLocaleDateString(),\n      },\n      {\n        accessorKey: \"status\",\n        header: \"Campaign Status\",\n      },\n      {\n        accessorKey: \"actions\",\n        header: \"Action\",\n        Cell: ({ row }) => (\n          <Flex>\n            <ActionIcon color=\"lightblue\">\n              <IconEdit />\n            </ActionIcon>\n            <ActionIcon color=\"red\">\n              <IconTrash />\n            </ActionIcon>\n          </Flex>\n        ),\n      },\n    ],\n    [],\n  );\n\n  if (campaignState.campaignStatus === \"loading\") {\n    return <p>Loading...</p>;\n  }\n  if (campaignState.campaignStatus === \"failed\") {\n    return <p>Error loading campaigns. Details: {campaignState.error}</p>;\n  }\n  const reversedData = [...campaignState.campaigns].reverse();\n  const handleRowClick = () => {\n    console.log(\"Row clicked\");\n  };\n\n  return (\n    <StyledTable\n      columns={columns}\n      data={reversedData}\n      onRowClick={handleRowClick}\n    />\n  );\n};\n\nexport default AllCampaigns;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\nimport AllCampaigns from \"../AllCampaigns/AllCampaigns\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(\"keywords fetched for analysis\", keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n              ...updatedDropdownData[keyword.category],\n              { label: keyword.value, value: keyword.id },\n            ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Data Analysis\n            </Text>\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#0d5ff9\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#0d5ff9\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#0d5ff9\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n      <AllCampaigns />\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#0d5ff9\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#F3F6FF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#F3F6FF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#F3F6FF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#0d5ff9\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#0d5ff9\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#F3F6FF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #0d5ff9\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\nimport { IconUserDollar } from \"@tabler/icons-react\";\nimport { setMyRole } from \"../redux/authSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const dispatch = useDispatch()\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      dispatch(setMyRole(user.role.name))\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#00239c,#0d5ff9)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#0d5ff9)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            //            boxShadow: `\n            // rgba(13, 95, 249, 0.17) 0px -23px 25px 0px inset,\n            // rgba(13, 95, 249, 0.15) 0px -36px 30px 0px inset,\n            // rgba(13, 95, 249, 0.1) 0px -79px 40px 0px inset,\n            // rgba(13, 95, 249, 0.06) 0px 2px 1px,\n            // rgba(13, 95, 249, 0.09) 0px 4px 2px,\n            // rgba(13, 95, 249, 0.09) 0px 8px 4px,\n            // rgba(13, 95, 249, 0.09) 0px 16px 8px,\n            // rgba(13, 95, 249, 0.09) 0px 32px 16px\n            //    `,\n\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )}\n\n\n              {/* {true && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/profile\"\n                  label=\"Profiles\"\n                  icon={<IconUserDollar size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/profile\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )} */}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#F3F6FF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n        id: data.id,\n        roleId: data.roleId,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email.split(\"@\").length > 0 ? row.original.email.split(\"@\")[0] : \"\"}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          active\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton compact onClick={handleAddUserModal}>\n        //       + Create User\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            My Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#0d5ff9\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#0d5ff9\",\n                      \"&:hover\": {\n                        backgroundColor: \"#F3F6FF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#0d5ff9\",\n                  color: \"#0d5ff9\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F3F6FF\",\n                    color: \"#0d5ff9\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Change Password\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = ({ source }) => {\n  console.log(source);\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\nimport { useState } from \"react\";\n\nconst CustomerProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = ({ source }) => {\n  const dispatch = useDispatch();\n  console.log(\"source for profiles\", source);\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n  console.log(\"Chart data for profiles\", chartData);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  // const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  // const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    // if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      // onMouseEnter={() => dispatch(setHoveredItem(text))}\n      // onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        // transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        // style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        // transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        // fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        // transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  // const dispatch = useDispatch();\n  // const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    // dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    // dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#F3F6FF\"}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#0d5ff9\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#0d5ff9\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            // onMouseEnter={() => handleMouseEnter(entry.name)}\n            // onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                // sx={{\n                //   transition: \"transform 0.3s ease\",\n                //   transform:\n                //     hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                //   backgroundImage:\n                //     hoveredItem === entry.name\n                //       ? \"radial-gradient(#000000 20% ,#0d5ff9)\"\n                //       : \"none\",\n                // }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Flex\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        alignItems: \"stretch\",\n      }}\n    >\n      {/* First Card for Selectors and Pie Chart */}\n      <Flex\n        style={{\n          marginRight: \"20px\",\n          flex: 3,\n        }}\n      >\n        <Card shadow={\"lg\"} radius={\"md\"} style={{ width: \"100%\" }}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Profile\n                </Text>\n              </Center>\n              <Center>\n                <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                  <IconArrowRight />\n                </ActionIcon>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={12}>\n              <Stack>\n                <StyledSelect\n                  disabled={status === \"loading\"}\n                  label={\"Profile\"}\n                  placeholder={\"Select Profile(s)\"}\n                  data={profileOptions}\n                  onChange={(value) => setSelectedProfile(value)}\n                />\n                <StyledSelect\n                  disabled={status === \"loading\"}\n                  label={\"Demographics\"}\n                  placeholder={\"Select Main Demographics\"}\n                  data={demographicOptions}\n                  onChange={(value) => setSelectedDemographic(value)}\n                />\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={12}>\n              <Center>\n                {status === \"loading\" ? (\n                  <Loader c=\"5c0ff2\" size=\"lg\" />\n                ) : (\n                  <ProfilePieChart />\n                )}\n              </Center>\n            </Grid.Col>\n          </Grid>\n        </Card>\n      </Flex>\n\n      {/* Second Card for Profile Data */}\n      <Flex\n        style={{\n          flex: 1,\n        }}\n      >\n        <Card shadow={\"lg\"} radius={\"md\"} style={{ width: \"100%\" }}>\n          <Center style={{ height: \"100%\" }}>\n            <ProfileDataCard />\n          </Center>\n        </Card>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useMemo, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCustomerDetails } from \"../redux/customerSlice\";\nimport { useSelector } from \"react-redux\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\n\nexport default function ProfileTableDisplay({ customerList }) {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const customerDetailsStatus = useSelector(state => state.customer.customerDetailsStatus)\n\n\n\n  const handleRowClick = (customer) => {\n    dispatch(getCustomerDetails(customer.customerId));\n  };\n\n  useEffect(() => {\n    if (customerDetailsStatus === \"success\") {\n      navigate(\"/dashboard\");\n    }\n\n    console.log(customerDetailsStatus);\n  }, [customerDetailsStatus, navigate]);\n\n  const columns = [\n    {\n      accessorKey: \"customerName\",\n      header: \"Name\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"email\",\n      header: \"Email\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"source\",\n      header: \"Source\",\n    },\n    {\n      accessorKey: \"level\",\n      header: \"Level\",\n    }\n  ];\n\n\n\n\n  return (\n    <Box style={{ marginTop: \"30px\" }}>\n      <StyledTable columns={columns} data={customerList} onRowClick={handleRowClick} />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProfileTypes, fetchProfileMappings } from '../../redux/profileTypesSlice';\nimport { Grid, Card, Image, Text, Switch } from '@mantine/core';\nimport ProfileTableDisplay from '../../components/ProfileTableDisplay';\nimport { Button } from '@mantine/core';\nimport { IconArrowBack } from '@tabler/icons-react';\nimport { clearCurrentCustomer } from '../../redux/customerSlice';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const profileTypes = useSelector((state) => state.profileTypesCustomerMapping.profileTypes);\n  const status = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const error = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const profileMappings = useSelector((state) => state.profileTypesCustomerMapping.profileMappings);\n  const profileMappingsStatus = useSelector((state) => state.profileTypesCustomerMapping.profileMappingsStatus);\n  const [showTable, setShowTable] = useState(false);\n  const [checkedStates, setCheckedStates] = useState({})\n\n  const imageDict = {\n    'technology': 'https://imgur.com/a/cweY8fX',\n    'sports': 'https://imgur.com/a/9NKkaqR',\n    'music': 'https://imgur.com/a/zlQUb16',\n    'gadget': 'https://imgur.com/kQHQ4IS',\n    'food': 'https://imgur.com/a/hxhCUq9',\n    'fitness': 'https://imgur.com/eFsmreM',\n    'travel': 'https://imgur.com/iUw4buI',\n    'automobile': 'https://imgur.com/B4aIhl5'\n  }\n\n  useEffect(() => {\n    dispatch(clearCurrentCustomer());\n    dispatch(fetchProfileTypes());\n  }, [dispatch]);\n\n  const handleProfileTypeClick = (profileTypeId) => {\n    dispatch(fetchProfileMappings(profileTypeId));\n    setShowTable(true);\n  };\n\n  const handleSwitchChange = (profileTypeId, isChecked) => {\n    setCheckedStates((prevStates) => ({\n      ...prevStates,\n      [profileTypeId]: isChecked,\n    }));\n  };\n\n  const handleTableRender = () => {\n    if (profileMappingsStatus === 'loading') {\n      return <>Loading ...</>;\n    } else if (profileMappingsStatus === 'failed') {\n      return <>Something went wrong</>;\n    } else if (profileMappingsStatus === 'succeeded') {\n      return <ProfileTableDisplay customerList={profileMappings} />;\n    }\n  };\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Profile Types</h1>\n      <Grid>\n        {!showTable ? (\n          profileTypes.map((profileType) => (\n            <Grid.Col span={3} key={profileType.id}>\n              <Card shadow=\"sm\" padding=\"lg\" component=\"a\" target=\"_blank\">\n                <Card.Section>\n                  {console.log(imageDict[profileType.name])}\n                  <Image\n                    src={imageDict[profileType.name]}\n                    style={{ width: '200px', height: '200px' }}\n                  />\n                </Card.Section>\n\n                <Card.Section style={{ padding: '10px' }}>\n                  <Text\n                    fw={500}\n                    size=\"lg\"\n                    style={{ display: 'inline-block', marginRight: '10px', cursor: 'pointer' }}\n                    onClick={() => handleProfileTypeClick(profileType.id)}\n                  >\n                    {profileType.name}\n                  </Text>\n\n                  <Switch\n                    checked={checkedStates[profileType.id] || false}\n                    onChange={(event) => handleSwitchChange(profileType.id, event.currentTarget.checked)}\n                    style={{ display: 'inline-block', float: 'right' }}\n                  />\n                </Card.Section>\n              </Card>\n            </Grid.Col>\n          ))\n        ) : (\n          <>\n            <Button onClick={() => setShowTable(false)} variant=\"text\">\n              <IconArrowBack /> Back\n            </Button>\n            <br />\n            {handleTableRender()}\n          </>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\nimport { setAuth } from \"./redux/authSlice\";\nimport Profile from './pages/Profile/Profile'\nimport AllCampaigns from \"./pages/Campaign/components/AllCampaigns/AllCampaigns\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  useEffect(() => {\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\n    if (isLoggedIn) {\n      dispatch(setAuth());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {hasPermission(userPermissions, \"profile_dashboard\") ? (\n                <PrivateRoute path=\"/\" element={<Root />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute path=\"/users\" element={<PermissionDenied />} />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n              <PrivateRoute path=\"/pd\" element={<PermissionDenied />} />\n              <PrivateRoute path=\"/profile\" element={<Profile />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}