{"version":3,"sources":["i18n.js","utils/sleep.js","redux/customerSlice.js","redux/elasticCustomersSlice.js","StyledComponents/StyledTable.jsx","StyledComponents/StyledTable3.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/StatCard.jsx","redux/profileTypesSlice.js","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","components/AgentPages/Remarks.tsx","components/Remarks/RemarkListings.jsx","components/FinancialInformation/FinancialInformation.jsx","components/InsuranceDetails/InsuranceDetails.jsx","components/VehicleDetails/VehicleDetails.jsx","pages/Dashboard/InfoTag.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/campaignListSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","components/CustomNavbar/CustomNavbar.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","components/MainHeader/MainHeader.jsx","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/AllCampaigns/AllCampaigns.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","components/ProfileTableDisplay.jsx","pages/Profile/Profile.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","async","data","axios","get","getCustomersProfileCompleteness","getCustomerDetails","id","getCustomerServicesHistory","console","log","getCustomerRemarks","customerId","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerProfileCompletion","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","customerRemarks","remarksStatus","reducers","setCurrentCustomer","state","action","payload","setCurrentCustomerProfileCompletion","clearCurrentCustomer","extraReducers","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","updatedCustomers","customer","profileCompletion","profile_completion","actions","total","loading","error","pagination","from","size","searchQuery","columnSearchQuery","fetchPaginatedResults","_ref","_ref2","rejectWithValue","response","params","message","performGlobalSearch","_ref3","_ref4","searchTerm","performCompoundSearch","_ref5","_ref6","searchTerms","JSON","stringify","elasticCustomerSlice","resetSearch","loadingStateElasticCustomers","builder","addCase","hits","selectCustomers","elasticCustomers","selectTotal","isLoading","createSelector","filter","includes","StyledTable","columns","onRowClick","topProps","restProps","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","StyledTable3","dispatch","useDispatch","navigate","useNavigate","useSelector","setSearchTerm","useState","setPagination","pageIndex","pageSize","useEffect","fetchData","useMemo","accessorKey","header","accessorFn","slice","minSize","handleRowClick","useCallback","unwrap","profile_percentage","mode","enablePagination","manualPagination","rowCount","pageCount","Math","ceil","globalFilter","onGlobalFilterChange","onPaginationChange","fontWeight","Customers","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","align","fontFamily","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","label","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","variant","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconClipboardText","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","classes","cx","active","setActive","myRole","useLocation","auth","links","item","index","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","url","percentage","frequency","lastUpdated","Avatar","src","ta","fz","percentageCompleted","Badge","Progress","value","process","fetchProfileTypes","fetchProfileMappings","profileId","profilingSlice","profileTypes","profileMappings","profileTypesStatus","profileMappingsStatus","Profiling","profileData","profileTypesCustomerMapping","stats","profile","Grid","Col","span","profileType","srcUrl","round","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","setProfile","profiling","personal_details","source","memoizedSelectedCustomer","randomDetails","randomLocation","faker","location","city","randomState","randomAddress","streetAddress","randomPincode","zipCode","marital_status","travel_address","anniversary","employment","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","post","keywordPayload","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","handleSubmitKeywords","setData","rolesPermissionsStatus","rolePermission","keyword","setValue","searchValue","onSearchChange","unknowns","setUnknowns","isDataChanged","setDataChanged","transformedData","category","allKeywords","unknownValues","obj","hasChanged","isEqual","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","readOnly","alignSelf","Interests","interests","setInterests","groupedByCategory","groupBy","uniq","interest","React","Fragment","gradient","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","tempEditData","setTempEditData","headerElements","headerItem","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","handleSaveNewRow","length","toString","bg","selected","checked","toggleRow","transitionDuration","handleEditSave","IconCheck","IconX","handleEdit","find","prevState","IconEdit","mb","handleDelete","IconTrash","ml","handleAdd","IconPlus","ScrollArea","maxHeight","Table","toggleAll","type","industry","incomeBracket","Occupation","gender","relationship","phone","email","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Loader","Remarks","Textarea","RemarkListings","currentCustomerId","opened","open","close","useDisclosure","selectedRemark","setSelectedRemark","remark","Modal","onClose","centered","agentName","date","time","acc_no","ifsc","branch","FinancialInformation","validity","expiry","InsuranceDetails","vin","product_type","VehicleDetails","Dashboard","_customerDetails$prof","submitKeywords","setSubmitKeywords","routesClicked","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","isLoggedIn","setSelectedCustomer","setIsLoading","setOpened","prev","pathname","keywordsPayload","then","arguments","undefined","RingProgress","thickness","sections","weight","LoadingOverlay","visible","overlayBlur","loaderProps","Card","textAlign","isHNI","full_name","phone_number","Routes","Route","element","path","Notification","withCloseButton","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","window","atob","charCodeAt","join","parse","loginUser","userData","registerUser","getProfile","getUsers","addUser","authSlice","user","userStatus","users","setAuth","logout","localStorage","clear","defaults","headers","common","reload","storage","getItem","_id","setMyRole","access_token","sub","setItem","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","patch","createRoles","createPermission","createRolesPermissionMapping","getAllRoles","getAllPermissions","getAllPermissionsByRole","roleid","getAllRolesPermissionsMappingsByUser","userId","deactivateMapping","mappingId","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","fetchRowData","getState","campaignManagement","endpoint","responses","commonCustomerIDs","rowKey","first","second","third","Error","body","information_type","toLowerCase","fetch","method","customerIDsForThisRow","json","Set","figures","customerIDs","fetchFiguresForRow","otherRowId","Number","otherRow","createCampaign","keywordsUsed","selectedCombinations","combination","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","isModalOpen","dropdownData","Age","Gender","Location","Vehicle","Health","Date","now","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","selectRadarData","campaignSlice","campaignNames","selectedCampaigns","selectCampaign","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","profileDataCard","demographic","demographicData","profiles","displayName","displayAndColorMappings","totalCount","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","fetchCampaigns","_error$response","determineCampaignStatus","campaign","currentDate","isActive","campaignStatus","campaigns","store","configureStore","reducer","campaignManagementReducer","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","campaignListSlice","elasticCustomersSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","route_permission","h","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","assets","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","toggleIframe","isValid","test","validateMobileNumber","mobileIdMap","responseProfile","responseCategories","responseCompletion","details","mobileNo","mobile","URLSearchParams","completionPercentage","categories","profilingTypes","handleEndCall","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","entries","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","newData","differenceWith","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","categoriesKeys","randomCategories","randomIndex","floor","random","randomCategoryKey","randomCategoryItems","splice","fetchedQuestions","categoryItems","bodyInputParts","level","result","questionText","questionLevel","questionAnswers","parseInt","question","answers","idx","fetchQuestions","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","handleAnswerChange","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","searchParams","search","useQueryParams","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","setCategoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","questionHistory","setQuestionHistory","keywordsAdded","errorNotification","notifications","show","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","toggleFullscreen","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Divider","pr","handleProfileChange","prevProfile","LightDarkButton","toggleColorScheme","useMantineColorScheme","IconSun","IconMoonStars","CustomNavbar","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","MainHeader","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","tableData","setTableData","adding","setAdding","Switch","deactivateMappingOnClick","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","Space","fontColor","addRow","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","allUserIds","handleAddUserModal","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","setPermissionName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","handleAddRoleClick","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","IconRefresh","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","addCustomDate","newCustomDateTime","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","min","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","wrap","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","accept","files","fileContent","updatedTabData","alert","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","handleNext","trim","handlePublishConfirmation","handleConfirmedPublish","res","match","ButtonGroup","handleOpenModal","isOpen","closeModal","Demographic","acc","curr","BarStackedView","setSelectedCampaigns","margin","chartData","delivered","totalSent","converted","success","interested","failure","failed","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","PI","CustomPieChart","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","AllCampaigns","campaignState","reversedData","reverse","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","handleUserActionModal","selected_user","updatedUserData","overlayColor","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","handleDeleteImage","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","address","pincode","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","PasswordConstraints","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","strokeDasharray","CustomerProfileAnalysis","selectedSource","setSelectedSource","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","dataToDisplay","activeIndex","findIndex","handleMouseEnter","handleMouseLeave","activeShape","Arrow","bgColor","textColor","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","g","b","getImageData","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","flex","Root","ProfileTableDisplay","customerList","Profile","showTable","setShowTable","checkedStates","setCheckedStates","imageDict","IconArrowBack","handleProfileTypeClick","profileTypeId","handleSwitchChange","isChecked","prevStates","float","App","setColorScheme","login","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.5b899b23.chunk.js","sourcesContent":["import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerProfileCompletion: null,\n  customerServiceHistory: [],\n  fetchedPofileCompleteness: false,\n  customerServiceHistoryStatus: \"idle\",\n  customerDetailsStatus: \"idle\",\n  customerRemarks: [], // New field for storing customer remarks\n  remarksStatus: \"idle\", // New status field for customer remarks\n};\n\nexport const getCustomers = createAsyncThunk(\n  \"customer/getCustomers\",\n  async () => {\n    // await sleep(3000)\n    const { data } = await axios.get(\"/customers\");\n    return data;\n  },\n);\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\n  \"customer/getCustomersProfileCompleteness\",\n  async () => {\n    await sleep(200);\n    const { data } = await axios.get(\"/profile\");\n    return data;\n  },\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  },\n);\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerServicesHistory\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  },\n);\n\nexport const getCustomerRemarks = createAsyncThunk(\n  \"customer/getCustomerRemarks\",\n  async (customerId) => {\n    const { data } = await axios.get(\"/customers/remarks/\" + customerId);\n    console.log(\"Remarks in thunk\", data);\n    return data;\n  },\n);\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer: (state, action) => {\n      state.customerDetails = action.payload;\n    },\n    setCurrentCustomerProfileCompletion: (state, action) => {\n      state.customerProfileCompletion = action.payload;\n    },\n    clearCurrentCustomer: (state, action) => {\n      // state.customerDetails = [];\n      state.customerDetailsStatus = \"idle\";\n    },\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const curr_state_obj = {};\n      const res_obj = {};\n      state.customers.map((e) => (curr_state_obj[e.id] = e));\n      action.payload.customer_details.map((e) => (res_obj[e.id] = e));\n      state.customers = Object.values(Object.assign(curr_state_obj, res_obj));\n    },\n    [getCustomers.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerDetails.pending]: (state) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload;\n    },\n    [getCustomerDetails.rejected]: (state) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion\n          ? action.payload.profileCompletion[customer.id]\n          : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n      state.customers = updatedCustomers;\n      state.fetchedPofileCompleteness = true;\n    },\n    [getCustomersProfileCompleteness.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n    [getCustomerRemarks.pending]: (state) => {\n      state.remarksStatus = \"loading\";\n    },\n    [getCustomerRemarks.fulfilled]: (state, action) => {\n      state.remarksStatus = \"success\";\n      state.customerRemarks = action.payload; // Assuming API returns an array of remarks\n    },\n    [getCustomerRemarks.rejected]: (state) => {\n      state.remarksStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const {\n  setCurrentCustomer,\n  clearCurrentCustomer,\n  setCurrentCustomerProfileCompletion,\n} = customerSlice.actions;\n","import {\n  createSlice,\n  createAsyncThunk,\n  createSelector,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Define initial state\nconst initialState = {\n  customers: [],\n  total: 0,\n  loading: false,\n  error: null,\n  pagination: { from: 0, size: 10 },\n  searchQuery: \"\",\n  columnSearchQuery: {},\n};\n\nconsole.log(\n  \"Initializing elasticCustomersSlice with initialState:\",\n  initialState,\n);\n\n// Async thunk for fetching paginated results\nexport const fetchPaginatedResults = createAsyncThunk(\n  \"elasticCustomers/fetchPaginatedResults\",\n  async ({ from = 0, size = 10 }, { rejectWithValue }) => {\n    console.log(`Fetching paginated results: from=${from}, size=${size}`);\n    try {\n      const response = await axios.get(\n        \"/customers/elastic/fetch-paginated-results\",\n        { params: { from, size } },\n      );\n      console.log(\"Fetched paginated results successfully\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching paginated results:\", error.message);\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\n// Async thunk for global search\nexport const performGlobalSearch = createAsyncThunk(\n  \"elasticCustomers/performGlobalSearch\",\n  async ({ searchTerm, from, size }, { rejectWithValue }) => {\n    console.log(\n      `Performing global search: searchTerm=${searchTerm}, from=${from}, size=${size}`,\n    );\n    try {\n      const response = await axios.get(\"/customers/elastic/global-search\", {\n        params: { searchTerm, from, size },\n      });\n      console.log(\"Global search results:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in global search:\", error.message);\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\n// Async thunk for compound search\nexport const performCompoundSearch = createAsyncThunk(\n  \"elasticCustomers/performCompoundSearch\",\n  async ({ searchTerms, from, size }, { rejectWithValue }) => {\n    console.log(\n      `Performing compound search: searchTerms=${JSON.stringify(\n        searchTerms,\n      )}, from=${from}, size=${size}`,\n    );\n    try {\n      const response = await axios.get(\"/customers/elastic/compound-search\", {\n        params: { ...searchTerms, from, size },\n      });\n      console.log(\"Compound search results:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in compound search:\", error.message);\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\n// Slice definition\nconst elasticCustomerSlice = createSlice({\n  name: \"elasticCustomers\",\n  initialState,\n  reducers: {\n    resetSearch: (state) => {\n      console.log(\"Resetting search queries\");\n      state.searchQuery = \"\";\n      state.columnSearchQuery = {};\n    },\n    loadingStateElasticCustomers: (state) => {\n      console.log(\"load state for elastic customer true\");\n      state.loading = true;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPaginatedResults.pending, (state) => {\n        console.log(\"Fetching paginated results pending\");\n        state.loading = true;\n      })\n      .addCase(fetchPaginatedResults.fulfilled, (state, action) => {\n        console.log(\"Fetching paginated results fulfilled\");\n        state.customers = action.payload.hits;\n        state.total = action.payload.total;\n        state.loading = false;\n        state.error = null;\n      })\n      .addCase(fetchPaginatedResults.rejected, (state, action) => {\n        console.log(\"Fetching paginated results rejected\", action.payload);\n        state.error = action.payload;\n        state.loading = false;\n      })\n      .addCase(performGlobalSearch.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(performGlobalSearch.fulfilled, (state, action) => {\n        console.log(\"Global search fulfilled\");\n        state.customers = action.payload.hits;\n        state.total = action.payload.total;\n        state.loading = false;\n        state.error = null;\n      })\n      .addCase(performGlobalSearch.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(performCompoundSearch.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(performCompoundSearch.fulfilled, (state, action) => {\n        console.log(\"Compound search fulfilled\");\n        state.customers = action.payload.hits;\n        state.total = action.payload.total;\n        state.loading = false;\n        state.error = null;\n      })\n      .addCase(performCompoundSearch.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\n// Export actions and reducer\nexport const { resetSearch, loadingStateElasticCustomers } =\n  elasticCustomerSlice.actions;\nexport default elasticCustomerSlice.reducer;\n\n// Selectors\nexport const selectCustomers = (state) => {\n  console.log(\"Selecting customers\");\n  return state.elasticCustomers.customers;\n};\nexport const selectTotal = (state) => {\n  console.log(\"Selecting total hits\");\n  return state.elasticCustomers.total;\n};\nexport const isLoading = (state) => {\n  console.log(\"Checking if loading\");\n  return state.elasticCustomers.loading;\n};\nexport const selectPagination = (state) => {\n  console.log(\"Selecting pagination\");\n  return state.elasticCustomers.pagination;\n};\n\n// Example selector using createSelector for memoization\nexport const selectFilteredCustomers = createSelector(\n  [selectCustomers, (state, filter) => filter],\n  (customers, filter) => {\n    console.log(`Filtering customers with filter: ${filter}`);\n    return customers.filter((customer) => customer.name.includes(filter));\n  },\n);\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  console.log(\"topProps\", topProps);\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  fetchPaginatedResults,\n  performGlobalSearch,\n  selectCustomers,\n  isLoading,\n  resetSearch,\n  selectTotal,\n} from \"../redux/elasticCustomersSlice\";\nimport {\n  clearCurrentCustomer,\n  getCustomerDetails,\n  setCurrentCustomerProfileCompletion,\n} from \"../redux/customerSlice\";\nimport { MaterialReactTable } from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Flex,\n  ActionIcon,\n  Text,\n  useMantineTheme,\n  Center,\n} from \"@mantine/core\";\n\nconst StyledTable3 = () => {\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const customers = useSelector(selectCustomers);\n  const loading = useSelector(isLoading);\n  const total = useSelector(selectTotal);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { pageIndex, pageSize } = pagination;\n      const from = pageIndex * pageSize;\n\n      if (searchTerm) {\n        dispatch(performGlobalSearch({ searchTerm, from, size: pageSize }));\n      } else {\n        dispatch(fetchPaginatedResults({ from, size: pageSize }));\n      }\n    };\n\n    fetchData();\n  }, [dispatch, pagination, searchTerm]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetSearch());\n    };\n  }, [dispatch]);\n\n  const columns = useMemo(\n    () => [\n      { accessorKey: \"name\", header: \"Name\" },\n      {\n        accessorFn: (row) => `CLID${row.customerId.slice(0, 6)}...`,\n        id: \"customerId\",\n        header: \"Customer ID\",\n      },\n      { accessorKey: \"email\", header: \"Email\", minSize: 300 },\n      { accessorKey: \"source\", header: \"Source\" },\n      { accessorKey: \"mobile\", header: \"Mobile\" },\n      { accessorKey: \"profile_percentage\", header: \"Profile Completion (%)\" },\n    ],\n    [],\n  );\n\n  const handleRowClick = useCallback(\n    async (row) => {\n      await dispatch(getCustomerDetails(row.original.customerId)).unwrap();\n      dispatch(\n        setCurrentCustomerProfileCompletion(row.original.profile_percentage),\n      );\n      navigate(\"/dashboard\");\n    },\n    [dispatch, navigate],\n  );\n\n  const localTheme = createTheme({\n    palette: {\n      mode: theme.colorScheme === \"dark\" ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleExportRows = useCallback((rows) => {\n    const csv = generateCsv(\n      mkConfig({\n        filename: \"exported_customers\",\n        useKeysAsHeaders: true,\n      }),\n    )(rows.map((row) => row.original));\n    download(csv);\n  }, []);\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={customers}\n        loading={loading}\n        enablePagination\n        manualPagination\n        rowCount={total}\n        state={{\n          pagination: {\n            pageIndex: pagination.pageIndex,\n            pageSize: pagination.pageSize,\n            pageCount: Math.ceil(total / pagination.pageSize),\n          },\n          globalFilter: searchTerm,\n        }}\n        onGlobalFilterChange={setSearchTerm}\n        onPaginationChange={setPagination}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => handleRowClick(row),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  color={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fontWeight={\"bold\"} color={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable3;\n","import {\n  LoadingOverlay,\n  Title,\n  Button,\n  ActionIcon,\n  Loader,\n  Center,\n  Stack,\n} from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n  clearCurrentCustomer,\n} from \"../../redux/customerSlice\";\nimport { loadingStateElasticCustomers } from \"../../redux/elasticCustomersSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\nimport { IconRefresh } from \"@tabler/icons-react\";\nimport StyledTable3 from \"../../StyledComponents/StyledTable3\";\nimport { fetchPaginatedResults } from \"../../redux/elasticCustomersSlice\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n  // const { status, customers, fetchedPofileCompleteness } = useSelector(\n  //   (state) => state.customer,\n  // );\n  //\n  useEffect(() => {\n    dispatch(clearCurrentCustomer());\n  }, []);\n  // //\n  // useEffect(() => {\n  //   dispatch(getCustomers());\n  //   dispatch(getCustomersProfileCompleteness());\n  // }, [dispatch]);\n  //\n  // const handleRefresh = () => {\n  //   dispatch(getCustomers());\n  //   dispatch(getCustomersProfileCompleteness());\n  // };\n\n  // const refreshButton = (\n  //   <ActionIcon c={\"#0d5ff9\"} size={\"sm\"} onClick={handleRefresh}>\n  //     <IconRefresh />\n  //   </ActionIcon>\n  // );\n\n  // if () {\n  //   return (\n  //     <Center>\n  //       <Loader c=\"#0d5ff9\" size=\"lg\" />\n  //     </Center>\n  //     // <LoadingOverlay\n  //     //   visible\n  //     //   overlayBlur={2}\n  //     //   overlayColor={\"#F3F6FF\"}\n  //     //   loaderProps={{\n  //     //     color: \"#0d5ff9\",\n  //     //     size: \"xl\",\n  //     //     variant: \"dots\",\n  //     //   }}\n  //     // />\n  //   );\n  // } else {\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n          <div style={{ padding: \"10px\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginBottom: \"20px\",\n                marginTop: \"5px\",\n              }}\n            >\n              <span>\n                <Title pl={5}>Customers</Title>\n              </span>\n            </div>\n            {/* <TableDisplay */}\n            {/*   customerList={customers} */}\n            {/*   fetchedPofileCompleteness={fetchedPofileCompleteness} */}\n            {/*   topProps={() => refreshButton} */}\n            {/* /> */}\n            <StyledTable3 />\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n//};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconClipboardText,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #0d5ff9\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0D5FF9\",\n      boxShadow: `\n rgba(13, 95, 249, 1) 0px 1px 1px,\n rgba(13, 95, 249, 0.5) 0px 2px 2px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 3px 5px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"remarks\", label: \"Remarks\", icon: <IconClipboardText /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  { link: \"fi\", label: \"Financial Information\", icon: <IconReportMoney /> },\n  { link: \"id\", label: \"Insurance Details  \", icon: <IconCarCrash /> },\n  { link: \"vd\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const location = useLocation();\n  const { myRole } = useSelector((state) => state.auth);\n\n\n  const links = data\n    .filter((item, index) => (myRole === 'qc' ? index < 2 : true))\n    .map((item) => (\n      <NavLink\n        className={cx(classes.link, {\n          [classes.linkActive]: item.label === active,\n        })}\n        icon={item.icon}\n        component={Link}\n        variant=\"subtle\"\n        to={item.link}\n        label={item.label}\n        key={item.label}\n        onClick={(event) => {\n          setActive(item.label);\n        }}\n      />\n    ));\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to={\"/customers\"}\n            c=\"#0d5ff9\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    <Badge size=\"lg\">{percentage}%</Badge>\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            {/* <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group> */}\n        </Paper>\n    );\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  data: [],\n  profileTypes: [],\n  profileMappings: [],\n  status: \"idle\",\n  profileTypesStatus: \"idle\",\n  profileMappingsStatus: \"idle\",\n  error: null,\n};\n\n// Async thunk for fetching customer data\nexport const fetchData = createAsyncThunk(\n  \"profiling/fetchData\",\n  async (customerId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/customer-mapping/${customerId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile types\nexport const fetchProfileTypes = createAsyncThunk(\n  \"profiling/fetchProfileTypes\",\n  async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-types`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile mappings by profile ID\nexport const fetchProfileMappings = createAsyncThunk(\n  \"profiling/fetchProfileMappings\",\n  async (profileId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/profile-customer-mappings-by-profile/${profileId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\nconst profilingSlice = createSlice({\n  name: \"profiling\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error =\n          action.error.message ||\n          \"Failed to fetch profile types for the customer\";\n      })\n      .addCase(fetchProfileTypes.pending, (state) => {\n        state.profileTypesStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileTypes.fulfilled, (state, action) => {\n        state.profileTypesStatus = \"succeeded\";\n        state.profileTypes = action.payload;\n      })\n      .addCase(fetchProfileTypes.rejected, (state, action) => {\n        state.profileTypesStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile types\";\n      })\n      .addCase(fetchProfileMappings.pending, (state) => {\n        state.profileMappingsStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileMappings.fulfilled, (state, action) => {\n        state.profileMappingsStatus = \"succeeded\";\n        state.profileMappings = []\n        state.profileMappings = action.payload;\n      })\n      .addCase(fetchProfileMappings.rejected, (state, action) => {\n        state.profileMappingsStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile mappings\";\n      });\n  },\n});\n\nexport default profilingSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"@mantine/core\";\nimport { StatsCard } from \"./StatCard\";\nimport { fetchData } from \"../../redux/profileTypesSlice\";\n\nconst Profiling = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(\n    (state) => state.profileTypesCustomerMapping.data,\n  );\n  const { customerDetails } = useSelector((state) => state.customer);\n\n  console.log(\"Profiling data\", profileData);\n\n  useEffect(() => {\n    dispatch(fetchData(customerDetails.id));\n  }, [dispatch, customerDetails]);\n\n  const stats = profileData.map((profile) => (\n    <Grid.Col key={profile.profileType.id} span={4}>\n      <StatsCard\n        title={profile.profileType.name}\n        url={profile.profileType.srcUrl}\n        percentage={Math.round(profile.profileCompletion)}\n      />\n    </Grid.Col>\n  ));\n\n  return (\n    <>\n      <Grid gutter=\"xl\">{stats}</Grid>\n    </>\n  );\n};\n\nexport default Profiling;\n\n","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport InfoTag from \"./InfoTag\";\nimport { fakerEN_IN as faker } from \"@faker-js/faker\";\nimport { useSelector } from \"react-redux\";\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { customerDetails } = useSelector((state) => state.customer);\n  console.log(\"state\", customerDetails);\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n  const memoizedSelectedCustomer = useMemo(\n    () => selectedCustomer,\n    [selectedCustomer.id, selectedCustomer.profiling.personal_details],\n  );\n\n  const randomDetails = useMemo(() => {\n    return {\n      randomLocation: faker.location.city(),\n      randomState: faker.location.state(),\n      randomAddress: faker.location.streetAddress(),\n      randomPincode: faker.location.zipCode(),\n    };\n  }, [memoizedSelectedCustomer]);\n\n  if (profile) {\n    return (\n      <>\n        <Container>\n          <div>\n            <Text fw={500}>Address & Other Info</Text>\n            <Grid gutter=\"xl\">\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Location(city)\"}\n                  subject={randomDetails.randomLocation}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"State\"} subject={randomDetails.randomState} />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"PINCODE\"}\n                  subject={randomDetails.randomPincode}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"Country\"} subject=\"India\" />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Address Line\"}\n                  subject={randomDetails.randomAddress}\n                />\n              </Grid.Col>\n            </Grid>\n          </div>\n          <div>\n            <Grid gutter=\"xl\">\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Marital status\"}\n                  subject={profile.marital_status}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Travel Address\"}\n                  subject={profile.travel_address}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"Anniversary\"} subject={profile.anniversary} />\n              </Grid.Col>\n\n              <Grid.Col span={6}>\n                <InfoTag title={\"Employment\"} subject={profile.employment} />\n              </Grid.Col>\n            </Grid>\n          </div>\n        </Container>\n      </>\n    );\n  } else {\n    return <>Fetching profile ...</>;\n  }\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent, handleSubmitKeywords }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n  const [isDataChanged, setDataChanged] = useState(false);\n\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n\n\n  useEffect(() => {\n    const hasChanged = !_.isEqual(values, transformedData.map((obj) => obj.value));\n    setDataChanged(hasChanged);\n  }, [values, transformedData]);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          <div style={{ alignSelf: \"center\", padding: \"10px\" }}>\n            {isDataChanged && hasPermission(userPermissions, \"keywords_edit\") && <Button variant=\"light\"\n              onClick={() => handleSubmitKeywords()}\n            >\n              Update keywords\n            </Button>\n            }\n\n          </div>\n\n\n\n          {/* <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div> */}\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\n\nconst Interests = () => {\n  const dispatch = useDispatch()\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { customerKeywords, customerKeywordsStatus } = useSelector((state) => state.keyword);\n  const [interests, setInterests] = useState([])\n\n\n\n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      // Use _.uniq to remove duplicate values\n      const uniqueValues = _.uniq(_.map(values, 'value'));\n      return { category, values: uniqueValues };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n\n  useEffect(() => {\n    if (customerKeywordsStatus == 'success') {\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n      {customerKeywordsStatus == 'success' ?\n        <>\n          {interests.map((interest) => (\n            <React.Fragment key={interest.category}>\n              <Text fw={700}>{interest.category}</Text>\n              {interest.values.map((value) => (\n                <Badge\n                  key={value}\n                  variant=\"gradient\"\n                  gradient={{ from: 'indigo', to: 'cyan' }}\n                >\n                  {value}\n                </Badge>\n              ))}\n            </React.Fragment>\n          ))}\n        </> :\n        <>Loading interests...</>\n      }\n\n\n    </>\n\n  )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport { useDisclosure } from \"@mantine/hooks\";\nimport { Modal, Group, Button } from \"@mantine/core\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport { getCustomerRemarks } from \"../../redux/customerSlice\"; // replace 'path_to_your' with the actual path\n\nconst RemarkListings = () => {\n  const dispatch = useDispatch();\n  const customerRemarks = useSelector(\n    (state) => state.customer.customerRemarks,\n  );\n  const remarksStatus = useSelector((state) => state.customer.remarksStatus);\n  const currentCustomerId = useSelector(\n    (state) => state.customer.customerDetails.id,\n  ); // Assuming 'id' is the field in customerDetails for the customer's ID\n\n  const [opened, { open, close }] = useDisclosure(false);\n  const [selectedRemark, setSelectedRemark] = useState(null);\n\n  useEffect(() => {\n    if (currentCustomerId) {\n      dispatch(getCustomerRemarks(currentCustomerId));\n    }\n  }, [dispatch, currentCustomerId]);\n\n  // Define columns for StyledTable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"agentName\",\n        header: \"Agent Name\",\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Date\",\n      },\n      {\n        accessorKey: \"time\",\n        header: \"Time\",\n      },\n      {\n        accessorKey: \"remark\",\n        header: \"Remark\",\n      },\n    ],\n    [],\n  );\n\n  const handleRowClick = (remark) => {\n    setSelectedRemark(remark);\n    open();\n  };\n\n  return (\n    <>\n      <Box>\n        {remarksStatus === \"success\" ? (\n          <StyledTable\n            columns={columns}\n            data={customerRemarks}\n            onRowClick={handleRowClick}\n          />\n        ) : remarksStatus === \"loading\" ? (\n          <p>Loading...</p>\n        ) : (\n          <p>Failed to load remarks.</p>\n        )}\n      </Box>\n\n      <Modal opened={opened} onClose={close} title=\"Remark Details\" centered>\n        {selectedRemark && (\n          <div>\n            <p>\n              <strong>Agent Name:</strong> {selectedRemark.agentName}\n            </p>\n            <p>\n              <strong>Date:</strong> {selectedRemark.date}\n            </p>\n            <p>\n              <strong>Time:</strong> {selectedRemark.time}\n            </p>\n            <p>\n              <strong>Remark:</strong> {selectedRemark.remark}\n            </p>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default RemarkListings;\n","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Financial Information';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'Acc. No', 'Variant', 'IFSC code', 'Branch'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    acc_no: '',\n    variant: '',\n    ifsc: '',\n    branch: '',\n});\n\n\nexport function FinancialInformation() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Insurance Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Source', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    source: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function InsuranceDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Vehicle Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'VIN/Chassis no.', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    vin: '',\n    product_type: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function VehicleDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { Text } from '@mantine/core';\nimport React from 'react';\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: \"-10px\" }}>\n            <Text fz={'sm'} c='dimmed' style={{ alignSelf: \"start\" }}>{title}</Text>\n            <Text style={{ alignSelf: \"end\" }}>{subject}</Text>\n        </div>\n    );\n};\n\nexport default InfoTag;\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n  Space,\n  Center,\n  RingProgress,\n  Text,\n  Badge\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\nimport Remarks from \"../../components/AgentPages/Remarks\";\nimport RemarkListings from \"../../components/Remarks/RemarkListings\";\nimport { FinancialInformation } from \"../../components/FinancialInformation/FinancialInformation\";\nimport { InsuranceDetails } from \"../../components/InsuranceDetails/InsuranceDetails\";\nimport { VehicleDetails } from \"../../components/VehicleDetails/VehicleDetails\";\nimport { IconUserSquareRounded } from '@tabler/icons-react';\nimport { Avatar } from '@mantine/core';\nimport { IconUser } from \"@tabler/icons-react\";\nimport InfoTag from \"./InfoTag\";\n\n\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n\n  const { status, customerDetails, customerProfileCompletion } = useSelector((state) => state.customer);\n  const [profile, setProfile] = useState({\n    ...customerDetails.profiling?.personal_details,\n  });\n\n  const { profile_completion } = customerDetails;\n\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n\n\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n\n\n  useEffect(() => {\n    if (!customerDetails || Object.keys(customerDetails).length === 0) {\n      navigate(\"/customers\");\n    }\n  }, [customerDetails, navigate]);\n\n\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  const handleSubmitKeywords = () => {\n\n    const payload = {\n      customerId: customerDetails.id,\n      keywordsPayload: keywordValues,\n    };\n    setNotification(true);\n    sleep(5000).then((data) => setNotification(false));\n    dispatch(updateKeywords(payload));\n\n\n  }\n\n  const profileCompletion = (percentage = 0) => {\n    return (\n      <div>\n\n        <RingProgress\n          mt={0}\n          size={100}\n          thickness={8}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 75\n                  ? \"#1D9B25\"\n                  : percentage > 60\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </div>\n    );\n  };\n\n  // useEffect(() => {\n  //   if (\n  //     routesClicked.at(-2) &&\n  //     routesClicked.at(-2) === \"/dashboard/keywords\"\n  //   ) {\n  //     const updateKeywordPayload = {\n  //       customerId: customerDetails.id,\n  //       keywordsPayload: keywordValues,\n  //     };\n\n  //     setNotification(true);\n  //     sleep(5000).then((data) => setNotification(false));\n\n  //     dispatch(updateKeywords(updateKeywordPayload));\n  //   }\n  // }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Grid.Col span={12}>\n              <Card>\n                <Grid>\n                  <Grid.Col span={2}>\n                    <Grid.Col span={12} style={{ textAlign: \"center\" }}>\n                      <Avatar color=\"blue\" size=\"lg\">\n                        <IconUser size=\"lg\" />\n                      </Avatar>\n                    </Grid.Col>\n                    {customerDetails.isHNI &&\n                      <Grid.Col span={12}>\n                        <Badge color=\"yellow\" variant=\"filled\" size=\"lg\">HNI</Badge>\n                      </Grid.Col>\n                    }\n\n\n                  </Grid.Col>\n\n                  <Grid.Col span={6}>\n                    <Text fw={500}>Basic Info</Text>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Name\"} subject={profile.full_name} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Email Address\"} subject={customerDetails.email} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Gender\"} subject={profile.gender} />\n                    </Grid.Col>\n                  </Grid.Col>\n                  <Grid.Col span={4}>\n                    <Grid.Col span={12} >\n                      <Center> {profileCompletion(customerProfileCompletion)}</Center>\n                    </Grid.Col>\n                  </Grid.Col>\n\n                </Grid>\n              </Card>\n            </Grid.Col>\n\n\n\n            <Grid.Col span={12}>\n              <Card shadow={\"lg\"} radius={\"md\"}>\n                <Routes>\n                  <Route>\n                    <Route\n                      index\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route\n                      path=\"/personalInformation\"\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route path=\"/profiling\" element={<Profiling />} />\n                    <Route\n                      path=\"/keywords\"\n                      element={\n                        <KeywordsEntry\n                          submitKeywords={submitKeywords}\n                          updateKeywordValuesParent={updateKeywordValuesParent}\n                          handleSubmitKeywords={handleSubmitKeywords}\n                        />\n                      }\n                    />\n\n                    <Route path=\"/interests\" element={<Interests />} />\n                    <Route path=\"/remarks\" element={<RemarkListings />} />\n                    <Route path=\"/occupation\" element={<Occupation />} />\n                    <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                    <Route path=\"/activity\" element={<Activity />} />\n                    <Route path=\"/fi\" element={<FinancialInformation />} />\n                    <Route path=\"/id\" element={<InsuranceDetails />} />\n                    <Route path=\"/vd\" element={<VehicleDetails />} />\n                  </Route>\n                </Routes>\n              </Card>\n\n            </Grid.Col>\n\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Syncing keywords\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  myRole: null,\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setAuth: (state, action) => {\n      const storage = JSON.parse(localStorage.getItem(\"login\"));\n      if (Object.keys(storage).length > 0) {\n        const { email, _id } = storage\n        state.user.email = email;\n        state.user._id = _id;\n        state.status = \"success\";\n        state.isLoggedIn = true;\n      } else {\n        state.isLoggedIn = false;\n      }\n    },\n\n    setMyRole: (state, action) => {\n      state.myRole = action.payload\n    }\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout, setMyRole } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n  \"campaignManagement/fetchRowData\",\n  async (_, { getState }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n    const responses = [];\n    let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n    for (const rowKey of Object.keys(state.rows)) {\n      const row = state.rows[rowKey];\n      if (!row.first || !row.second || !row.third) {\n        throw new Error(\"Row has empty/default values. Fetching aborted.\");\n      }\n\n      const body = {\n        information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n        category: row.second.toLowerCase().split(\" \").join(\"_\"),\n        value: row.third.toLowerCase().split(\" \").join(\"_\"),\n      };\n\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n      const customerIDsForThisRow = data.map((customer) => customer.id);\n\n      if (commonCustomerIDs === null) {\n        commonCustomerIDs = new Set(customerIDsForThisRow);\n      } else {\n        commonCustomerIDs = new Set(\n          [...commonCustomerIDs].filter((id) =>\n            customerIDsForThisRow.includes(id),\n          ),\n        );\n      }\n\n      responses.push({\n        rowKey,\n        figures: commonCustomerIDs.size,\n        customerIDs: [...commonCustomerIDs],\n      });\n    }\n    return responses;\n  },\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n  \"campaignManagement/fetchFiguresForRow\",\n  async (rowId, { getState }) => {\n    const state = getState().campaignManagement;\n    const row = state.rows[rowId];\n    if (!row || !row.first || !row.second || !row.third) {\n      throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n    }\n\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n    const body = {\n      information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n      category: row.second.toLowerCase().split(\" \").join(\"_\"),\n      value: row.third.toLowerCase().split(\" \").join(\"_\"),\n    };\n\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n    const customerIDsForThisRow = data.map((customer) => customer.id);\n\n    // Retrieve customer IDs from all preceding rows\n    let commonCustomerIDs = customerIDsForThisRow;\n    for (const otherRowId of Object.keys(state.rows)) {\n      if (Number(otherRowId) < Number(rowId)) {\n        const otherRow = state.rows[otherRowId];\n        commonCustomerIDs = commonCustomerIDs.filter((id) =>\n          otherRow.customerIDs.includes(id),\n        );\n      }\n    }\n\n    return {\n      rowId,\n      figures: commonCustomerIDs.length,\n      customerIDs: commonCustomerIDs,\n    };\n  },\n);\n\nexport const createCampaign = createAsyncThunk(\n  \"campaignManagement/createCampaign\",\n  async (_, { getState, rejectWithValue }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n    const keywordsUsed = state.selectedCombinations\n      .filter(\n        (combination) => combination.first === \"Interests\" && combination.third,\n      )\n      .map((combination) => combination.third.value);\n\n    const body = {\n      name: state.eventName,\n      eventBased: true,\n      triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n      type: \"EMAIL\",\n      recurrenceType:\n        state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n      start: state.tabData.Email.timelineState.startDate,\n      end: state.tabData.Email.timelineState.endDate,\n      templateText: state.tabData.Email.content,\n      customerIDs: state.allCustomerIDs,\n      keywordsUsed,\n    };\n\n    console.log(\"Publish body\", body);\n\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      console.log(\"response\", response);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create campaign\");\n      }\n\n      return response.json();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst initialState = {\n  isModalOpen: false,\n  dropdownData: {\n    \"Personal Information\": {\n      Age: [\"25-30\", \"31-35\"],\n      Gender: [\"Male\", \"Female\"],\n      \"Marital Status\": [\"Single\", \"Married\"],\n      Location: [\"Delhi\", \"Mumbai\"],\n    },\n    Interests: {},\n    Occupation: \"\",\n    Activity: \"\",\n    \"Family Details\": \"\",\n    \"Financial Information\": \"\",\n    \"Insurance Details\": \"\",\n    Vehicle: \"\",\n    Health: \"\",\n  },\n  rows: {\n    [Date.now().toString()]: {\n      first: \"\",\n      second: \"\",\n      third: \"\",\n      figures: null,\n      customerIDs: [],\n    },\n  },\n  allCustomerIDs: [],\n  selectedCombinations: [],\n  eventName: \"\",\n  eventDate: null,\n  step: 1,\n  activeTab: \"Email\",\n  startDate: null,\n  endDate: null,\n  tabData: {\n    Email: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 500,\n    },\n    SMS: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 160,\n    },\n    Notification: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 250,\n    },\n    Whatsapp: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 2000,\n    },\n  },\n  radarData: [\n    { count: 120, subject: \"EZ-Auto\" },\n    { count: 98, subject: \"Cyberior\" },\n    { count: 86, subject: \"Homecare\" },\n    { count: 99, subject: \"E-Portal 2.0\" },\n    { count: 85, subject: \"EZ-Travel\" },\n  ],\n  downloadDataStatus: null,\n  error: null,\n  rowIdsArray: [],\n  loadingStates: {},\n  errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n  name: \"campaignManagement\",\n  initialState,\n  reducers: {\n    toggleModal: (state, action) => {\n      state.isModalOpen = action.payload;\n    },\n    updateDropdownData: (state, action) => {\n      state.dropdownData = action.payload;\n    },\n    updateRows: (state, action) => {\n      state.rows = action.payload;\n      state.rowIdsArray = [];\n      state.allCustomerIDs = [\n        ...new Set(\n          Object.values(state.rows)\n            .filter((row) => row.customerIDs && row.customerIDs.length)\n            .flatMap((row) => row.customerIDs),\n        ),\n      ];\n    },\n    updateSelectedCombinations: (state, action) => {\n      state.selectedCombinations = action.payload;\n    },\n    setCampaignName: (state, action) => {\n      state.campaignName = action.payload;\n    },\n    setEventName: (state, action) => {\n      state.eventName = action.payload;\n    },\n    setEventDate: (state, action) => {\n      state.eventDate = action.payload;\n    },\n    setStep: (state, action) => {\n      state.step = action.payload;\n    },\n    setStartDate: (state, action) => {\n      state.startDate = action.payload;\n    },\n    setEndDate: (state, action) => {\n      state.endDate = action.payload;\n      state.eventDate = action.payload;\n    },\n    setActiveTab: (state, action) => {\n      state.activeTab = action.payload;\n    },\n    updateTabData: (state, action) => {\n      state.tabData = action.payload;\n    },\n    setRadarData: (state, action) => {\n      state.radarData = action.payload;\n    },\n    resetModal: (state) => {\n      state.step = initialState.step;\n      state.campaignName = initialState.campaignName;\n      state.eventName = initialState.eventName;\n      state.activeTab = initialState.activeTab;\n      state.tabData = initialState.tabData;\n      state.eventDate = initialState.eventDate;\n    },\n  },\n  extraReducers: {\n    [fetchRowData.pending]: (state) => {\n      state.downloadDataStatus = \"loading\";\n    },\n    [fetchRowData.fulfilled]: (state, action) => {\n      state.downloadDataStatus = \"success\";\n\n      action.payload.forEach((item) => {\n        state.rows[item.rowKey].figures = item.figures;\n        state.rows[item.rowKey].customerIDs = item.customerIDs;\n      });\n\n      state.rowIdsArray = [\n        ...new Set([\n          ...state.rowIdsArray,\n          ...action.payload.map((item) => item.rowKey),\n        ]),\n      ];\n\n      const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n      state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n    },\n    [fetchRowData.rejected]: (state, action) => {\n      state.downloadDataStatus = \"failed\";\n      state.error = action.error.message;\n    },\n    [fetchFiguresForRow.pending]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"loading\";\n      state.errors[rowId] = null;\n    },\n    [fetchFiguresForRow.fulfilled]: (state, action) => {\n      const { rowId, figures, customerIDs } = action.payload;\n      state.rows[rowId].figures = figures;\n      state.rows[rowId].customerIDs = customerIDs;\n      state.loadingStates[rowId] = \"loaded\";\n\n      const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n      if (Number(rowId) === lastRowId) {\n        state.allCustomerIDs = [...customerIDs];\n      }\n    },\n    [fetchFiguresForRow.rejected]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"error\";\n      state.errors[rowId] = action.error.message;\n    },\n  },\n});\n\nexport const {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n  setCampaignName,\n  setEventName,\n  setEventDate,\n  setStep,\n  setStartDate,\n  setEndDate,\n  setActiveTab,\n  updateTabData,\n  setRadarData,\n  resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nconst initialState = {\n  data: [],\n  campaignNames: [],\n  selectedCampaigns: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaigns = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n        state.campaignNames = action.payload.map((item) => item.campaignName);\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async (source) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async (source) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`,\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  campaignStatus: \"idle\",\n  campaigns: [],\n  error: null,\n};\n\nexport const fetchCampaigns = createAsyncThunk(\n  \"campaigns/fetchCampaigns\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/campaign`,\n      );\n      console.log(\"Campaign List response data\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching campaigns:\", error);\n      return rejectWithValue(\n        error.response?.data || \"Unable to fetch campaigns\",\n      );\n    }\n  },\n);\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchCampaigns.pending]: (state) => {\n      state.campaignStatus = \"loading\";\n      state.error = null; // Reset the error state\n    },\n    [fetchCampaigns.fulfilled]: (state, action) => {\n      console.log(\"Received campaigns:\", action.payload);\n      state.campaignStatus = \"success\";\n      state.campaigns = action.payload.map((campaign) => ({\n        ...campaign,\n        status: determineCampaignStatus(campaign),\n      }));\n      console.log(\"Final campaigns for table:\", action.payload);\n    },\n    [fetchCampaigns.rejected]: (state, action) => {\n      state.campaignStatus = \"failed\";\n      state.error = action.payload;\n    },\n  },\n});\n\nfunction determineCampaignStatus(campaign) {\n  const currentDate = new Date();\n  const startDate = new Date(campaign.start);\n  const endDate = new Date(campaign.end);\n\n  if (endDate < currentDate) return \"Closed\";\n  if (startDate > currentDate) return \"Pending\";\n  if (currentDate >= startDate && currentDate <= endDate)\n    return campaign.isActive ? \"On-going\" : \"Cancelled\";\n  return \"Unknown\";\n}\n\nexport default campaignSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\nimport profilingSlice from \"./profileTypesSlice\";\nimport campaignListSlice from \"./campaignListSlice\";\nimport elasticCustomersSlice from \"./elasticCustomersSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n    profileTypesCustomerMapping: profilingSlice,\n    campaignListSlice: campaignListSlice,\n    elasticCustomers: elasticCustomersSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n\n  const route_permission = {\n    \"profile_dashboard\": \"/\",\n    \"customer_dashboard\": \"/customers\"\n  }\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (getAllRolesPermissionsMappingsByUserStatus == \"success\") {\n      userPermissions.length > 0 && route_permission[userPermissions[0].name] ? navigate(route_permission[userPermissions[0].name]) : navigate(\"/pd\")\n\n    }\n  }, [getAllRolesPermissionsMappingsByUserStatus, navigate])\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#0d5ff9\", to: \"#F3F6FF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#0d5ff9\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react';\nimport { Navbar, ActionIcon } from \"@mantine/core\";\nimport { IconSettings, Icon3dCubeSphere, IconAccessible, IconLayoutAlignBottom, IconAnalyze, IconArrowBadgeDown } from \"@tabler/icons-react\";\nimport { Stack, Space } from \"@mantine/core\";\n\nconst CustomNavbar = () => {\n    return (\n        <Navbar width={{ base: 50 }} height={500} p=\"xs\" withBorder={false}>\n            <Space h={5} />\n            <Stack>\n                <ActionIcon variant=\"subtle\" c='cyan'><IconSettings size=\"1rem\" /></ActionIcon>\n                <ActionIcon variant=\"subtle\" c='cyan'><Icon3dCubeSphere size=\"1rem\" /></ActionIcon>\n                <ActionIcon variant=\"subtle\" c='cyan'><IconAccessible size=\"1rem\" /></ActionIcon>\n                <ActionIcon variant=\"subtle\" c='cyan'><IconLayoutAlignBottom size=\"1rem\" /></ActionIcon>\n                <ActionIcon variant=\"subtle\" c='cyan'><IconAnalyze size=\"1rem\" /></ActionIcon>\n                <ActionIcon variant=\"gradient\" gradient={{ from: 'black', to: 'indigo' }}><IconArrowBadgeDown size=\"1rem\" /></ActionIcon>\n            </Stack>\n        </Navbar>\n    );\n};\n\nexport default CustomNavbar;\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport { Text, TextInput, ActionIcon, Header } from '@mantine/core';\nimport { IconAdjustmentsHorizontal, IconSearch } from '@tabler/icons-react';\nimport LightDarkButton from '../LightDarkButton';\nimport Logo from '../assets/logo.svg';\nimport { Avatar } from '@mantine/core';\n\nconst MainHeader = () => {\n    return (\n        <Header height={{ base: 50, md: 70 }} p=\"md\" withBorder={false} m={'md'}>\n            <div style={{ display: 'flex', alignItems: 'center', height: '100%', justifyContent: 'space-between' }}>\n                <Avatar radius=\"xl\" src={Logo} />\n                <TextInput\n                    placeholder=\"Search\"\n                    mb=\"md\"\n                    icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n                    radius='md'\n                    rightSection={\n                        <ActionIcon variant={'subtle'}>\n                            <IconAdjustmentsHorizontal />\n                        </ActionIcon>\n                    }\n                // value={}\n                // onChange={}\n                />\n                <div>\n                    <LightDarkButton />\n                </div>\n            </div>\n        </Header>\n    );\n};\n\nexport default MainHeader;\n","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      // topProps={() => (\n      //   <Flex>\n      //     <StyledButton\n      //       compact\n      //       onClick={() => {\n      //         console.log(\"Create Permission clicked!\");\n      //       }}\n      //     >\n      //       Create Permission\n      //     </StyledButton>\n      //   </Flex>\n      // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#0d5ff9\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#0d5ff9\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#0d5ff9\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n      const currentCombination = {\n        first: row.first,\n        second: row.second,\n        third: row.first === \"Interests\" ? option.value : option,\n      };\n\n      const isSelectedCombination = selectedCombinations.some(\n        (selected) =>\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      const isSelectedInCurrentRow = selectedCombinations.some(\n        (selected) =>\n          selected.rowId === rowId &&\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      return !isSelectedCombination || isSelectedInCurrentRow;\n    })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#0d5ff9\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#0d5ff9\"\n          fill=\"#0d5ff9\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#0d5ff9\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        border: \"2px solid #0d5ff9\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  useEffect(() => {\n    // Check if the Redux state `eventDate` is different from the local state `endDate`\n    // and if so, update the local state to match the Redux state\n    if (eventDate && (!results.endDate || results.endDate !== eventDate)) {\n      setResults((prevState) => ({\n        ...prevState,\n        endDate: eventDate,\n      }));\n\n      // Optionally, if you want to update the Redux state as well\n      dispatch(setEventDate(eventDate));\n    }\n  }, [eventDate, dispatch, results.endDate]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setRecurrenceTime(\"\");\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#0d5ff9\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#0d5ff9\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#0d5ff9\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#0d5ff9\"}\n                      bg={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#F3F6FF\",\n                          color: \"#0d5ff9\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${activeTab === tab ? \"show active\" : \"\"\n                      }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                              <div className=\"character-limit-error\">\n                                Character limit exceeded!\n                              </div>\n                            )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#F3F6FF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ActionIcon,\n  Box,\n  Flex,\n  MultiSelect,\n  Text,\n  Title,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { fetchData, selectCampaign } from \"../../redux/campaignSlice\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.campaign.data);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  const [selectedCampaigns, setSelectedCampaigns] = useState([]);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  const handleCampaignSelect = (selected) => {\n    setSelectedCampaigns(selected);\n    dispatch(selectCampaign(selected));\n  };\n\n  const filteredData =\n    selectedCampaigns.length > 0\n      ? data.filter((campaign) =>\n          selectedCampaigns.includes(campaign.campaignName),\n        )\n      : data;\n\n  // Map API data to chart data\n  const chartData = filteredData.map((item) => ({\n    ...item,\n    delivered: item.totalSent,\n    converted: item.success,\n    interested: item.success,\n    failure: item.failed,\n  }));\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#0d5ff9\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <MultiSelect\n              maw={320}\n              mx=\"auto\"\n              data={campaignNames}\n              placeholder={\"All\"}\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              searchable\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={handleCampaignSelect}\n              value={selectedCampaigns}\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={chartData}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"campaignName\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#F3F6FF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#0d5ff9\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#F3F6FF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#0d5ff9\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#0d5ff9\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#0d5ff9\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"}>\n              <Stack>\n                <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                  <Text fw={\"bold\"}>Communications</Text>\n                  <Center>\n                    <ActionIcon c={\"#0d5ff9\"}>\n                      <IconTableExport />\n                    </ActionIcon>\n                    <Text fw={\"bold\"}>Export</Text>\n                  </Center>\n                </Flex>\n                <Box>\n                  <VerticalBarChart />\n                </Box>\n              </Stack>\n            </Card>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import { ActionIcon, Flex } from \"@mantine/core\";\nimport { IconEdit, IconTrash } from \"@tabler/icons-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCampaigns } from \"../../../../redux/campaignListSlice\";\nimport StyledTable from \"../../../../StyledComponents/StyledTable\";\n\nconst AllCampaigns = () => {\n  const dispatch = useDispatch();\n  const campaignState = useSelector((state) => state.campaignListSlice);\n\n  useEffect(() => {\n    dispatch(fetchCampaigns());\n  }, [dispatch]);\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"name\",\n        header: \"Campaign Name\",\n      },\n      {\n        accessorKey: \"type\",\n        header: \"Communication Type\",\n      },\n      {\n        accessorKey: \"customers\",\n        header: \"Total No. of Customers\",\n        accessorFn: (row) => row.customers.length,\n      },\n      {\n        accessorKey: \"created_at\",\n        header: \"Create Campaign Date\",\n        accessorFn: (row) => new Date(row.created_at).toLocaleDateString(),\n      },\n      {\n        accessorKey: \"end\",\n        header: \"Event Date\",\n        accessorFn: (row) => new Date(row.end).toLocaleDateString(),\n      },\n      {\n        accessorKey: \"status\",\n        header: \"Campaign Status\",\n      },\n      {\n        accessorKey: \"actions\",\n        header: \"Action\",\n        Cell: ({ row }) => (\n          <Flex>\n            <ActionIcon color=\"lightblue\">\n              <IconEdit />\n            </ActionIcon>\n            <ActionIcon color=\"red\">\n              <IconTrash />\n            </ActionIcon>\n          </Flex>\n        ),\n      },\n    ],\n    [],\n  );\n\n  if (campaignState.campaignStatus === \"loading\") {\n    return <p>Loading...</p>;\n  }\n  if (campaignState.campaignStatus === \"failed\") {\n    return <p>Error loading campaigns. Details: {campaignState.error}</p>;\n  }\n  const reversedData = [...campaignState.campaigns].reverse();\n  const handleRowClick = () => {\n    console.log(\"Row clicked\");\n  };\n\n  return (\n    <StyledTable\n      columns={columns}\n      data={reversedData}\n      onRowClick={handleRowClick}\n    />\n  );\n};\n\nexport default AllCampaigns;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\nimport AllCampaigns from \"../AllCampaigns/AllCampaigns\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(\"keywords fetched for analysis\", keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n              ...updatedDropdownData[keyword.category],\n              { label: keyword.value, value: keyword.id },\n            ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Data Analysis\n            </Text>\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#0d5ff9\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#0d5ff9\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#0d5ff9\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n      <AllCampaigns />\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#0d5ff9\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#F3F6FF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#F3F6FF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#F3F6FF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#0d5ff9\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#0d5ff9\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#F3F6FF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #0d5ff9\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\nimport { IconUserDollar } from \"@tabler/icons-react\";\nimport { setMyRole } from \"../redux/authSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const dispatch = useDispatch()\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      dispatch(setMyRole(user.role.name))\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#00239c,#0d5ff9)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#0d5ff9)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            //            boxShadow: `\n            // rgba(13, 95, 249, 0.17) 0px -23px 25px 0px inset,\n            // rgba(13, 95, 249, 0.15) 0px -36px 30px 0px inset,\n            // rgba(13, 95, 249, 0.1) 0px -79px 40px 0px inset,\n            // rgba(13, 95, 249, 0.06) 0px 2px 1px,\n            // rgba(13, 95, 249, 0.09) 0px 4px 2px,\n            // rgba(13, 95, 249, 0.09) 0px 8px 4px,\n            // rgba(13, 95, 249, 0.09) 0px 16px 8px,\n            // rgba(13, 95, 249, 0.09) 0px 32px 16px\n            //    `,\n\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )}\n\n\n              {/* {true && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/profile\"\n                  label=\"Profiles\"\n                  icon={<IconUserDollar size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/profile\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )} */}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#F3F6FF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n        id: data.id,\n        roleId: data.roleId,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email.split(\"@\").length > 0 ? row.original.email.split(\"@\")[0] : \"\"}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          active\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton compact onClick={handleAddUserModal}>\n        //       + Create User\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            My Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#0d5ff9\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#0d5ff9\",\n                      \"&:hover\": {\n                        backgroundColor: \"#F3F6FF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#0d5ff9\",\n                  color: \"#0d5ff9\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F3F6FF\",\n                    color: \"#0d5ff9\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Change Password\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = ({ source }) => {\n  console.log(source);\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\nimport { useState } from \"react\";\n\nconst CustomerProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = ({ source }) => {\n  const dispatch = useDispatch();\n  console.log(\"source for profiles\", source);\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n  console.log(\"Chart data for profiles\", chartData);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  // const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  // const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    // if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      // onMouseEnter={() => dispatch(setHoveredItem(text))}\n      // onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        // transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        // style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        // transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        // fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        // transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  // const dispatch = useDispatch();\n  // const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    // dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    // dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#F3F6FF\"}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#0d5ff9\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#0d5ff9\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            // onMouseEnter={() => handleMouseEnter(entry.name)}\n            // onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                // sx={{\n                //   transition: \"transform 0.3s ease\",\n                //   transform:\n                //     hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                //   backgroundImage:\n                //     hoveredItem === entry.name\n                //       ? \"radial-gradient(#000000 20% ,#0d5ff9)\"\n                //       : \"none\",\n                // }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Flex\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        alignItems: \"stretch\",\n      }}\n    >\n      {/* First Card for Selectors and Pie Chart */}\n      <Flex\n        style={{\n          marginRight: \"20px\",\n          flex: 3,\n        }}\n      >\n        <Card shadow={\"lg\"} radius={\"md\"} style={{ width: \"100%\" }}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Profile\n                </Text>\n              </Center>\n              <Center>\n                <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                  <IconArrowRight />\n                </ActionIcon>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={12}>\n              <Stack>\n                <StyledSelect\n                  disabled={status === \"loading\"}\n                  label={\"Profile\"}\n                  placeholder={\"Select Profile(s)\"}\n                  data={profileOptions}\n                  onChange={(value) => setSelectedProfile(value)}\n                />\n                <StyledSelect\n                  disabled={status === \"loading\"}\n                  label={\"Demographics\"}\n                  placeholder={\"Select Main Demographics\"}\n                  data={demographicOptions}\n                  onChange={(value) => setSelectedDemographic(value)}\n                />\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={12}>\n              <Center>\n                {status === \"loading\" ? (\n                  <Loader c=\"5c0ff2\" size=\"lg\" />\n                ) : (\n                  <ProfilePieChart />\n                )}\n              </Center>\n            </Grid.Col>\n          </Grid>\n        </Card>\n      </Flex>\n\n      {/* Second Card for Profile Data */}\n      <Flex\n        style={{\n          flex: 1,\n        }}\n      >\n        <Card shadow={\"lg\"} radius={\"md\"} style={{ width: \"100%\" }}>\n          <Center style={{ height: \"100%\" }}>\n            <ProfileDataCard />\n          </Center>\n        </Card>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useMemo, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCustomerDetails } from \"../redux/customerSlice\";\nimport { useSelector } from \"react-redux\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\n\nexport default function ProfileTableDisplay({ customerList }) {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const customerDetailsStatus = useSelector(state => state.customer.customerDetailsStatus)\n\n\n\n  const handleRowClick = (customer) => {\n    dispatch(getCustomerDetails(customer.customerId));\n  };\n\n  useEffect(() => {\n    if (customerDetailsStatus === \"success\") {\n      navigate(\"/dashboard\");\n    }\n\n    console.log(customerDetailsStatus);\n  }, [customerDetailsStatus, navigate]);\n\n  const columns = [\n    {\n      accessorKey: \"customerName\",\n      header: \"Name\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"email\",\n      header: \"Email\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"source\",\n      header: \"Source\",\n    },\n    {\n      accessorKey: \"level\",\n      header: \"Level\",\n    }\n  ];\n\n\n\n\n  return (\n    <Box style={{ marginTop: \"30px\" }}>\n      <StyledTable columns={columns} data={customerList} onRowClick={handleRowClick} />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProfileTypes, fetchProfileMappings } from '../../redux/profileTypesSlice';\nimport { Grid, Card, Image, Text, Switch } from '@mantine/core';\nimport ProfileTableDisplay from '../../components/ProfileTableDisplay';\nimport { Button } from '@mantine/core';\nimport { IconArrowBack } from '@tabler/icons-react';\nimport { clearCurrentCustomer } from '../../redux/customerSlice';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const profileTypes = useSelector((state) => state.profileTypesCustomerMapping.profileTypes);\n  const status = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const error = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const profileMappings = useSelector((state) => state.profileTypesCustomerMapping.profileMappings);\n  const profileMappingsStatus = useSelector((state) => state.profileTypesCustomerMapping.profileMappingsStatus);\n  const [showTable, setShowTable] = useState(false);\n  const [checkedStates, setCheckedStates] = useState({})\n\n  const imageDict = {\n    'technology': 'https://imgur.com/a/cweY8fX',\n    'sports': 'https://imgur.com/a/9NKkaqR',\n    'music': 'https://imgur.com/a/zlQUb16',\n    'gadget': 'https://imgur.com/kQHQ4IS',\n    'food': 'https://imgur.com/a/hxhCUq9',\n    'fitness': 'https://imgur.com/eFsmreM',\n    'travel': 'https://imgur.com/iUw4buI',\n    'automobile': 'https://imgur.com/B4aIhl5'\n  }\n\n  useEffect(() => {\n    dispatch(clearCurrentCustomer());\n    dispatch(fetchProfileTypes());\n  }, [dispatch]);\n\n  const handleProfileTypeClick = (profileTypeId) => {\n    dispatch(fetchProfileMappings(profileTypeId));\n    setShowTable(true);\n  };\n\n  const handleSwitchChange = (profileTypeId, isChecked) => {\n    setCheckedStates((prevStates) => ({\n      ...prevStates,\n      [profileTypeId]: isChecked,\n    }));\n  };\n\n  const handleTableRender = () => {\n    if (profileMappingsStatus === 'loading') {\n      return <>Loading ...</>;\n    } else if (profileMappingsStatus === 'failed') {\n      return <>Something went wrong</>;\n    } else if (profileMappingsStatus === 'succeeded') {\n      return <ProfileTableDisplay customerList={profileMappings} />;\n    }\n  };\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Profile Types</h1>\n      <Grid>\n        {!showTable ? (\n          profileTypes.map((profileType) => (\n            <Grid.Col span={3} key={profileType.id}>\n              <Card shadow=\"sm\" padding=\"lg\" component=\"a\" target=\"_blank\">\n                <Card.Section>\n                  {console.log(imageDict[profileType.name])}\n                  <Image\n                    src={imageDict[profileType.name]}\n                    style={{ width: '200px', height: '200px' }}\n                  />\n                </Card.Section>\n\n                <Card.Section style={{ padding: '10px' }}>\n                  <Text\n                    fw={500}\n                    size=\"lg\"\n                    style={{ display: 'inline-block', marginRight: '10px', cursor: 'pointer' }}\n                    onClick={() => handleProfileTypeClick(profileType.id)}\n                  >\n                    {profileType.name}\n                  </Text>\n\n                  <Switch\n                    checked={checkedStates[profileType.id] || false}\n                    onChange={(event) => handleSwitchChange(profileType.id, event.currentTarget.checked)}\n                    style={{ display: 'inline-block', float: 'right' }}\n                  />\n                </Card.Section>\n              </Card>\n            </Grid.Col>\n          ))\n        ) : (\n          <>\n            <Button onClick={() => setShowTable(false)} variant=\"text\">\n              <IconArrowBack /> Back\n            </Button>\n            <br />\n            {handleTableRender()}\n          </>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\nimport { setAuth } from \"./redux/authSlice\";\nimport Profile from './pages/Profile/Profile'\nimport AllCampaigns from \"./pages/Campaign/components/AllCampaigns/AllCampaigns\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  useEffect(() => {\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\n    if (isLoggedIn) {\n      dispatch(setAuth());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {hasPermission(userPermissions, \"profile_dashboard\") ? (\n                <PrivateRoute path=\"/\" element={<Root />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute path=\"/users\" element={<PermissionDenied />} />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n              <PrivateRoute path=\"/pd\" element={<PermissionDenied />} />\n              <PrivateRoute path=\"/profile\" element={<Profile />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}