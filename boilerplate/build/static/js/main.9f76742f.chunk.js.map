{"version":3,"sources":["components/Profiling/assets/Avid Traveler.png","i18n.js","redux/authSlice.js","components/LightDarkButton.jsx","utils/sleep.js","redux/customerSlice.js","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/assets/index.js","components/Profiling/StatCard.jsx","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","pages/Dashboard/Dashboard.jsx","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Login.jsx","App.js","index.js"],"names":["loadPath","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","loginUser","createAsyncThunk","userData","a","axios","post","data","registerUser","getProfile","id","get","getUsers","authSlice","createSlice","name","initialState","status","isLoggedIn","user","profile","userStatus","users","reducers","setAuth","state","action","payload","logout","localStorage","clear","defaults","headers","common","setUser","extraReducers","pending","fulfilled","access_token","email","_id","sub","setItem","stringify","rejected","response","actions","LightDarkButton","useMantineColorScheme","colorScheme","toggleColorScheme","dark","ActionIcon","variant","color","onClick","title","IconSun","size","IconMoonStars","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","getCustomersProfileCompleteness","getCustomerDetails","getCustomerServicesHistory","console","log","customerSlice","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","setCurrentCustomer","curr_state_obj","res_obj","e","customer_details","Object","values","assign","customer","updatedCustomers","profileCompletion","profile_completion","TableDisplay","customerList","dispatch","useDispatch","useSelector","navigate","useNavigate","rows","percentage","Flex","profiling","personal_details","full_name","substr","source","mobile","Center","RingProgress","thickness","sections","value","label","Text","weight","align","Loader","Button","gradient","from","to","buttonClick","Card","shadow","Table","highlightOnHover","fw","fz","Customers","useEffect","LoadingOverlay","visible","overlayBlur","loaderProps","Header","height","base","md","p","withBorder","m","style","display","alignItems","justifyContent","deg","sx","fontFamily","ta","mt","TextInput","placeholder","mb","icon","IconSearch","stroke","radius","rightSection","IconAdjustmentsHorizontal","Navbar","width","Space","h","Stack","IconSettings","Icon3dCubeSphere","IconAccessible","IconLayoutAlignBottom","IconAnalyze","IconArrowBadgeDown","flexGrow","padding","marginBottom","marginTop","Title","pl","Container","w","ml","IconChevronLeft","IconChevronRight","Register","my","theme","fontWeight","component","Link","Paper","required","PasswordInput","Group","position","Checkbox","lineHeight","fullWidth","useStyles","createStyles","link","fn","focusStyles","textDecoration","fontSize","fontSizes","sm","colors","gray","borderRadius","backgroundColor","white","getStylesRef","black","linkIcon","ref","marginRight","spacing","linkActive","primaryColor","IconUser","IconCircleKey","IconTimeline","IconPalette","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","opened","setOpened","classes","cx","useState","active","setActive","useMantineTheme","links","item","NavLink","className","event","navbar","hiddenBreakpoint","hidden","lg","bg","Section","grow","IconArrowNarrowLeft","imageURL","require","baseUrl","location","origin","default","ICON_SIZE","rem","card","overflow","xl","paddingTop","top","left","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","Progress","Badge","Profiling","stats","entries","assets","list","customerStats","Math","floor","random","maxLastUpdated","maxCompleted","min","getCustomerStats","Grid","Col","span","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","pt","gender","dob","age","marital_status","Divider","alternate_email","phone_number","alternate_phone_number","pincode","country","address","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","KeywordsEntry","updateKeywordValuesParent","setData","keyword","setValue","searchValue","onSearchChange","unknowns","setUnknowns","transformedData","useMemo","_","category","allKeywords","unknownValues","filter","obj","handleSearchChange","debounce","MultiSelect","onChange","searchable","clearable","creatable","getCreateLabel","onCreate","current","unknown","index","Interests","interests","setInterests","groupedByCategory","groupBy","interest","Fragment","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","tempEditData","setTempEditData","headerElements","headerItem","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","Box","cursor","IconTrash","IconPlus","ScrollArea","maxHeight","type","industry","incomeBracket","Occupation","relationship","phone","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Array","isArray","Dashboard","submitKeywords","routesClicked","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","auth","useLocation","prev","pathname","at","updateKeywordPayload","then","AppShell","styles","main","background","navbarOffsetBreakpoint","asideOffsetBreakpoint","fixed","header","MediaQuery","largerThan","Burger","o","mr","mih","element","path","Notification","loading","withCloseButton","store","configureStore","reducer","PrivateRoute","props","Login","setEmail","password","setPassword","BackgroundImage","loginImage","pr","IconArrowRight","Image","eaLogo","target","Anchor","preventDefault","App","setColorScheme","login","getItem","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","createTheme","baseURL","process","ReactDOM","render","StrictMode","ThemeProvider","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.9f76742f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt (token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/auth/users/\");\n  return data;\n});\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const {email,sub} = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n      \n      \n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const {email,sub} = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n      \n      \n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload.response.users;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { ActionIcon, useMantineColorScheme } from '@mantine/core';\nimport { IconSun, IconMoonStars } from '@tabler/icons-react';\nimport React from 'react';\n\nexport default function LightDarkButton() {\n    const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n    const dark = colorScheme === 'dark';\n\n    return (\n        <ActionIcon\n            variant=\"outline\"\n            color={dark ? 'yellow' : 'blue'}\n            onClick={() => toggleColorScheme()}\n            title=\"Toggle color scheme\"\n        >\n            {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n        </ActionIcon>\n    );\n}","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory:[],\n  fetchedPofileCompleteness:false,\n  customerServiceHistoryStatus:\"idle\",\n  customerDetailsStatus:\"idle\"\n};\n\nexport const getCustomers = createAsyncThunk(\"customer/getCustomers\", async () => {\n  // await sleep(3000)\n  const { data } = await axios.get(\"/customers\");\n  return data;\n});\n\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\"customer/getCustomersProfileCompleteness\", async () => {\n  await sleep(200)\n  const { data } = await axios.get(\"/profile\");\n  return data;\n});\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  }\n);\n\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  }\n);\n\n\n\nexport const customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.customers.map(e => curr_state_obj[e.id] = e)\n      action.payload.customer_details.map(e => res_obj[e.id] = e)\n      state.customers = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getCustomers.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getCustomerDetails.pending]: (state, action) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload.response.customer;\n    },\n    [getCustomerDetails.rejected]: (state, action) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n   [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion[customer.id] || 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n\n      return {\n        ...state,\n        customers: updatedCustomers,\n        fetchedPofileCompleteness: true,\n      };\n    },\n\n    [getCustomersProfileCompleteness.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state, action) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state, action) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer } = customerSlice.actions;\n","import { Button, Card, Center, Container, Flex, RingProgress, Table, Text } from '@mantine/core';\nimport { setCurrentCustomer } from '../redux/customerSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Loader } from '@mantine/core';\n\n\n\n\nexport default function TableDisplay({ customerList ,fetchedPofileCompleteness}) {\n  const dispatch = useDispatch();\n  const { status, customerDetails } = useSelector(state => state.customer);\n\n  \n\n  // const { customer_details } = customerList\n  // const { customerContext, setCustomerContext } = useContext(CustomerContext)\n  const navigate = useNavigate()\n\n  const profileCompletion = (percentage) => {\n    return (\n      <div>\n        <Center>\n          <RingProgress\n            size={50}\n            thickness={5}\n            sections={[{ value: percentage, color: (percentage > 25 ? '#1D9B25' : percentage > 50 ? '#CFA400' : '#D85972') }]}\n            label={\n              <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                {percentage}%\n              </Text>\n            }\n          />\n        </Center>\n      </div>\n    )\n  }\n\n  const buttonClick = (customer) => {\n    // setCustomerContext(customer)\n    navigate('/dashboard')\n    dispatch(setCurrentCustomer(customer))\n\n  }\n\n\n\n\n\n  const rows = customerList.map((customer) => {\n    \n\n\n\n    return (\n      <tr key={customer.id}>\n        <td><Flex>{customer.profiling?.personal_details?.full_name}</Flex></td>\n        <td><Flex>{'CLID' + customer.id.substr(0, 6) + '....'}</Flex></td>\n        <td><Flex>{customer.email}</Flex></td>\n        <td><Flex>{customer.source}</Flex></td>\n        <td><Flex>{customer.mobile}</Flex></td>\n        <td><Flex>{!fetchedPofileCompleteness? <Loader/>: profileCompletion(customer.profile_completion)}</Flex></td>\n        <td>\n          <Button\n            // color={'#DDE5FF'}\n            // variant={'light'}\n            variant={'gradient'}\n            gradient={{ from: 'indigo', to: 'cyan' }}\n            onClick={() => buttonClick(customer)}>\n            View\n          </Button>\n        </td>\n      </tr>\n    )\n  }\n  );\n\n  return (\n    <Card shadow={'md'}>\n      <Table highlightOnHover>\n        <thead>\n          <tr>\n            <th><Flex><Text fw={900} fz={17}>Name</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Customer Id</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Email</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Source</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Mobile</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Profile Completion</Text></Flex></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </Card>\n  );\n}","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport { useEffect, useState } from \"react\"\nimport LightDarkButton from \"../../components/LightDarkButton\"\nimport { getCustomers ,getCustomersProfileCompleteness} from \"../../redux/customerSlice\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\"\n\n\nconst Customers = () => { \n\n\n    const dispatch = useDispatch();\n\n    const { status, customers,fetchedPofileCompleteness } = useSelector(state => state.customer);\n\n    // if(Array.isArray(customers) && customers.length > 0) setCustomerList(customers)\n    \n    useEffect(() => {\n        dispatch(getCustomers());\n        dispatch(getCustomersProfileCompleteness())\n      }, []);\n\n\n\n\n    if (status === 'loading') {\n        return (\n            <LoadingOverlay visible overlayBlur={2}\n                loaderProps={{\n                    size: 'xl',\n                    variant: 'dots'\n                }}\n            />\n        )\n    }\n    else { \n        return (\n            <>\n                <Header height={{ base: 50, md: 70 }} p=\"md\" withBorder={false} m={'md'}>\n                    <div style={{ display: 'flex', alignItems: 'center', height: '100%', justifyContent: 'space-between' }}>\n                        <Text\n                            variant=\"gradient\"\n                            gradient={{ from: 'indigo', to: 'cyan', deg: 45 }}\n                            sx={{ fontFamily: 'Greycliff CF, sans-serif' }}\n                            ta=\"center\"\n                            fz=\"xl\"\n                            fw={700}\n                            mt={-20}\n                        >EAI CRM</Text>\n                        <TextInput\n                            placeholder=\"Search\"\n                            mb=\"md\"\n                            icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n                            radius='md'\n                            rightSection={\n                                <ActionIcon variant={'subtle'}>\n                                    <IconAdjustmentsHorizontal />\n                                </ActionIcon>\n                            }\n                        // value={}\n                        // onChange={}\n                        />\n                        <div>\n                            <LightDarkButton />\n                        </div>\n                    </div>\n                </Header>\n                <div style={{ display: 'flex', }}>\n                    <span>\n                        <Navbar width={{ base: 50 }} height={500} p=\"xs\" withBorder={false}>\n                            <Space h={5} />\n                            <Stack>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconSettings size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><Icon3dCubeSphere size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAccessible size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconLayoutAlignBottom size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAnalyze size=\"1rem\" /></ActionIcon>\n                                <ActionIcon variant=\"gradient\" gradient={{ from: 'black', to: 'indigo' }}><IconArrowBadgeDown size=\"1rem\" /></ActionIcon>\n                            </Stack>\n                        </Navbar>\n                    </span>\n                    <span style={{ flexGrow: '1', width: '100px' }}>\n                        <div style={{ padding: '10px' }}>\n                            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px', marginTop: '5px' }}>\n                                <span>\n                                    <Title pl={5}>Customers</Title>\n                                </span>\n                                <span>\n                                    <Container>\n                                        <Center>\n                                            <Flex mt={5}>\n                                                <TextInput w={30} />\n                                                <Text mt={5} ml={5} fw={20}>Items per page</Text>\n                                                <Container mt={5}>\n                                                    <Flex>\n                                                        <ActionIcon>\n                                                            <IconChevronLeft />\n                                                        </ActionIcon>\n                                                        <ActionIcon>\n                                                            <IconChevronRight />\n                                                        </ActionIcon>\n                                                    </Flex>\n                                                </Container>\n                                            </Flex>\n                                        </Center>\n                                    </Container>\n                                </span>\n                            </div>\n                            <TableDisplay customerList={customers} fetchedPofileCompleteness={fetchedPofileCompleteness} />\n                        </div>\n                    </span>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Customers;","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import { IconArrowNarrowLeft, IconBriefcase, IconCar, IconCarCrash, IconCircleKey, IconComet, IconFriends, IconHealthRecognition, IconPalette, IconReportMoney, IconSocial, IconTimeline, IconUser } from '@tabler/icons-react';\nimport { createStyles, Navbar, Group, Code, getStylesRef, rem, NavLink, Card, useMantineTheme, Stack } from '@mantine/core';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = createStyles((theme) => ({\n    link: {\n        ...theme.fn.focusStyles(),\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n        fontSize: theme.fontSizes.sm,\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n        // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n        borderRadius: theme.radius.sm,\n        fontWeight: 500,\n\n        '&:hover': {\n            backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n            color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n\n            [`& .${getStylesRef('icon')}`]: {\n                color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n            },\n        },\n    },\n\n    linkIcon: {\n        ref: getStylesRef('icon'),\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n        marginRight: theme.spacing.sm,\n    },\n\n    linkActive: {\n        '&, &:hover': {\n            // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n            backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n            // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n            color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n            [`& .${getStylesRef('icon')}`]: {\n                color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n            },\n        },\n    },\n}));\n\n\nconst data = [\n    { link: 'personalInformation', label: 'Personal Information', icon: <IconUser /> },\n    { link: 'keywords', label: 'Keywords', icon: <IconCircleKey /> },\n    { link: 'profiling', label: 'Profiling', icon: <IconTimeline /> },\n    { link: 'interests', label: 'Interests', icon: <IconPalette /> },\n    { link: 'occupation', label: 'Occupation', icon: <IconBriefcase /> },\n    { link: 'activity', label: 'Activity', icon: <IconComet /> },\n    { link: 'familydetails', label: 'Family Details', icon: <IconFriends /> },\n    { link: 'Financial Information', label: 'Financial Information', icon: <IconReportMoney /> },\n    { link: 'Insurance Details', label: 'Insurance Details  ', icon: <IconCarCrash /> },\n    { link: 'Vehicle', label: 'Vehicle', icon: <IconCar /> },\n    { link: 'Health', label: 'Health', icon: <IconHealthRecognition /> },\n    { link: 'Social Media', label: 'Social Media', icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = ({ opened, setOpened }) => {\n    const { classes, cx } = useStyles();\n    const [active, setActive] = useState('Personal Information');\n    const theme = useMantineTheme();\n\n    const links = data.map((item) => (\n        <NavLink\n            className={cx(classes.link, { [classes.linkActive]: item.label === active })}\n            icon={item.icon}\n            component={Link}\n            variant=\"subtle\"\n            to={item.link}\n            label={item.label}\n            key={item.label}\n            onClick={(event) => {\n                setActive(item.label)\n            }}\n        />\n    ));\n\n    return (\n        <Navbar\n            height={700}\n            // width={{ sm: 300 }}\n            p=\"md\"\n            className={classes.navbar}\n            hiddenBreakpoint=\"sm\"\n            hidden={!opened}\n            width={{ sm: 200, lg: 300 }}\n            withBorder={false}\n        >\n            <Stack>\n                <Card\n                    bg={theme.colorScheme == 'light' ? '#DDE5FF' : ''}\n                    mt={20}\n                >\n                    <Navbar.Section grow>\n                        {links}\n                    </Navbar.Section>\n                </Card>\n\n                <Navbar.Section>\n                    <NavLink icon={<IconArrowNarrowLeft />} component={Link} variant=\"subtle\" to='/customers' label={'Go Back'} rightSection />\n                </Navbar.Section>\n            </Stack>\n        </Navbar >\n    );\n}\n\nexport default DashboardNavbar","\nconst imageURL = require('./Avid Traveler.png');\nconst baseUrl = window.location.origin;\nconst finalImageUrl = baseUrl + imageURL;\n\nconsole.log(baseUrl,imageURL.default);\n\n\n\n// export default {\n//     [`Avid Traveler`]: new URL('./Avid Traveler.png', import.meta.url).href,\n//     [`Fitness Freak`]: new URL('./Fitness Freak.png', import.meta.url).href,\n//     [`Foodie`]: new URL('./Foodie.png', import.meta.url).href,\n//     [`Sports Fan`]: new URL('./Sports Fan.png', import.meta.url).href,\n//     [`Techie`]: new URL('./Techie.png', import.meta.url).href,\n// }\n\nexport default {\n    [`Avid Traveler`]: \"\",\n    [`Fitness Freak`]: \"\",\n    [`Foodie`]:\"\",\n    [`Sports Fan`]: \"\",\n    [`Techie`]:\"\",\n}\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    {percentage}%\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group>\n        </Paper>\n    );\n}","import { Grid } from '@mantine/core'\nimport assets from './assets'\nimport { StatsCard } from './StatCard'\n\nconst Profiling = () => {\n\n    const assetList = Object.entries(assets)\n    const stats = assetList.map((list) => {\n        const title = list[0]\n        const url = list[1]\n        function getCustomerStats() {\n            const frequency = Math.floor(Math.random() * 16); // A random frequency per month between 0 and 15\n            const maxLastUpdated = Math.floor((1 - frequency / 15) * 30);\n            const lastUpdated = Math.floor(Math.random() * (maxLastUpdated + 1)); // A random value between 0 and maxLastUpdated, representing the number of days ago\n            const maxCompleted = Math.min(Math.floor((30 - lastUpdated) * (frequency / 30) * 100), 100);\n            const percentageCompleted = Math.floor(Math.random() * (maxCompleted + 1)); // A random percentage between 0 and maxCompleted\n\n            return [frequency, percentageCompleted, lastUpdated];\n        }\n\n        const customerStats = getCustomerStats();\n        console.log(customerStats);\n        return (<>\n            <Grid.Col span={4}>\n                <StatsCard title={title} url={url} percentage={customerStats[1]} frequency={customerStats[0]} lastUpdated={customerStats[2]} />\n            </Grid.Col>\n        </>)\n    })\n    return (\n        <>\n            <Grid gutter=\"xl\">\n                {stats}\n            </Grid>\n        </>\n    )\n}\n\nexport default Profiling","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import { Avatar, Card, Center, Container, Divider, Grid, Group, RingProgress, Space, Text } from '@mantine/core'\nimport React, { useEffect, useState } from 'react'\nimport InfoTag from './InfoTag'\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n    const [profile, setProfile] = useState({ ...selectedCustomer.profiling.personal_details })\n    const { profile_completion } = selectedCustomer\n    const { source } = selectedCustomer\n\n    const profileCompletion = (percentage) => {\n        return (\n            <div>\n                <Center>\n                    <RingProgress\n                        mt={50}\n                        size={80}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </div>\n        )\n    }\n    return (\n        <>\n            <Container mt={-80}>\n                <Group grow position='apart'>\n                    <Text mt={70} fw={500}>Basic Details</Text>\n                    <Space h={40} />\n                    <div>\n                        <Space h={40} />\n                        {profileCompletion(profile_completion)}\n                    </div>\n                </Group>\n                <div style={{ marginTop: '-30px' }}>\n                    <InfoTag title={'Picture'} subject={<Avatar radius={'xl'} size='xl' />} />\n                    <Grid gutter=\"xl\" pt={'sm'}>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'First Name'} subject={profile.full_name.split(' ')[0]} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Last Name'} subject={profile.full_name.split(' ')[1]} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Gender'} subject={profile.gender} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Date of birth'} subject={profile.dob} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Age'} subject={profile.age} />\n                        </Grid.Col>\n                    </Grid>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Marital Status'} subject={profile.marital_status} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Source'} subject={source} />\n                        </Grid.Col>\n                    </Grid>\n                    <Divider my=\"md\" size={'xs'} color={'#4E70EA'} />\n                    <Text fw={500}>Contact Details</Text>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Email Address'} subject={profile.email} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Alternative Email'} subject={profile.alternate_email} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Mobile Number'} subject={profile.phone_number} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Alternative Mobile Number'} subject={profile.alternate_phone_number} />\n                        </Grid.Col>\n                    </Grid>\n                    <Divider my=\"md\" size={'xs'} color={'#4E70EA'} />\n                    <Text fw={500}>Address</Text>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Location(city)'} subject={profile.location} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'State'} subject={profile.state} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'PINCODE'} subject={profile.pincode} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Country'} subject={profile.country} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Address Line'} subject={profile.address} />\n                        </Grid.Col>\n                    </Grid>\n                </div>\n            </Container>\n        </>\n    )\n}\n\nexport default PersonalInformation","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button,Badge  } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords ,getKeywords} from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\nconst KeywordsEntry = ({updateKeywordValuesParent }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  const { customerKeywords,keywords,keywordsStatus,customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns,setUnknowns] = useState([])\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id,value,category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id,value,category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n  \n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n  \n  useEffect(() => {\n    if(keywordsStatus == 'success' && customerKeywordsStatus == 'success' ){\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n    \n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [ data,values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n    {keywordsStatus == 'success' && customerKeywordsStatus == 'success' ?\n    <>\n    <MultiSelect\n        data={data}\n        value={values}\n        onChange={(e) => setValue(e)}\n        label=\"Keywords\"\n        searchable\n        searchValue={searchValue}\n        onSearchChange={(event) => handleSearchChange(event)}\n        clearable\n        \n        placeholder=\"Add keywords\"\n        creatable\n        getCreateLabel={(query) => `+ Create ${query}`}\n        onCreate={(query) => {\n          const item = { value: query, label: query };\n          setData((current) => [...current, item]);\n          return item;\n        }}\n      />\n      \n      <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n              key={unknown}\n              variant=\"gradient\"\n              gradient={{ from: 'indigo', to: 'cyan' }}\n            >\n              {unknown}\n            </Badge>\n            ))}\n          </div>\n    </>\n    :<>\n    <p>Please wait.......</p>\n    </>\n    }\n      \n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\nconst Interests = () => {\n    const dispatch = useDispatch()\n    const { status, customerDetails } = useSelector((state) => state.customer);\n    const { customerKeywords,customerKeywordsStatus } = useSelector((state) => state.keyword);\n    const [interests,setInterests] = useState([])\n\n\n    \n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      return { category, values: _.map(values, 'value') };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n  \n  useEffect(() => {\n    if( customerKeywordsStatus == 'success' ){\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n    { customerKeywordsStatus == 'success' ?\n    <>\n      {interests.map((interest) => (\n  <React.Fragment key={interest.category}>\n    <Text fw={700}>{interest.category}</Text>\n    {interest.values.map((value) => (\n      <Badge\n        key={value}\n        variant=\"gradient\"\n        gradient={{ from: 'indigo', to: 'cyan' }}\n      >\n        {value}\n      </Badge>\n    ))}\n  </React.Fragment>\n))}\n    </> :\n    <>Loading interests...</>\n    }\n     \n        \n        </>\n  \n    )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  AppShell,\n  Navbar,\n  Header,\n  Text,\n  MediaQuery,\n  Burger,\n  useMantineTheme,\n  Card,\n  NavLink,\n  Container,\n  LoadingOverlay,\n  TextInput,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  IconAdjustmentsHorizontal,\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconComet,\n  IconFriends,\n  IconHammer,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSearch,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const {updateKeywordsStatus} = useSelector((state) => state.keyword)\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification,setNotification] = useState(false)\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  useEffect(() => {\n    if (routesClicked.at(-2) && routesClicked.at(-2) === \"/dashboard/keywords\") {\n      \n\n      const updateKeywordPayload = {\n        \"customerId\":customerDetails.id,\n        \"keywordsPayload\":keywordValues\n    }\n\n    setNotification(true)\n    sleep(5000).then(data => setNotification(false))\n\n    dispatch(updateKeywords(updateKeywordPayload))\n\n    \n    }\n  }, [routesClicked,dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <AppShell\n        styles={{\n          main: {\n            background:\n              theme.colorScheme === \"dark\" ? theme.colors.dark[8] : \"white\",\n          },\n        }}\n        navbarOffsetBreakpoint=\"sm\"\n        asideOffsetBreakpoint=\"sm\"\n        fixed\n        navbar={<DashboardNavbar opened={opened} setOpened={setOpened} />}\n        header={\n          <Header\n            height={{ base: 50, md: 70 }}\n            p=\"md\"\n            m={\"md\"}\n            withBorder={false}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                height: \"100%\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\n                <Burger\n                  opened={opened}\n                  onClick={() => setOpened((o) => !o)}\n                  size=\"sm\"\n                  color={theme.colors.gray[6]}\n                  mr=\"xl\"\n                />\n              </MediaQuery>\n\n              <Text\n                variant=\"gradient\"\n                gradient={{ from: \"indigo\", to: \"cyan\", deg: 45 }}\n                sx={{ fontFamily: \"Greycliff CF, sans-serif\" }}\n                ta=\"center\"\n                fz=\"xl\"\n                fw={700}\n                mt={-20}\n              >\n                EAI CRM\n              </Text>\n              <TextInput\n                placeholder=\"Search\"\n                mb=\"md\"\n                icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n                radius=\"md\"\n                rightSection={\n                  <ActionIcon variant={\"subtle\"}>\n                    <IconAdjustmentsHorizontal />\n                  </ActionIcon>\n                }\n                // value={}\n                // onChange={}\n              />\n              <div>\n                <LightDarkButton />\n              </div>\n            </div>\n          </Header>\n        }\n      >\n        <Container>\n          <Card\n            mt={20}\n            shadow={\"lg\"}\n            bg={theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"\"}\n            radius={\"md\"}\n            mih={510}\n          >\n            <Routes>\n              <Route>\n                <Route\n                  index\n                  element={\n                    <PersonalInformation selectedCustomer={customerDetails} />\n                  }\n                />\n                <Route\n                  path=\"/personalInformation\"\n                  element={\n                    <PersonalInformation selectedCustomer={customerDetails} />\n                  }\n                />\n                <Route path=\"/profiling\" element={<Profiling />} />\n                <Route\n                  path=\"/keywords\"\n                  element={\n                    <KeywordsEntry\n                      submitKeywords={submitKeywords}\n                      updateKeywordValuesParent={updateKeywordValuesParent}\n                    />\n                  }\n                />\n\n                <Route path=\"/interests\" element={<Interests />} />\n                <Route path=\"/occupation\" element={<Occupation />} />\n                <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                <Route path=\"/activity\" element={<Activity />} />\n\n\n              </Route>\n            </Routes>\n          </Card>\n          {showNotification && <>\n          <Notification\n          loading\n          title=\"Background Syncing\"\n          withCloseButton={true}\n          style={{backgroundColor:\"red !important\"}}\n        >\n          <p style={{color:\"red\"}}> Uploading latest keywords data onto server</p>\n          \n        </Notification>\n\n        </>}\n        </Container>\n        \n        \n      </AppShell>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer:customerSlice,\n    keyword:keywordSlice\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate , Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate  to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.9e9a6d4e.png\";","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n    Box,\n    Flex,\n    Stack,\n    BackgroundImage,\n    Card,\n    Image,\n  } from \"@mantine/core\";\n  import { useForm } from \"@mantine/form\";\n  import { Link, redirect, useNavigate } from \"react-router-dom\";\n  import { IconArrowRight } from \"@tabler/icons-react\";\n  import loginImage from './assets/login.png'\n  import eaLogo from './assets/eaLogo.png'\n  import { loginUser } from \"../../redux/authSlice\";\n  import React, { useEffect, useState } from \"react\";\n  import { useDispatch, useSelector } from \"react-redux\";\n\n  \n  \n  \n  export default function Login() {\n\n      const [email,setEmail] = useState(\"\")\n      const [password,setPassword] = useState(\"\")\n      const dispatch = useDispatch();\n      const navigate = useNavigate();\n    \n  \n  \n    const { status, isLoggedIn } = useSelector((state)=> state.auth);\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n      dispatch(loginUser({email,password}));\n    };\n  \n  \n\n    useEffect(() => {\n        if (isLoggedIn) {\n          navigate(\"/\")\n        }\n      }, [isLoggedIn, navigate]);\n\n    return (\n        <>\n            <Box>\n                <Stack>\n                    <Flex>\n                        <Box>\n                            <Paper>\n                                <BackgroundImage\n                                    style={{ width: '500px', height: '550px' }}\n                                    src={loginImage}\n                                    radius={'md'}\n                                    pt={300}\n                                    mt={95}\n                                    ml={69}\n                                >\n                                    <Text\n                                        c={'white'}\n                                        pl={48}\n                                        pr={56}\n                                    >\n                                        <Title>\n                                            Title\n                                        </Title>\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices tristique ligula ac suscipit.\n                                    </Text>\n                                    <Button\n                                        ml={48}\n                                        mb={48}\n                                        mt={30}\n                                    >\n                                        Read More\n                                        <IconArrowRight />\n  \n                                    </Button>\n                                </BackgroundImage>\n                            </Paper>\n                        </Box>\n                        <Box>\n                            <Center>\n                                <Stack>\n                                    <Paper>\n                                        <Image\n                                            width={150}\n                                            height={128}\n                                            src={eaLogo}\n                                            mt={95}\n                                            mr={313}\n                                            ml={288}\n                                            mb={33}\n                                        />\n                                    </Paper>\n                                    <Card\n                                        shadow={'md'}\n                                        ml={50}\n                                        mr={100}\n                                        bg={'#F1F5F9'}\n                                    >\n  \n                                            <TextInput label=\"Email\" placeholder=\"you@ea.in\" value={email} required onChange={(e) => setEmail(e.target.value)} />\n                                            <PasswordInput\n                                                label=\"Password\"\n                                                placeholder=\"Your password\"\n                                                required\n                                                mt=\"md\"\n                                                onChange={(e) => setPassword(e.target.value)}\n                                            />\n                                            <Group position=\"apart\" mt=\"lg\">\n                                                <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                                                <Anchor>\n                                                    onClick={(event) => event.preventDefault()}\n                                                    href=\"#\"\n                                                    size=\"sm\"\n                                                \n                                                    Forgot password?\n                                                </Anchor>\n                                            </Group>\n\n                                            <Button fullWidth mt=\"xl\" type=\"submit\" onClick={handleSubmit}>\n                                                {status === \"loading\"? <>Signing in</>:<>Sign in</>} \n                                            </Button>\n                                    </Card>\n                                </Stack>\n                            </Center>\n                        </Box>\n                    </Flex>\n                </Stack>\n            </Box>\n        </>\n        // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n        // </div>\n    );\n  }\n  ","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { setAuth } from \"./redux/authSlice\";\nimport { ColorScheme, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport Layout from \"./components/Layout\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { ThemeProvider } from \"./ThemeProvider\";\nimport Login from \"./pages/Login/Login\";\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider colorScheme={colorScheme} toggleColorScheme={toggleColorScheme}>\n      <MantineProvider theme={{ colorScheme }} withGlobalStyles withNormalizeCSS>\n        <Routes>\n          <Route path=\"/login\" element={<Login/>}/>\n          <Route path=\"/register\" element={<Register/>}/>\n          <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n          <PrivateRoute path=\"/\" element={<Customers />} />\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React,{Suspense} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n        <Suspense fallback=\"...loading\">\n            <App />\n        </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}