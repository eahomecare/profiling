{"version":3,"sources":["i18n.js","utils/sleep.js","redux/customerSlice.js","StyledComponents/StyledTable.jsx","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/StatCard.jsx","redux/profileTypesSlice.js","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","components/AgentPages/Remarks.tsx","components/Remarks/RemarkListings.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","getCustomerRemarks","_ref5","_callee5","customerId","_yield$axios$get5","_context5","_x3","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","customerRemarks","remarksStatus","reducers","setCurrentCustomer","state","action","payload","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","response","customer","updatedCustomers","profileCompletion","_objectSpread","profile_completion","actions","StyledTable","_ref","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","_ref2","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","size","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","TableDisplay","customerList","dispatch","useDispatch","navigate","useNavigate","useMemo","accessorFn","_row$profiling","_row$profiling$person","profiling","personal_details","full_name","header","substr","accessorKey","minSize","percentage","RingProgress","thickness","sections","value","label","weight","align","Loader","type","Customers","_useSelector","useSelector","useEffect","LoadingOverlay","visible","overlayBlur","overlayColor","loaderProps","variant","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","fontFamily","fontWeight","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconClipboardText","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","links","item","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","ta","fz","Progress","Badge","fetchData","process","t0","profilingSlice","error","builder","addCase","message","Profiling","profileData","profileTypesCustomerMapping","stats","profile","Grid","Col","span","profileType","srcUrl","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","source","memoizedSelectedCustomer","randomDetails","randomLocation","faker","location","city","randomState","randomAddress","streetAddress","randomPincode","zipCode","Space","h","split","gender","dob","age","marital_status","Divider","email","alternate_email","phone_number","alternate_phone_number","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","handleSubmitKeywords","setData","_useSelector2","rolePermission","rolesPermissionsStatus","_useSelector3","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","setUnknowns","_useState9","_useState10","isDataChanged","setDataChanged","transformedData","category","allKeywords","unknownValues","filter","obj","hasChanged","isEqual","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","readOnly","alignSelf","Interests","interests","setInterests","groupedByCategory","groupBy","uniq","interest","React","Fragment","gradient","from","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","tempEditData","setTempEditData","headerElements","headerItem","index","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","toString","bg","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","industry","incomeBracket","Occupation","relationship","phone","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Remarks","Textarea","RemarkListings","currentCustomerId","_useDisclosure","useDisclosure","_useDisclosure2","opened","_useDisclosure2$","open","close","selectedRemark","setSelectedRemark","remark","Modal","onClose","centered","agentName","date","time","Dashboard","submitKeywords","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","auth","isLoggedIn","_useState11","_useState12","useLocation","_useState13","_useState14","pathname","Card","Routes","Route","element","path","keywordsPayload","then","Notification","loading","withCloseButton","parseJwt","token","base64","replace","jsonPayload","decodeURIComponent","window","atob","charCodeAt","slice","join","JSON","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_yield$axios$post3","_x4","authSlice","user","userStatus","users","setAuth","logout","localStorage","clear","defaults","headers","common","reload","storage","getItem","_id","access_token","_parseJwt","sub","setItem","stringify","_parseJwt2","_authSlice$actions","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","_ref6","createRolesPermissionMapping","_ref7","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_context9","_x6","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","_rolesPermissionSlice","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","isModalOpen","dropdownData","Date","now","selectedCombinations","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","Math","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","fetchSources","sources","fetchCampaignNames","campaignNames","campaignSlice","selectedCampaign","selectCampaign","delivered","totalSent","interested","success","failure","failed","converted","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectHoveredItem","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","store","configureStore","reducer","campaignManagementReducer","campaign","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","assets","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","entries","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","floor","random","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","_useState15","_useState16","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","undefined","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","isActive","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","IconRefresh","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","min","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","margin","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","combination","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","handleUserActionModal","selected_user","updatedUserData","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","address","pincode","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","handleSubmit","_error$response","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","chartData","strokeDasharray","CustomerProfileAnalysis","selectedSource","setSelectedSource","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$textColor","textColor","_ref$text","isHovered","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","handleMouseLeave","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","Root","App","setColorScheme","login","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.d0288231.chunk.js","sourcesContent":["import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory: [],\n  fetchedPofileCompleteness: false,\n  customerServiceHistoryStatus: \"idle\",\n  customerDetailsStatus: \"idle\",\n  customerRemarks: [], // New field for storing customer remarks\n  remarksStatus: \"idle\", // New status field for customer remarks\n};\n\nexport const getCustomers = createAsyncThunk(\n  \"customer/getCustomers\",\n  async () => {\n    // await sleep(3000)\n    const { data } = await axios.get(\"/customers\");\n    return data;\n  },\n);\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\n  \"customer/getCustomersProfileCompleteness\",\n  async () => {\n    await sleep(200);\n    const { data } = await axios.get(\"/profile\");\n    return data;\n  },\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  },\n);\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  },\n);\n\nexport const getCustomerRemarks = createAsyncThunk(\n  \"customer/getCustomerRemarks\",\n  async (customerId) => {\n    const { data } = await axios.get(\"/customers/remarks/\" + customerId);\n    console.log(\"Remarks in thunk\", data);\n    return data;\n  },\n);\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer: (state, action) => {\n      state.customerDetails = action.payload;\n    },\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const curr_state_obj = {};\n      const res_obj = {};\n      state.customers.map((e) => (curr_state_obj[e.id] = e));\n      action.payload.customer_details.map((e) => (res_obj[e.id] = e));\n      state.customers = Object.values(Object.assign(curr_state_obj, res_obj));\n    },\n    [getCustomers.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerDetails.pending]: (state) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload.response.customer;\n    },\n    [getCustomerDetails.rejected]: (state) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion\n          ? action.payload.profileCompletion[customer.id]\n          : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n      state.customers = updatedCustomers;\n      state.fetchedPofileCompleteness = true;\n    },\n    [getCustomersProfileCompleteness.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n    [getCustomerRemarks.pending]: (state) => {\n      state.remarksStatus = \"loading\";\n    },\n    [getCustomerRemarks.fulfilled]: (state, action) => {\n      state.remarksStatus = \"success\";\n      state.customerRemarks = action.payload; // Assuming API returns an array of remarks\n    },\n    [getCustomerRemarks.rejected]: (state) => {\n      state.remarksStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer } = customerSlice.actions;\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setCurrentCustomer } from \"../redux/customerSlice\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\nexport default function TableDisplay({\n  customerList,\n  fetchedPofileCompleteness,\n}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const profileCompletion = (percentage) => {\n    return (\n      <Box>\n        <RingProgress\n          size={45}\n          thickness={3}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 25\n                  ? \"#1D9B25\"\n                  : percentage > 50\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </Box>\n    );\n  };\n\n  const handleRowClick = (customer) => {\n    navigate(\"/dashboard\");\n    dispatch(setCurrentCustomer(customer));\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorFn: (row) => `${row.profiling?.personal_details?.full_name}`,\n        id: \"name\",\n        header: \"Name\",\n      },\n      {\n        accessorFn: (row) => `CLID${row.id.substr(0, 6)}....`,\n        id: \"customerId\",\n        header: \"Customer Id\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 400,\n      },\n      {\n        accessorKey: \"source\",\n        header: \"Source\",\n      },\n      {\n        accessorKey: \"mobile\",\n        header: \"Mobile\",\n      },\n      {\n        accessorFn: (row) =>\n          !fetchedPofileCompleteness ? (\n            <Loader type={\"dots\"} color=\"#0d5ff9\" />\n          ) : (\n            profileCompletion(row.profile_completion)\n          ),\n        id: \"profileCompletion\",\n        header: \"Profile Completion\",\n      },\n    ],\n    [fetchedPofileCompleteness],\n  );\n\n  return (\n    <Box>\n      <StyledTable\n        columns={columns}\n        data={customerList}\n        onRowClick={handleRowClick}\n      />\n    </Box>\n  );\n}\n","import { LoadingOverlay, Title } from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n\n  const { status, customers, fetchedPofileCompleteness } = useSelector(\n    (state) => state.customer,\n  );\n\n  // if(Array.isArray(customers) && customers.length > 0) setCustomerList(customers)\n\n  useEffect(() => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  }, []);\n\n  if (status === \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n            <div style={{ padding: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"20px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <span>\n                  <Title pl={5}>Customers</Title>\n                </span>\n              </div>\n              <TableDisplay\n                customerList={customers}\n                fetchedPofileCompleteness={fetchedPofileCompleteness}\n              />\n            </div>\n          </span>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconClipboardText,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #0d5ff9\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0D5FF9\",\n      boxShadow: `\n rgba(13, 95, 249, 1) 0px 1px 1px,\n rgba(13, 95, 249, 0.5) 0px 2px 2px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 3px 5px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"remarks\", label: \"Remarks\", icon: <IconClipboardText /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  {\n    link: \"Financial Information\",\n    label: \"Financial Information\",\n    icon: <IconReportMoney />,\n  },\n  {\n    link: \"Insurance Details\",\n    label: \"Insurance Details  \",\n    icon: <IconCarCrash />,\n  },\n  { link: \"Vehicle\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const links = data.map((item) => (\n    <NavLink\n      className={cx(classes.link, {\n        [classes.linkActive]: item.label === active,\n      })}\n      icon={item.icon}\n      component={Link}\n      variant=\"subtle\"\n      to={item.link}\n      label={item.label}\n      key={item.label}\n      onClick={(event) => {\n        setActive(item.label);\n      }}\n    />\n  ));\n\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to=\"/customers\"\n            c=\"#0d5ff9\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    {percentage}%\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group>\n        </Paper>\n    );\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nexport const fetchData = createAsyncThunk(\n  \"profiling/fetchData\",\n  async (customerId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/customer-mapping/${customerId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\nconst profilingSlice = createSlice({\n  name: \"profiling\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error =\n          action.error.message ||\n          \"Failed to fetch profile types for the customer\";\n      });\n  },\n});\n\nexport default profilingSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"@mantine/core\";\nimport { StatsCard } from \"./StatCard\";\nimport { fetchData } from \"../../redux/profileTypesSlice\";\n\nconst Profiling = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(\n    (state) => state.profileTypesCustomerMapping.data,\n  );\n  const { customerDetails } = useSelector((state) => state.customer);\n\n  console.log(\"Profiling data\", profileData);\n\n  useEffect(() => {\n    dispatch(fetchData(customerDetails.id));\n  }, [dispatch, customerDetails]);\n\n  const stats = profileData.map((profile) => (\n    <Grid.Col key={profile.profileType.id} span={4}>\n      <StatsCard\n        title={profile.profileType.name}\n        url={profile.profileType.srcUrl}\n        percentage={profile.profileCompletion}\n        frequency={0}\n        lastUpdated={0}\n      />\n    </Grid.Col>\n  ));\n\n  return (\n    <>\n      <Grid gutter=\"xl\">{stats}</Grid>\n    </>\n  );\n};\n\nexport default Profiling;\n\n","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport InfoTag from \"./InfoTag\";\nimport { fakerEN_IN as faker } from \"@faker-js/faker\";\nimport { useSelector } from \"react-redux\";\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { customerDetails } = useSelector((state) => state.customer);\n  console.log(\"state\", customerDetails);\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n  const memoizedSelectedCustomer = useMemo(\n    () => selectedCustomer,\n    [selectedCustomer.id, selectedCustomer.profiling.personal_details],\n  );\n\n  const randomDetails = useMemo(() => {\n    return {\n      randomLocation: faker.location.city(),\n      randomState: faker.location.state(),\n      randomAddress: faker.location.streetAddress(),\n      randomPincode: faker.location.zipCode(),\n    };\n  }, [memoizedSelectedCustomer]);\n\n  const profileCompletion = (percentage) => {\n    return (\n      <div>\n        <Center>\n          <RingProgress\n            mt={50}\n            size={80}\n            thickness={5}\n            sections={[\n              {\n                value: percentage,\n                color:\n                  percentage > 75\n                    ? \"#1D9B25\"\n                    : percentage > 60\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n              },\n            ]}\n            label={\n              <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                {percentage}%\n              </Text>\n            }\n          />\n        </Center>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Container mt={-80}>\n        <Group grow position=\"apart\">\n          <Text mt={70} fw={500}>\n            Basic Details\n          </Text>\n          <Space h={40} />\n          <div>\n            <Space h={40} />\n            {profileCompletion(profile_completion)}\n          </div>\n        </Group>\n        <div style={{ marginTop: \"-30px\" }}>\n          {/* <InfoTag title={'Picture'} subject={<Avatar radius={'xl'} size='xl' />} */}\n          <Grid gutter=\"xl\" pt={\"sm\"}>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"First Name\"}\n                subject={profile.full_name.split(\" \")[0]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Last Name\"}\n                subject={profile.full_name.split(\" \")[1]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Gender\"} subject={profile.gender} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Date of birth\"} subject={profile.dob} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Age\"} subject={profile.age} />\n            </Grid.Col>\n          </Grid>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Marital Status\"}\n                subject={profile.marital_status}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Source\"} subject={source} />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Contact Details</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Email Address\"}\n                subject={customerDetails.email}\n              />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Email\"}\n                subject={profile.alternate_email}\n              />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Mobile Number\"}\n                subject={profile.alternate_phone_number}\n              />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Address</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Location(city)\"}\n                subject={randomDetails.randomLocation}\n              />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"State\"} subject={randomDetails.randomState} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"PINCODE\"}\n                subject={randomDetails.randomPincode}\n              />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Country\"} subject=\"India\" />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Address Line\"}\n                subject={randomDetails.randomAddress}\n              />\n            </Grid.Col>\n          </Grid>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent, handleSubmitKeywords }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n  const [isDataChanged, setDataChanged] = useState(false);\n\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n\n\n  useEffect(() => {\n    const hasChanged = !_.isEqual(values, transformedData.map((obj) => obj.value));\n    setDataChanged(hasChanged);\n  }, [values, transformedData]);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          <div style={{ alignSelf: \"center\", padding: \"10px\" }}>\n            {isDataChanged && hasPermission(userPermissions, \"keywords_edit\") && <Button variant=\"light\"\n              onClick={() => handleSubmitKeywords()}\n            >\n              Update keywords\n            </Button>\n            }\n\n          </div>\n\n\n\n          {/* <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div> */}\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\n\nconst Interests = () => {\n  const dispatch = useDispatch()\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { customerKeywords, customerKeywordsStatus } = useSelector((state) => state.keyword);\n  const [interests, setInterests] = useState([])\n\n\n\n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      // Use _.uniq to remove duplicate values\n      const uniqueValues = _.uniq(_.map(values, 'value'));\n      return { category, values: uniqueValues };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n\n  useEffect(() => {\n    if (customerKeywordsStatus == 'success') {\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n      {customerKeywordsStatus == 'success' ?\n        <>\n          {interests.map((interest) => (\n            <React.Fragment key={interest.category}>\n              <Text fw={700}>{interest.category}</Text>\n              {interest.values.map((value) => (\n                <Badge\n                  key={value}\n                  variant=\"gradient\"\n                  gradient={{ from: 'indigo', to: 'cyan' }}\n                >\n                  {value}\n                </Badge>\n              ))}\n            </React.Fragment>\n          ))}\n        </> :\n        <>Loading interests...</>\n      }\n\n\n    </>\n\n  )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport { useDisclosure } from \"@mantine/hooks\";\nimport { Modal, Group, Button } from \"@mantine/core\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport { getCustomerRemarks } from \"../../redux/customerSlice\"; // replace 'path_to_your' with the actual path\n\nconst RemarkListings = () => {\n  const dispatch = useDispatch();\n  const customerRemarks = useSelector(\n    (state) => state.customer.customerRemarks,\n  );\n  const remarksStatus = useSelector((state) => state.customer.remarksStatus);\n  const currentCustomerId = useSelector(\n    (state) => state.customer.customerDetails.id,\n  ); // Assuming 'id' is the field in customerDetails for the customer's ID\n\n  const [opened, { open, close }] = useDisclosure(false);\n  const [selectedRemark, setSelectedRemark] = useState(null);\n\n  useEffect(() => {\n    if (currentCustomerId) {\n      dispatch(getCustomerRemarks(currentCustomerId));\n    }\n  }, [dispatch, currentCustomerId]);\n\n  // Define columns for StyledTable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"agentName\",\n        header: \"Agent Name\",\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Date\",\n      },\n      {\n        accessorKey: \"time\",\n        header: \"Time\",\n      },\n      {\n        accessorKey: \"remark\",\n        header: \"Remark\",\n      },\n    ],\n    [],\n  );\n\n  const handleRowClick = (remark) => {\n    setSelectedRemark(remark);\n    open();\n  };\n\n  return (\n    <>\n      <Box>\n        {remarksStatus === \"success\" ? (\n          <StyledTable\n            columns={columns}\n            data={customerRemarks}\n            onRowClick={handleRowClick}\n          />\n        ) : remarksStatus === \"loading\" ? (\n          <p>Loading...</p>\n        ) : (\n          <p>Failed to load remarks.</p>\n        )}\n      </Box>\n\n      <Modal opened={opened} onClose={close} title=\"Remark Details\" centered>\n        {selectedRemark && (\n          <div>\n            <p>\n              <strong>Agent Name:</strong> {selectedRemark.agentName}\n            </p>\n            <p>\n              <strong>Date:</strong> {selectedRemark.date}\n            </p>\n            <p>\n              <strong>Time:</strong> {selectedRemark.time}\n            </p>\n            <p>\n              <strong>Remark:</strong> {selectedRemark.remark}\n            </p>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default RemarkListings;\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\nimport Remarks from \"../../components/AgentPages/Remarks\";\nimport RemarkListings from \"../../components/Remarks/RemarkListings\";\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  const handleSubmitKeywords = () => {\n\n    const payload = {\n      customerId: customerDetails.id,\n      keywordsPayload: keywordValues,\n    };\n    setNotification(true);\n    sleep(5000).then((data) => setNotification(false));\n    dispatch(updateKeywords(payload));\n\n\n  }\n\n  // useEffect(() => {\n  //   if (\n  //     routesClicked.at(-2) &&\n  //     routesClicked.at(-2) === \"/dashboard/keywords\"\n  //   ) {\n  //     const updateKeywordPayload = {\n  //       customerId: customerDetails.id,\n  //       keywordsPayload: keywordValues,\n  //     };\n\n  //     setNotification(true);\n  //     sleep(5000).then((data) => setNotification(false));\n\n  //     dispatch(updateKeywords(updateKeywordPayload));\n  //   }\n  // }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Card shadow={\"lg\"} radius={\"md\"}>\n              <Routes>\n                <Route>\n                  <Route\n                    index\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route\n                    path=\"/personalInformation\"\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route path=\"/profiling\" element={<Profiling />} />\n                  <Route\n                    path=\"/keywords\"\n                    element={\n                      <KeywordsEntry\n                        submitKeywords={submitKeywords}\n                        updateKeywordValuesParent={updateKeywordValuesParent}\n                        handleSubmitKeywords={handleSubmitKeywords}\n                      />\n                    }\n                  />\n\n                  <Route path=\"/interests\" element={<Interests />} />\n                  <Route path=\"/remarks\" element={<RemarkListings />} />\n                  <Route path=\"/occupation\" element={<Occupation />} />\n                  <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                  <Route path=\"/activity\" element={<Activity />} />\n                </Route>\n              </Routes>\n            </Card>\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Syncing keywords\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setAuth: (state, action) => {\n      const storage = JSON.parse(localStorage.getItem(\"login\"));\n      if (Object.keys(storage).length > 0) {\n        const { email, _id } = storage\n        state.user.email = email;\n        state.user._id = _id;\n        state.status = \"success\";\n        state.isLoggedIn = true;\n      } else {\n        state.isLoggedIn = false;\n      }\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n    'campaignManagement/fetchRowData',\n    async (_, { getState }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n        const responses = [];\n        let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n        for (const rowKey of Object.keys(state.rows)) {\n            const row = state.rows[rowKey];\n            if (!row.first || !row.second || !row.third) {\n                throw new Error(\"Row has empty/default values. Fetching aborted.\");\n            }\n\n            const body = {\n                information_type: row.first.toLowerCase().split(' ').join('_'),\n                category: row.second.toLowerCase().split(' ').join('_'),\n                value: row.third.toLowerCase().split(' ').join('_')\n            };\n\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            const data = await response.json();\n            const customerIDsForThisRow = data.map(customer => customer.id);\n\n            if (commonCustomerIDs === null) {\n                commonCustomerIDs = new Set(customerIDsForThisRow);\n            } else {\n                commonCustomerIDs = new Set([...commonCustomerIDs].filter(id => customerIDsForThisRow.includes(id)));\n            }\n\n            responses.push({\n                rowKey,\n                figures: commonCustomerIDs.size,\n                customerIDs: [...commonCustomerIDs]\n            });\n        }\n        return responses;\n    }\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n    'campaignManagement/fetchFiguresForRow',\n    async (rowId, { getState }) => {\n        const state = getState().campaignManagement;\n        const row = state.rows[rowId];\n        if (!row || !row.first || !row.second || !row.third) {\n            throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n        }\n\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n        const body = {\n            information_type: row.first.toLowerCase().split(' ').join('_'),\n            category: row.second.toLowerCase().split(' ').join('_'),\n            value: row.third.toLowerCase().split(' ').join('_')\n        };\n\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        });\n\n        const data = await response.json();\n        const customerIDsForThisRow = data.map(customer => customer.id);\n\n        // Retrieve customer IDs from all preceding rows\n        let commonCustomerIDs = customerIDsForThisRow;\n        for (const otherRowId of Object.keys(state.rows)) {\n            if (Number(otherRowId) < Number(rowId)) {\n                const otherRow = state.rows[otherRowId];\n                commonCustomerIDs = commonCustomerIDs.filter(id => otherRow.customerIDs.includes(id));\n            }\n        }\n\n        return { rowId, figures: commonCustomerIDs.length, customerIDs: commonCustomerIDs };\n    }\n);\n\nexport const createCampaign = createAsyncThunk(\n    'campaignManagement/createCampaign',\n    async (_, { getState, rejectWithValue }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n        const body = {\n            name: state.eventName,\n            eventBased: true,\n            triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n            type: \"EMAIL\",\n            recurrenceType: state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n            start: state.tabData.Email.timelineState.startDate,\n            end: state.tabData.Email.timelineState.endDate,\n            templateText: state.tabData.Email.content,\n            customerIDs: state.allCustomerIDs\n        };\n\n        console.log('Publish body', body)\n\n        try {\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            console.log('response', response)\n\n            if (!response.ok) {\n                throw new Error('Failed to create campaign');\n            }\n\n            return response.json();\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst initialState = {\n    isModalOpen: false,\n    dropdownData: {\n        \"Personal Information\": {\n            \"Age\": [\"25-30\", \"31-35\"],\n            \"Gender\": [\"Male\", \"Female\"],\n            \"Marital Status\": [\"Single\", \"Married\"],\n            \"Location\": [\"Delhi\", \"Mumbai\"],\n        },\n        \"Interests\": {},\n        \"Occupation\": '',\n        \"Activity\": '',\n        \"Family Details\": '',\n        \"Financial Information\": '',\n        \"Insurance Details\": '',\n        \"Vehicle\": '',\n        \"Health\": '',\n    },\n    rows: {\n        [Date.now().toString()]: {\n            first: \"\",\n            second: \"\",\n            third: \"\",\n            figures: null,\n            customerIDs: []\n        }\n    },\n    allCustomerIDs: [],\n    selectedCombinations: [],\n    eventName: \"\",\n    eventDate: null,\n    step: 1,\n    activeTab: 'Email',\n    startDate: null,\n    endDate: null,\n    tabData: {\n        Email: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 500\n        },\n        SMS: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 160\n        },\n        Notification: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 250\n        },\n        Whatsapp: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 2000\n        }\n    },\n    radarData: [\n        { count: 120, subject: 'EZ-Auto' },\n        { count: 98, subject: 'Cyberior' },\n        { count: 86, subject: 'Homecare' },\n        { count: 99, subject: 'E-Portal 2.0' },\n        { count: 85, subject: 'EZ-Travel' },\n    ],\n    downloadDataStatus: null,\n    error: null,\n    rowIdsArray: [],\n    loadingStates: {},\n    errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n    name: \"campaignManagement\",\n    initialState,\n    reducers: {\n        toggleModal: (state, action) => {\n            state.isModalOpen = action.payload;\n        },\n        updateDropdownData: (state, action) => {\n            state.dropdownData = action.payload;\n        },\n        updateRows: (state, action) => {\n            state.rows = action.payload;\n            state.rowIdsArray = [];\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        updateSelectedCombinations: (state, action) => {\n            state.selectedCombinations = action.payload;\n        },\n        setCampaignName: (state, action) => {\n            state.campaignName = action.payload;\n        },\n        setEventName: (state, action) => {\n            state.eventName = action.payload;\n        },\n        setEventDate: (state, action) => {\n            state.eventDate = action.payload;\n        },\n        setStep: (state, action) => {\n            state.step = action.payload;\n        },\n        setStartDate: (state, action) => {\n            state.startDate = action.payload;\n        },\n        setEndDate: (state, action) => {\n            state.endDate = action.payload;\n            state.eventDate = action.payload;\n        },\n        setActiveTab: (state, action) => {\n            state.activeTab = action.payload;\n        },\n        updateTabData: (state, action) => {\n            state.tabData = action.payload;\n        },\n        setRadarData: (state, action) => {\n            state.radarData = action.payload;\n        },\n        resetModal: (state) => {\n            state.step = initialState.step;\n            state.campaignName = initialState.campaignName;\n            state.eventName = initialState.eventName;\n            state.activeTab = initialState.activeTab;\n            state.tabData = initialState.tabData;\n            state.eventDate = initialState.eventDate\n        },\n    },\n    extraReducers: {\n        [fetchRowData.pending]: (state) => {\n            state.downloadDataStatus = 'loading';\n        },\n        [fetchRowData.fulfilled]: (state, action) => {\n            state.downloadDataStatus = 'success';\n\n            action.payload.forEach(item => {\n                state.rows[item.rowKey].figures = item.figures;\n                state.rows[item.rowKey].customerIDs = item.customerIDs;\n            });\n\n            state.rowIdsArray = [...new Set([...state.rowIdsArray, ...action.payload.map(item => item.rowKey)])];\n\n            const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n            state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n        },\n        [fetchRowData.rejected]: (state, action) => {\n            state.downloadDataStatus = 'failed';\n            state.error = action.error.message;\n        },\n        [fetchFiguresForRow.pending]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'loading';\n            state.errors[rowId] = null;\n        },\n        [fetchFiguresForRow.fulfilled]: (state, action) => {\n            const { rowId, figures, customerIDs } = action.payload;\n            state.rows[rowId].figures = figures;\n            state.rows[rowId].customerIDs = customerIDs;\n            state.loadingStates[rowId] = 'loaded';\n\n            const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n            if (Number(rowId) === lastRowId) {\n                state.allCustomerIDs = [...customerIDs];\n            }\n        },\n        [fetchFiguresForRow.rejected]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'error';\n            state.errors[rowId] = action.error.message;\n        }\n    }\n});\n\nexport const {\n    toggleModal,\n    updateDropdownData,\n    updateRows,\n    updateSelectedCombinations,\n    setCampaignName,\n    setEventName,\n    setEventDate,\n    setStep,\n    setStartDate,\n    setEndDate,\n    setActiveTab,\n    updateTabData,\n    setRadarData,\n    resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nexport const fetchSources = createAsyncThunk(\n  \"campaign/fetchSources\",\n  async () => {\n    const response = {\n      sources: [],\n    };\n    return response.sources;\n  },\n);\n\nexport const fetchCampaignNames = createAsyncThunk(\n  \"campaign/fetchCampaignNames\",\n  async () => {\n    const response = {\n      campaignNames: [],\n    };\n    return response.campaignNames;\n  },\n);\n\nconst initialState = {\n  data: [],\n  sources: [\"Homecare\", \"Cyberior\", \"EZ-Auto\", \"EZ-Travel\", \"E-Portal 2.0\"],\n  campaignNames: [\"Campaign 1\", \"Campaign 2\", \"Campaign 3\"],\n  selectedCampaign: \"All\",\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaign = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload.map((item) => ({\n          name: item.campaignName,\n          delivered: item.totalSent,\n          interested: item.success,\n          failure: item.failed,\n          converted: 0,\n        }));\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      })\n      .addCase(fetchSources.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.sources = action.payload;\n        }\n      })\n      .addCase(fetchCampaignNames.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.campaignNames = action.payload;\n        }\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async (source) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async (source) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`,\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\nimport profilingSlice from \"./profileTypesSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n    profileTypesCustomerMapping: profilingSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n      navigate(\"/\");\n    }\n  }, [status, navigate]);\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#0d5ff9\", to: \"#F3F6FF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#0d5ff9\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      // topProps={() => (\n      //   <Flex>\n      //     <StyledButton\n      //       compact\n      //       onClick={() => {\n      //         console.log(\"Create Permission clicked!\");\n      //       }}\n      //     >\n      //       Create Permission\n      //     </StyledButton>\n      //   </Flex>\n      // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#0d5ff9\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#0d5ff9\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#0d5ff9\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n      const currentCombination = {\n        first: row.first,\n        second: row.second,\n        third: row.first === \"Interests\" ? option.value : option,\n      };\n\n      const isSelectedCombination = selectedCombinations.some(\n        (selected) =>\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      const isSelectedInCurrentRow = selectedCombinations.some(\n        (selected) =>\n          selected.rowId === rowId &&\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      return !isSelectedCombination || isSelectedInCurrentRow;\n    })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#0d5ff9\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#0d5ff9\"\n          fill=\"#0d5ff9\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#0d5ff9\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        border: \"2px solid #0d5ff9\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#0d5ff9\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#0d5ff9\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#0d5ff9\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#0d5ff9\"}\n                      bg={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#F3F6FF\",\n                          color: \"#0d5ff9\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${activeTab === tab ? \"show active\" : \"\"\n                      }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                              <div className=\"character-limit-error\">\n                                Character limit exceeded!\n                              </div>\n                            )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#F3F6FF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import {\n  ActionIcon,\n  Box,\n  Flex,\n  Select,\n  Text,\n  Title,\n  Loader,\n  Group,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  fetchData,\n  fetchSources,\n  fetchCampaignNames,\n  selectCampaign,\n} from \"../../redux/campaignSlice\";\nimport { Link } from \"react-router-dom\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector((state) => state.campaign.data);\n  const sources = useSelector((state) => state.campaign.sources);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n      dispatch(fetchSources());\n      dispatch(fetchCampaignNames());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#0d5ff9\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              data={[\"All\", ...campaignNames]}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={(value) => dispatch(selectCampaign(value))}\n            />\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Source(s)</Text>}\n              data={sources}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"name\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#F3F6FF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#0d5ff9\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#F3F6FF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#0d5ff9\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#0d5ff9\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#0d5ff9\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"}>\n              <Stack>\n                <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                  <Text fw={\"bold\"}>Communications</Text>\n                  <Center>\n                    <ActionIcon c={\"#0d5ff9\"}>\n                      <IconTableExport />\n                    </ActionIcon>\n                    <Text fw={\"bold\"}>Export</Text>\n                  </Center>\n                </Flex>\n                <Box>\n                  <VerticalBarChart />\n                </Box>\n              </Stack>\n            </Card>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(keywords, keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n            ...updatedDropdownData[keyword.category],\n            { label: keyword.value, value: keyword.id },\n          ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Data Analysis\n            </Text>\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#0d5ff9\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#0d5ff9\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#0d5ff9\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#0d5ff9\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#F3F6FF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#F3F6FF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#F3F6FF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#0d5ff9\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#0d5ff9\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#F3F6FF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #0d5ff9\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#00239c,#0d5ff9)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#0d5ff9)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            //            boxShadow: `\n            // rgba(13, 95, 249, 0.17) 0px -23px 25px 0px inset,\n            // rgba(13, 95, 249, 0.15) 0px -36px 30px 0px inset,\n            // rgba(13, 95, 249, 0.1) 0px -79px 40px 0px inset,\n            // rgba(13, 95, 249, 0.06) 0px 2px 1px,\n            // rgba(13, 95, 249, 0.09) 0px 4px 2px,\n            // rgba(13, 95, 249, 0.09) 0px 8px 4px,\n            // rgba(13, 95, 249, 0.09) 0px 16px 8px,\n            // rgba(13, 95, 249, 0.09) 0px 32px 16px\n            //    `,\n\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n                />\n              )}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#F3F6FF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n        id: data.id,\n        roleId: data.roleId,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email.split(\"@\").length > 0 ? row.original.email.split(\"@\")[0] : \"\"}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          active\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton compact onClick={handleAddUserModal}>\n        //       + Create User\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            My Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#0d5ff9\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#0d5ff9\",\n                      \"&:hover\": {\n                        backgroundColor: \"#F3F6FF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#0d5ff9\",\n                  color: \"#0d5ff9\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F3F6FF\",\n                    color: \"#0d5ff9\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Change Password\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = ({ source }) => {\n  console.log(source);\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\nimport { useState } from \"react\";\n\nconst CustomerProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = ({ source }) => {\n  const dispatch = useDispatch();\n  console.log(\"source for profiles\", source);\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n  console.log(\"Chart data for profiles\", chartData);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      onMouseEnter={() => dispatch(setHoveredItem(text))}\n      onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  const dispatch = useDispatch();\n  const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#F3F6FF\"}\n      mah={300}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#0d5ff9\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#0d5ff9\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            onMouseEnter={() => handleMouseEnter(entry.name)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                sx={{\n                  transition: \"transform 0.3s ease\",\n                  transform:\n                    hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                  backgroundImage:\n                    hoveredItem === entry.name\n                      ? \"radial-gradient(#000000 20% ,#0d5ff9)\"\n                      : \"none\",\n                }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Card shadow={\"lg\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={4}>\n          <Stack>\n            <StyledSelect\n              disabled={status === \"loading\"}\n              label={\"Profile\"}\n              placeholder={\"Select Profile(s)\"}\n              data={profileOptions}\n              onChange={(value) => setSelectedProfile(value)}\n            />\n            <StyledSelect\n              disabled={status === \"loading\"}\n              label={\"Demographics\"}\n              placeholder={\"Select Main Demographics\"}\n              data={demographicOptions}\n              onChange={(value) => setSelectedDemographic(value)}\n            />\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={4}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfilePieChart />\n            )}\n          </Center>\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfileDataCard />\n            )}\n          </Center>\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\nimport { setAuth } from \"./redux/authSlice\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  useEffect(() => {\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\n    if (isLoggedIn) {\n      dispatch(setAuth());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {/* {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/\" element={<BoardStats />} />\n              ) : (\n                <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n              )} */}\n              <PrivateRoute path=\"/\" element={<Root />} />\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/users\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}