{"version":3,"sources":["components/Profiling/assets/Avid Traveler.png","i18n.js","redux/authSlice.js","components/LightDarkButton.jsx","utils/sleep.js","redux/customerSlice.js","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/assets/index.js","components/Profiling/StatCard.jsx","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","pages/Dashboard/Dashboard.jsx","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Remarks.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/Users.jsx","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/CreatePermissionModal.jsx","pages/Acl/Permissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/Campaign/components/ViewCampaigns/BarStackedCampaign.jsx","pages/Campaign/components/Analysis/Analysis.jsx","AppShell/MainAppShell.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","loginUser","createAsyncThunk","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userData","_yield$axios$post","data","wrap","_context","prev","next","axios","post","sent","abrupt","stop","_x","apply","arguments","registerUser","_ref2","_callee2","_yield$axios$post2","_context2","_x2","getProfile","_ref3","_callee3","id","_yield$axios$get","_context3","get","_x3","getUsers","_callee4","_yield$axios$get2","_context4","authSlice","createSlice","name","initialState","status","isLoggedIn","user","profile","userStatus","users","reducers","setAuth","state","action","payload","logout","localStorage","clear","defaults","headers","common","setUser","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","access_token","_parseJwt","email","_id","sub","setItem","stringify","rejected","_parseJwt2","console","log","_authSlice$actions","actions","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","colorScheme","toggleColorScheme","dark","_jsx","ActionIcon","variant","color","onClick","title","children","IconSun","size","IconMoonStars","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","getCustomersProfileCompleteness","getCustomerDetails","_yield$axios$get3","getCustomerServicesHistory","_ref4","_yield$axios$get4","customerSlice","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","setCurrentCustomer","curr_state_obj","res_obj","e","customer_details","Object","values","assign","response","customer","updatedCustomers","profileCompletion","_objectSpread","profile_completion","TableDisplay","customerList","dispatch","useDispatch","_useSelector","useSelector","navigate","useNavigate","rows","_customer$profiling","_customer$profiling$p","percentage","_jsxs","Flex","profiling","personal_details","full_name","substr","source","mobile","Center","RingProgress","thickness","sections","value","label","Text","weight","align","Loader","Button","gradient","from","to","buttonClick","Card","shadow","Table","highlightOnHover","fw","fz","Customers","useEffect","LoadingOverlay","visible","overlayBlur","loaderProps","_Fragment","style","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Container","mt","TextInput","w","ml","IconChevronLeft","IconChevronRight","Register","my","sx","theme","fontFamily","fontWeight","component","Link","Paper","withBorder","p","radius","placeholder","required","PasswordInput","Group","position","Checkbox","lineHeight","fullWidth","useStyles","createStyles","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","gray","borderRadius","backgroundColor","white","getStylesRef","black","linkIcon","ref","marginRight","spacing","linkActive","primaryColor","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","opened","_useStyles","setOpened","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","useMantineTheme","links","item","NavLink","className","event","Navbar","height","hiddenBreakpoint","hidden","lg","Stack","bg","Section","grow","IconArrowNarrowLeft","rightSection","imageURL","require","baseUrl","location","origin","default","_AvidTraveler$Fitnes","ICON_SIZE","rem","card","overflow","xl","paddingTop","top","left","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","ta","Progress","Badge","Profiling","stats","entries","assets","list","customerStats","Math","floor","random","maxLastUpdated","maxCompleted","min","getCustomerStats","Grid","Col","span","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","Space","h","pt","gender","dob","age","marital_status","Divider","alternate_email","phone_number","alternate_phone_number","pincode","country","address","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","KeywordsEntry","updateKeywordValuesParent","setData","_useSelector2","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","unknowns","setUnknowns","transformedData","useMemo","_","category","allKeywords","unknownValues","filter","obj","handleSearchChange","debounce","MultiSelect","onChange","searchable","clearable","creatable","getCreateLabel","onCreate","current","_toConsumableArray","unknown","index","Interests","interests","setInterests","groupedByCategory","groupBy","interest","React","Fragment","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","_useState9","_useState10","tempEditData","setTempEditData","headerElements","headerItem","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","Box","mb","cursor","IconTrash","IconPlus","ScrollArea","maxHeight","type","industry","incomeBracket","Occupation","relationship","phone","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Array","isArray","Dashboard","submitKeywords","routesClicked","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","auth","_useState11","_useState12","useLocation","_useState13","_useState14","pathname","at","updateKeywordPayload","then","AppShell","styles","main","background","navbarOffsetBreakpoint","asideOffsetBreakpoint","navbar","header","Header","base","md","m","MediaQuery","largerThan","Burger","o","mr","deg","IconSearch","stroke","IconAdjustmentsHorizontal","mih","Routes","Route","element","path","Notification","loading","withCloseButton","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","_ref5","createPermission","_ref6","createRolesPermissionMapping","_ref7","_callee5","_yield$axios$post3","_context5","_x4","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_yield$axios$get5","_context9","_x6","rolesPermissionSlice","rolesPermissionsStatus","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","roles","permissions","userRoles","userPermissions","permissionsByRole","getUserRolesPermissionsByMapping","role","push","permission","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","process","rowKey","row","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","t0","message","isModalOpen","dropdownData","Date","now","selectedCombinations","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","error","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","fetchData","fetchSources","sources","fetchCampaignNames","campaignNames","campaignSlice","contactability","interested","converted","over","total","builder","addCase","store","configureStore","reducer","rolePermission","campaignManagementReducer","campaign","campaignReducer","PrivateRoute","props","_objectWithoutProperties","_excluded","Navigate","Login","setEmail","password","setPassword","BackgroundImage","loginImage","pr","IconArrowRight","Image","eaLogo","target","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","backgroundImage","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","customerId","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","city","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","disabled","bottom","xs","right","zIndex","transform","border","allowFullScreen","ProfileCard","onDetailChange","editable","justify","input","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","isEqual","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","transition","timingFunction","flexDirection","Remarks","Textarea","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","i","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","text","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","_useState15","_useState16","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onClose","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","some","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Modal","prevProfile","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","agentName","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","withColumnBorders","Users","MainLink","UnstyledButton","ThemeIcon","IconUsersGroup","IconDatabase","MainLinks","onLinkSelect","_createElement","RolesVsPermissions","CreatePermissionModal","handleCreatePermission","permissionName","setPermissionName","withAsterisk","Permissions","formatDate","dateString","toLocaleDateString","undefined","day","month","year","Acl","borderBottom","boxShadow","shadows","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userPermissionsDict","hasOwnProperty","_step2","allUserIds","_iterator2","userBySelectedId","x","rolesPermissionsMapping_initialData","isActive","users_initialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconChevronDown","rightSectionWidth","pointerEvents","IconExclamationMark","IconRefresh","Step1","evt","DatePickerInput","popoverProps","withinPortal","IconCalendar","date","minDate","CustomDate","setSelectedDate","CustomTime","setSelectedTime","timeSelected","pickerControl","_ref$current","showPicker","IconClock","TimeInput","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","time","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","root","htmlFor","DatePicker","dateFormat","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","freq","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","borderColor","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","readOnly","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","alt","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","fill","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","fillOpacity","Demographic","reduce","acc","curr","BarStackedView","BarChart","margin","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","LabelList","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","dropdown","updatedRows","updatedCombinations","thirdValue","opt","combination","updatedSelectedCombinations","overflowY","MainAppShell","Logo","Icon3dCubeSphere","IconAccessible","IconLayoutAlignBottom","IconAnalyze","IconArrowBadgeDown","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","Cell","VerticalBarChart","layout","Contactability","Interested","Converted","Over","IconClick","IconCreditCard","IconCone","IconView360","IconBounceLeft","TopPanelCards","BoardStats","IconTableExport","SimpleGrid","cols","App","setColorScheme","hasPermission","login","getItem","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","createTheme","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","ThemeProvider","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.591398df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      console.log(action.payload);\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { ActionIcon, useMantineColorScheme } from '@mantine/core';\nimport { IconSun, IconMoonStars } from '@tabler/icons-react';\nimport React from 'react';\n\nexport default function LightDarkButton() {\n    const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n    const dark = colorScheme === 'dark';\n\n    return (\n        <ActionIcon\n            variant=\"outline\"\n            color={dark ? 'yellow' : 'blue'}\n            onClick={() => toggleColorScheme()}\n            title=\"Toggle color scheme\"\n        >\n            {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n        </ActionIcon>\n    );\n}","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory:[],\n  fetchedPofileCompleteness:false,\n  customerServiceHistoryStatus:\"idle\",\n  customerDetailsStatus:\"idle\"\n};\n\nexport const getCustomers = createAsyncThunk(\"customer/getCustomers\", async () => {\n  // await sleep(3000)\n  const { data } = await axios.get(\"/customers\");\n  return data;\n});\n\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\"customer/getCustomersProfileCompleteness\", async () => {\n  await sleep(200)\n  const { data } = await axios.get(\"/profile\");\n  return data;\n});\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  }\n);\n\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  }\n);\n\n\n\nexport const customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.customers.map(e => curr_state_obj[e.id] = e)\n      action.payload.customer_details.map(e => res_obj[e.id] = e)\n      state.customers = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getCustomers.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getCustomerDetails.pending]: (state, action) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload.response.customer;\n    },\n    [getCustomerDetails.rejected]: (state, action) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n   [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion ? action.payload.profileCompletion[customer.id] : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n\n      return {\n        ...state,\n        customers: updatedCustomers,\n        fetchedPofileCompleteness: true,\n      };\n    },\n\n    [getCustomersProfileCompleteness.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state, action) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state, action) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer } = customerSlice.actions;\n","import { Button, Card, Center, Container, Flex, RingProgress, Table, Text } from '@mantine/core';\nimport { setCurrentCustomer } from '../redux/customerSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Loader } from '@mantine/core';\n\n\n\n\nexport default function TableDisplay({ customerList ,fetchedPofileCompleteness}) {\n  const dispatch = useDispatch();\n  const { status, customerDetails } = useSelector(state => state.customer);\n\n  \n\n  // const { customer_details } = customerList\n  // const { customerContext, setCustomerContext } = useContext(CustomerContext)\n  const navigate = useNavigate()\n\n  const profileCompletion = (percentage) => {\n    return (\n      <div>\n        <Center>\n          <RingProgress\n            size={50}\n            thickness={5}\n            sections={[{ value: percentage, color: (percentage > 25 ? '#1D9B25' : percentage > 50 ? '#CFA400' : '#D85972') }]}\n            label={\n              <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                {percentage}%\n              </Text>\n            }\n          />\n        </Center>\n      </div>\n    )\n  }\n\n  const buttonClick = (customer) => {\n    // setCustomerContext(customer)\n    navigate('/dashboard')\n    dispatch(setCurrentCustomer(customer))\n\n  }\n\n\n\n\n\n  const rows = customerList.map((customer) => {\n    \n\n\n\n    return (\n      <tr key={customer.id}>\n        <td><Flex>{customer.profiling?.personal_details?.full_name}</Flex></td>\n        <td><Flex>{'CLID' + customer.id.substr(0, 6) + '....'}</Flex></td>\n        <td><Flex>{customer.email}</Flex></td>\n        <td><Flex>{customer.source}</Flex></td>\n        <td><Flex>{customer.mobile}</Flex></td>\n        <td><Flex>{!fetchedPofileCompleteness? <Loader/>: profileCompletion(customer.profile_completion)}</Flex></td>\n        <td>\n          <Button\n            // color={'#DDE5FF'}\n            // variant={'light'}\n            variant={'gradient'}\n            gradient={{ from: 'indigo', to: 'cyan' }}\n            onClick={() => buttonClick(customer)}>\n            View\n          </Button>\n        </td>\n      </tr>\n    )\n  }\n  );\n\n  return (\n    <Card shadow={'md'}>\n      <Table highlightOnHover>\n        <thead>\n          <tr>\n            <th><Flex><Text fw={900} fz={17}>Name</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Customer Id</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Email</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Source</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Mobile</Text></Flex></th>\n            <th><Flex><Text fw={900} fz={17}>Profile Completion</Text></Flex></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </Card>\n  );\n}","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport { useEffect, useState } from \"react\"\nimport LightDarkButton from \"../../components/LightDarkButton\"\nimport { getCustomers, getCustomersProfileCompleteness } from \"../../redux/customerSlice\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\"\nimport { Link } from \"react-router-dom\";\n\n\n\nconst Customers = () => {\n\n\n    const dispatch = useDispatch();\n\n    const { status, customers, fetchedPofileCompleteness } = useSelector(state => state.customer);\n\n    // if(Array.isArray(customers) && customers.length > 0) setCustomerList(customers)\n\n    useEffect(() => {\n        dispatch(getCustomers());\n        dispatch(getCustomersProfileCompleteness())\n    }, []);\n\n\n\n\n    if (status === 'loading') {\n        return (\n            <LoadingOverlay visible overlayBlur={2}\n                loaderProps={{\n                    size: 'xl',\n                    variant: 'dots'\n                }}\n            />\n        )\n    }\n    else {\n        return (\n            <>\n                <div style={{ display: 'flex', }}>\n                    <span style={{ flexGrow: '1', width: '100px' }}>\n                        <div style={{ padding: '10px' }}>\n                            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px', marginTop: '5px' }}>\n                                <span>\n                                    <Title pl={5}>Customers</Title>\n                                </span>\n                                <span>\n                                    <Container>\n                                        <Center>\n                                            <Flex mt={5}>\n                                                <TextInput w={30} />\n                                                <Text mt={5} ml={5} fw={20}>Items per page</Text>\n                                                <Container mt={5}>\n                                                    <Flex>\n                                                        <ActionIcon>\n                                                            <IconChevronLeft />\n                                                        </ActionIcon>\n                                                        <ActionIcon>\n                                                            <IconChevronRight />\n                                                        </ActionIcon>\n                                                    </Flex>\n                                                </Container>\n                                            </Flex>\n                                        </Center>\n                                    </Container>\n                                </span>\n                            </div>\n                            <TableDisplay customerList={customers} fetchedPofileCompleteness={fetchedPofileCompleteness} />\n                        </div>\n                    </span>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Customers;","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import { IconArrowNarrowLeft, IconBriefcase, IconCar, IconCarCrash, IconCircleKey, IconComet, IconFriends, IconHealthRecognition, IconPalette, IconReportMoney, IconSocial, IconTimeline, IconUser } from '@tabler/icons-react';\nimport { createStyles, Navbar, Group, Code, getStylesRef, rem, NavLink, Card, useMantineTheme, Stack } from '@mantine/core';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = createStyles((theme) => ({\n    link: {\n        ...theme.fn.focusStyles(),\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n        fontSize: theme.fontSizes.sm,\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n        // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n        borderRadius: theme.radius.sm,\n        fontWeight: 500,\n\n        '&:hover': {\n            backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n            color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n\n            [`& .${getStylesRef('icon')}`]: {\n                color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n            },\n        },\n    },\n\n    linkIcon: {\n        ref: getStylesRef('icon'),\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n        marginRight: theme.spacing.sm,\n    },\n\n    linkActive: {\n        '&, &:hover': {\n            // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n            backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n            // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n            color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n            [`& .${getStylesRef('icon')}`]: {\n                color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n            },\n        },\n    },\n}));\n\n\nconst data = [\n    { link: 'personalInformation', label: 'Personal Information', icon: <IconUser /> },\n    { link: 'keywords', label: 'Keywords', icon: <IconCircleKey /> },\n    { link: 'profiling', label: 'Profiling', icon: <IconTimeline /> },\n    { link: 'interests', label: 'Interests', icon: <IconPalette /> },\n    { link: 'occupation', label: 'Occupation', icon: <IconBriefcase /> },\n    { link: 'activity', label: 'Activity', icon: <IconComet /> },\n    { link: 'familydetails', label: 'Family Details', icon: <IconFriends /> },\n    { link: 'Financial Information', label: 'Financial Information', icon: <IconReportMoney /> },\n    { link: 'Insurance Details', label: 'Insurance Details  ', icon: <IconCarCrash /> },\n    { link: 'Vehicle', label: 'Vehicle', icon: <IconCar /> },\n    { link: 'Health', label: 'Health', icon: <IconHealthRecognition /> },\n    { link: 'Social Media', label: 'Social Media', icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = ({ opened, setOpened }) => {\n    const { classes, cx } = useStyles();\n    const [active, setActive] = useState('Personal Information');\n    const theme = useMantineTheme();\n\n    const links = data.map((item) => (\n        <NavLink\n            className={cx(classes.link, { [classes.linkActive]: item.label === active })}\n            icon={item.icon}\n            component={Link}\n            variant=\"subtle\"\n            to={item.link}\n            label={item.label}\n            key={item.label}\n            onClick={(event) => {\n                setActive(item.label)\n            }}\n        />\n    ));\n\n    return (\n        <Navbar\n            height={700}\n            // width={{ sm: 300 }}\n            ml={40}\n            p=\"md\"\n            // className={classes.navbar}\n            hiddenBreakpoint=\"sm\"\n            hidden={!opened}\n            width={{ sm: 200, lg: 300 }}\n            withBorder={false}\n        >\n            <Stack>\n                <Card\n                    bg={theme.colorScheme == 'light' ? '#DDE5FF' : ''}\n                    mt={20}\n                >\n                    <Navbar.Section grow>\n                        {links}\n                    </Navbar.Section>\n                </Card>\n\n                <Navbar.Section>\n                    <NavLink icon={<IconArrowNarrowLeft />} component={Link} variant=\"subtle\" to='/' label={'Go Back'} rightSection />\n                </Navbar.Section>\n            </Stack>\n        </Navbar >\n    );\n}\n\nexport default DashboardNavbar","\nconst imageURL = require('./Avid Traveler.png');\nconst baseUrl = window.location.origin;\nconst finalImageUrl = baseUrl + imageURL;\n\nconsole.log(baseUrl,imageURL.default);\n\n\n\n// export default {\n//     [`Avid Traveler`]: new URL('./Avid Traveler.png', import.meta.url).href,\n//     [`Fitness Freak`]: new URL('./Fitness Freak.png', import.meta.url).href,\n//     [`Foodie`]: new URL('./Foodie.png', import.meta.url).href,\n//     [`Sports Fan`]: new URL('./Sports Fan.png', import.meta.url).href,\n//     [`Techie`]: new URL('./Techie.png', import.meta.url).href,\n// }\n\nexport default {\n    [`Avid Traveler`]: \"\",\n    [`Fitness Freak`]: \"\",\n    [`Foodie`]:\"\",\n    [`Sports Fan`]: \"\",\n    [`Techie`]:\"\",\n}\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    {percentage}%\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group>\n        </Paper>\n    );\n}","import { Grid } from '@mantine/core'\nimport assets from './assets'\nimport { StatsCard } from './StatCard'\n\nconst Profiling = () => {\n\n    const assetList = Object.entries(assets)\n    const stats = assetList.map((list) => {\n        const title = list[0]\n        const url = list[1]\n        function getCustomerStats() {\n            const frequency = Math.floor(Math.random() * 16); // A random frequency per month between 0 and 15\n            const maxLastUpdated = Math.floor((1 - frequency / 15) * 30);\n            const lastUpdated = Math.floor(Math.random() * (maxLastUpdated + 1)); // A random value between 0 and maxLastUpdated, representing the number of days ago\n            const maxCompleted = Math.min(Math.floor((30 - lastUpdated) * (frequency / 30) * 100), 100);\n            const percentageCompleted = Math.floor(Math.random() * (maxCompleted + 1)); // A random percentage between 0 and maxCompleted\n\n            return [frequency, percentageCompleted, lastUpdated];\n        }\n\n        const customerStats = getCustomerStats();\n        console.log(customerStats);\n        return (<>\n            <Grid.Col span={4}>\n                <StatsCard title={title} url={url} percentage={customerStats[1]} frequency={customerStats[0]} lastUpdated={customerStats[2]} />\n            </Grid.Col>\n        </>)\n    })\n    return (\n        <>\n            <Grid gutter=\"xl\">\n                {stats}\n            </Grid>\n        </>\n    )\n}\n\nexport default Profiling","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import { Avatar, Card, Center, Container, Divider, Grid, Group, RingProgress, Space, Text } from '@mantine/core'\nimport React, { useEffect, useState } from 'react'\nimport InfoTag from './InfoTag'\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n    const [profile, setProfile] = useState({ ...selectedCustomer.profiling.personal_details })\n    const { profile_completion } = selectedCustomer\n    const { source } = selectedCustomer\n\n    const profileCompletion = (percentage) => {\n        return (\n            <div>\n                <Center>\n                    <RingProgress\n                        mt={50}\n                        size={80}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </div>\n        )\n    }\n    return (\n        <>\n            <Container mt={-80}>\n                <Group grow position='apart'>\n                    <Text mt={70} fw={500}>Basic Details</Text>\n                    <Space h={40} />\n                    <div>\n                        <Space h={40} />\n                        {profileCompletion(profile_completion)}\n                    </div>\n                </Group>\n                <div style={{ marginTop: '-30px' }}>\n                    <InfoTag title={'Picture'} subject={<Avatar radius={'xl'} size='xl' />} />\n                    <Grid gutter=\"xl\" pt={'sm'}>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'First Name'} subject={profile.full_name.split(' ')[0]} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Last Name'} subject={profile.full_name.split(' ')[1]} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Gender'} subject={profile.gender} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Date of birth'} subject={profile.dob} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Age'} subject={profile.age} />\n                        </Grid.Col>\n                    </Grid>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Marital Status'} subject={profile.marital_status} />\n                        </Grid.Col>\n                        <Grid.Col span={4}>\n                            <InfoTag title={'Source'} subject={source} />\n                        </Grid.Col>\n                    </Grid>\n                    <Divider my=\"md\" size={'xs'} color={'#4E70EA'} />\n                    <Text fw={500}>Contact Details</Text>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Email Address'} subject={profile.email} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Alternative Email'} subject={profile.alternate_email} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Mobile Number'} subject={profile.phone_number} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Alternative Mobile Number'} subject={profile.alternate_phone_number} />\n                        </Grid.Col>\n                    </Grid>\n                    <Divider my=\"md\" size={'xs'} color={'#4E70EA'} />\n                    <Text fw={500}>Address</Text>\n                    <Grid gutter=\"xl\">\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Location(city)'} subject={profile.location} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'State'} subject={profile.state} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'PINCODE'} subject={profile.pincode} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Country'} subject={profile.country} />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                            <InfoTag title={'Address Line'} subject={profile.address} />\n                        </Grid.Col>\n                    </Grid>\n                </div>\n            </Container>\n        </>\n    )\n}\n\nexport default PersonalInformation","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button,Badge  } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords ,getKeywords} from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\nconst KeywordsEntry = ({updateKeywordValuesParent }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  const { customerKeywords,keywords,keywordsStatus,customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns,setUnknowns] = useState([])\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id,value,category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id,value,category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n  \n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n  \n  useEffect(() => {\n    if(keywordsStatus == 'success' && customerKeywordsStatus == 'success' ){\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n    \n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [ data,values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n    {keywordsStatus == 'success' && customerKeywordsStatus == 'success' ?\n    <>\n    <MultiSelect\n        data={data}\n        value={values}\n        onChange={(e) => setValue(e)}\n        label=\"Keywords\"\n        searchable\n        searchValue={searchValue}\n        onSearchChange={(event) => handleSearchChange(event)}\n        clearable\n        \n        placeholder=\"Add keywords\"\n        creatable\n        getCreateLabel={(query) => `+ Create ${query}`}\n        onCreate={(query) => {\n          const item = { value: query, label: query };\n          setData((current) => [...current, item]);\n          return item;\n        }}\n      />\n      \n      <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n              key={unknown}\n              variant=\"gradient\"\n              gradient={{ from: 'indigo', to: 'cyan' }}\n            >\n              {unknown}\n            </Badge>\n            ))}\n          </div>\n    </>\n    :<>\n    <p>Please wait.......</p>\n    </>\n    }\n      \n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\nconst Interests = () => {\n    const dispatch = useDispatch()\n    const { status, customerDetails } = useSelector((state) => state.customer);\n    const { customerKeywords,customerKeywordsStatus } = useSelector((state) => state.keyword);\n    const [interests,setInterests] = useState([])\n\n\n    \n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      return { category, values: _.map(values, 'value') };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n  \n  useEffect(() => {\n    if( customerKeywordsStatus == 'success' ){\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n    { customerKeywordsStatus == 'success' ?\n    <>\n      {interests.map((interest) => (\n  <React.Fragment key={interest.category}>\n    <Text fw={700}>{interest.category}</Text>\n    {interest.values.map((value) => (\n      <Badge\n        key={value}\n        variant=\"gradient\"\n        gradient={{ from: 'indigo', to: 'cyan' }}\n      >\n        {value}\n      </Badge>\n    ))}\n  </React.Fragment>\n))}\n    </> :\n    <>Loading interests...</>\n    }\n     \n        \n        </>\n  \n    )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  AppShell,\n  Navbar,\n  Header,\n  Text,\n  MediaQuery,\n  Burger,\n  useMantineTheme,\n  Card,\n  NavLink,\n  Container,\n  LoadingOverlay,\n  TextInput,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  IconAdjustmentsHorizontal,\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconComet,\n  IconFriends,\n  IconHammer,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSearch,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword)\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false)\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  useEffect(() => {\n    if (routesClicked.at(-2) && routesClicked.at(-2) === \"/dashboard/keywords\") {\n\n\n      const updateKeywordPayload = {\n        \"customerId\": customerDetails.id,\n        \"keywordsPayload\": keywordValues\n      }\n\n      setNotification(true)\n      sleep(5000).then(data => setNotification(false))\n\n      dispatch(updateKeywords(updateKeywordPayload))\n\n\n    }\n  }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <AppShell\n        styles={{\n          main: {\n            background:\n              theme.colorScheme === \"dark\" ? theme.colors.dark[8] : \"white\",\n          },\n        }}\n        navbarOffsetBreakpoint=\"sm\"\n        asideOffsetBreakpoint=\"sm\"\n        // fixed\n        navbar={<DashboardNavbar opened={opened} setOpened={setOpened} />}\n        header={\n          <Header\n            height={{ base: 50, md: 70 }}\n            p=\"md\"\n            m={\"md\"}\n            withBorder={false}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                height: \"100%\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\n                <Burger\n                  opened={opened}\n                  onClick={() => setOpened((o) => !o)}\n                  size=\"sm\"\n                  color={theme.colors.gray[6]}\n                  mr=\"xl\"\n                />\n              </MediaQuery>\n\n              <Text\n                variant=\"gradient\"\n                gradient={{ from: \"indigo\", to: \"cyan\", deg: 45 }}\n                sx={{ fontFamily: \"Greycliff CF, sans-serif\" }}\n                ta=\"center\"\n                fz=\"xl\"\n                fw={700}\n                mt={-20}\n              >\n                EAI CRM\n              </Text>\n              <TextInput\n                placeholder=\"Search1\"\n                mb=\"md\"\n                icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n                radius=\"md\"\n                rightSection={\n                  <ActionIcon variant={\"subtle\"}>\n                    <IconAdjustmentsHorizontal />\n                  </ActionIcon>\n                }\n              // value={}\n              // onChange={}\n              />\n              <div>\n                <LightDarkButton />\n              </div>\n            </div>\n          </Header>\n        }\n      >\n        <Container>\n          <Card\n            mt={20}\n            shadow={\"lg\"}\n            bg={theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"\"}\n            radius={\"md\"}\n            mih={510}\n          >\n            <Routes>\n              <Route>\n                <Route\n                  index\n                  element={\n                    <PersonalInformation selectedCustomer={customerDetails} />\n                  }\n                />\n                <Route\n                  path=\"/personalInformation\"\n                  element={\n                    <PersonalInformation selectedCustomer={customerDetails} />\n                  }\n                />\n                <Route path=\"/profiling\" element={<Profiling />} />\n                <Route\n                  path=\"/keywords\"\n                  element={\n                    <KeywordsEntry\n                      submitKeywords={submitKeywords}\n                      updateKeywordValuesParent={updateKeywordValuesParent}\n                    />\n                  }\n                />\n\n                <Route path=\"/interests\" element={<Interests />} />\n                <Route path=\"/occupation\" element={<Occupation />} />\n                <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                <Route path=\"/activity\" element={<Activity />} />\n\n\n              </Route>\n            </Routes>\n          </Card>\n          {showNotification && <>\n            <Notification\n              loading\n              title=\"Background Syncing\"\n              withCloseButton={true}\n              style={{ backgroundColor: \"red !important\" }}\n            >\n              <p style={{ color: \"red\" }}> Uploading latest keywords data onto server</p>\n\n            </Notification>\n\n          </>}\n        </Container>\n\n\n      </AppShell>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    console.log(payload, \"------->\");\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    }\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n    'campaignManagement/fetchRowData',\n    async (_, { getState }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n        const responses = [];\n        let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n        for (const rowKey of Object.keys(state.rows)) {\n            const row = state.rows[rowKey];\n            if (!row.first || !row.second || !row.third) {\n                throw new Error(\"Row has empty/default values. Fetching aborted.\");\n            }\n\n            const body = {\n                information_type: row.first.toLowerCase().split(' ').join('_'),\n                category: row.second.toLowerCase().split(' ').join('_'),\n                value: row.third.toLowerCase().split(' ').join('_')\n            };\n\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            const data = await response.json();\n            const customerIDsForThisRow = data.map(customer => customer.id);\n\n            if (commonCustomerIDs === null) {\n                commonCustomerIDs = new Set(customerIDsForThisRow);\n            } else {\n                commonCustomerIDs = new Set([...commonCustomerIDs].filter(id => customerIDsForThisRow.includes(id)));\n            }\n\n            responses.push({\n                rowKey,\n                figures: commonCustomerIDs.size,\n                customerIDs: [...commonCustomerIDs]\n            });\n        }\n        return responses;\n    }\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n    'campaignManagement/fetchFiguresForRow',\n    async (rowId, { getState }) => {\n        const state = getState().campaignManagement;\n        const row = state.rows[rowId];\n        if (!row || !row.first || !row.second || !row.third) {\n            throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n        }\n\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n        const body = {\n            information_type: row.first.toLowerCase().split(' ').join('_'),\n            category: row.second.toLowerCase().split(' ').join('_'),\n            value: row.third.toLowerCase().split(' ').join('_')\n        };\n\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        });\n\n        const data = await response.json();\n        const customerIDsForThisRow = data.map(customer => customer.id);\n\n        // Retrieve customer IDs from all preceding rows\n        let commonCustomerIDs = customerIDsForThisRow;\n        for (const otherRowId of Object.keys(state.rows)) {\n            if (Number(otherRowId) < Number(rowId)) {\n                const otherRow = state.rows[otherRowId];\n                commonCustomerIDs = commonCustomerIDs.filter(id => otherRow.customerIDs.includes(id));\n            }\n        }\n\n        return { rowId, figures: commonCustomerIDs.length, customerIDs: commonCustomerIDs };\n    }\n);\n\nexport const createCampaign = createAsyncThunk(\n    'campaignManagement/createCampaign',\n    async (_, { getState, rejectWithValue }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n        const body = {\n            name: state.eventName,\n            eventBased: true,\n            triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n            type: \"EMAIL\",\n            recurrenceType: state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n            start: state.tabData.Email.timelineState.startDate,\n            end: state.tabData.Email.timelineState.endDate,\n            templateText: state.tabData.Email.content,\n            customerIDs: state.allCustomerIDs\n        };\n\n        console.log('Publish body', body)\n\n        try {\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            console.log('response', response)\n\n            if (!response.ok) {\n                throw new Error('Failed to create campaign');\n            }\n\n            return response.json();\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst initialState = {\n    isModalOpen: false,\n    dropdownData: {\n        \"Personal Information\": {\n            \"Age\": [\"25-30\", \"31-35\"],\n            \"Gender\": [\"Male\", \"Female\"],\n            \"Marital Status\": [\"Single\", \"Married\"],\n            \"Location\": [\"Delhi\", \"Mumbai\"],\n        },\n        \"Interests\": {},\n        \"Occupation\": '',\n        \"Activity\": '',\n        \"Family Details\": '',\n        \"Financial Information\": '',\n        \"Insurance Details\": '',\n        \"Vehicle\": '',\n        \"Health\": '',\n    },\n    rows: {\n        [Date.now().toString()]: {\n            first: \"\",\n            second: \"\",\n            third: \"\",\n            figures: null,\n            customerIDs: []\n        }\n    },\n    allCustomerIDs: [],\n    selectedCombinations: [],\n    eventName: \"\",\n    eventDate: null,\n    step: 1,\n    activeTab: 'Email',\n    startDate: null,\n    endDate: null,\n    tabData: {\n        Email: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 500\n        },\n        SMS: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 160\n        },\n        Notification: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 250\n        },\n        Whatsapp: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 2000\n        }\n    },\n    radarData: [\n        { count: 120, subject: 'EZ-Auto' },\n        { count: 98, subject: 'Cyberior' },\n        { count: 86, subject: 'Homecare' },\n        { count: 99, subject: 'E-Portal 2.0' },\n        { count: 85, subject: 'EZ-Travel' },\n    ],\n    downloadDataStatus: null,\n    error: null,\n    rowIdsArray: [],\n    loadingStates: {},\n    errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n    name: \"campaignManagement\",\n    initialState,\n    reducers: {\n        toggleModal: (state, action) => {\n            state.isModalOpen = action.payload;\n        },\n        updateDropdownData: (state, action) => {\n            state.dropdownData = action.payload;\n        },\n        updateRows: (state, action) => {\n            state.rows = action.payload;\n            state.rowIdsArray = [];\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        updateSelectedCombinations: (state, action) => {\n            state.selectedCombinations = action.payload;\n        },\n        setCampaignName: (state, action) => {\n            state.campaignName = action.payload;\n        },\n        setEventName: (state, action) => {\n            state.eventName = action.payload;\n        },\n        setEventDate: (state, action) => {\n            state.eventDate = action.payload;\n        },\n        setStep: (state, action) => {\n            state.step = action.payload;\n        },\n        setStartDate: (state, action) => {\n            state.startDate = action.payload;\n        },\n        setEndDate: (state, action) => {\n            state.endDate = action.payload;\n            state.eventDate = action.payload;\n        },\n        setActiveTab: (state, action) => {\n            state.activeTab = action.payload;\n        },\n        updateTabData: (state, action) => {\n            state.tabData = action.payload;\n        },\n        setRadarData: (state, action) => {\n            state.radarData = action.payload;\n        },\n        resetModal: (state) => {\n            state.step = initialState.step;\n            state.campaignName = initialState.campaignName;\n            state.eventName = initialState.eventName;\n            state.activeTab = initialState.activeTab;\n            state.tabData = initialState.tabData;\n            state.eventDate = initialState.eventDate\n        },\n    },\n    extraReducers: {\n        [fetchRowData.pending]: (state) => {\n            state.downloadDataStatus = 'loading';\n        },\n        [fetchRowData.fulfilled]: (state, action) => {\n            state.downloadDataStatus = 'success';\n\n            action.payload.forEach(item => {\n                state.rows[item.rowKey].figures = item.figures;\n                state.rows[item.rowKey].customerIDs = item.customerIDs;\n            });\n\n            state.rowIdsArray = [...new Set([...state.rowIdsArray, ...action.payload.map(item => item.rowKey)])];\n\n            const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n            state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n        },\n        [fetchRowData.rejected]: (state, action) => {\n            state.downloadDataStatus = 'failed';\n            state.error = action.error.message;\n        },\n        [fetchFiguresForRow.pending]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'loading';\n            state.errors[rowId] = null;\n        },\n        [fetchFiguresForRow.fulfilled]: (state, action) => {\n            const { rowId, figures, customerIDs } = action.payload;\n            state.rows[rowId].figures = figures;\n            state.rows[rowId].customerIDs = customerIDs;\n            state.loadingStates[rowId] = 'loaded';\n\n            const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n            if (Number(rowId) === lastRowId) {\n                state.allCustomerIDs = [...customerIDs];\n            }\n        },\n        [fetchFiguresForRow.rejected]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'error';\n            state.errors[rowId] = action.error.message;\n        }\n    }\n});\n\nexport const {\n    toggleModal,\n    updateDropdownData,\n    updateRows,\n    updateSelectedCombinations,\n    setCampaignName,\n    setEventName,\n    setEventDate,\n    setStep,\n    setStartDate,\n    setEndDate,\n    setActiveTab,\n    updateTabData,\n    setRadarData,\n    resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\n    'campaign/fetchData',\n    async () => {\n        const response = {\n            data: [],\n        };\n        return response.data;\n    }\n);\n\nexport const fetchSources = createAsyncThunk(\n    'campaign/fetchSources',\n    async () => {\n        const response = {\n            sources: [],\n        };\n        return response.sources;\n    }\n);\n\nexport const fetchCampaignNames = createAsyncThunk(\n    'campaign/fetchCampaignNames',\n    async () => {\n        const response = {\n            campaignNames: [],\n        };\n        return response.campaignNames;\n    }\n);\n\nconst initialState = {\n    data: [{\n        name: 'Campaign Name 1',\n        contactability: 4000,\n        interested: 3000,\n        converted: 2000,\n        over: 100,\n        total: 7100\n    },\n    {\n        name: 'Campaign Name 2',\n        contactability: 9000,\n        interested: 6500,\n        converted: 4500,\n        over: 300,\n        total: 20300\n    },\n    {\n        name: 'Campaign Name 3',\n        contactability: 5000,\n        interested: 3700,\n        converted: 2500,\n        over: 150,\n        total: 11350\n    },\n    {\n        name: 'Campaign Name 4',\n        contactability: 5500,\n        interested: 4000,\n        converted: 2700,\n        over: 180,\n        total: 12380\n    },\n    {\n        name: 'Campaign Name 5',\n        contactability: 4800,\n        interested: 3400,\n        converted: 2300,\n        over: 120,\n        total: 10620\n    },\n    {\n        name: 'Campaign Name 6',\n        contactability: 4700,\n        interested: 3300,\n        converted: 2200,\n        over: 110,\n        total: 10310\n    },\n    {\n        name: 'Campaign Name 7',\n        contactability: 4600,\n        interested: 3200,\n        converted: 2100,\n        over: 100,\n        total: 10000\n    },\n    ],\n    sources: ['Homecare', 'Cyberior', 'EZ-Auto', 'EZ-Travel', 'E-Portal 2.0'],\n    campaignNames: ['Campaign 1', 'Campaign 2', 'Campaign 3'],\n    status: 'idle',\n    error: null,\n};\n\nconst campaignSlice = createSlice({\n    name: 'campaign',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchData.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(fetchData.fulfilled, (state, action) => {\n                state.status = 'succeeded';\n                if (action.payload && action.payload.length > 0) {\n                    state.data = action.payload;\n                }\n            })\n            .addCase(fetchData.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.error.message;\n            })\n            .addCase(fetchSources.fulfilled, (state, action) => {\n                if (action.payload && action.payload.length > 0) {\n                    state.sources = action.payload;\n                }\n            })\n            .addCase(fetchCampaignNames.fulfilled, (state, action) => {\n                if (action.payload && action.payload.length > 0) {\n                    state.campaignNames = action.payload;\n                }\n            });\n    },\n});\n\nexport default campaignSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n  },\n});","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate , Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate  to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n    Box,\n    Flex,\n    Stack,\n    BackgroundImage,\n    Card,\n    Image,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { Link, redirect, useNavigate } from \"react-router-dom\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport loginImage from './assets/login.png'\nimport eaLogo from './assets/eaLogo.png'\nimport { loginUser } from \"../../redux/authSlice\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappings, getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\n\n\n\n\nexport default function Login() {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n\n\n    const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(loginUser({ email, password }));\n    };\n\n    // useEffect(() => {\n    //     if(status === \"success\" && isLoggedIn){\n    //         dispatch(getAllRolesPermissionsMappings())\n    //     }\n    // },[status,isLoggedIn])\n\n    useEffect(() => {\n        if (status === \"success\" && isLoggedIn) {\n            dispatch(getAllRolesPermissionsMappingsByUser(user._id))\n            navigate(\"/\")\n        }\n    }, [status, navigate])\n\n    return (\n        <>\n            <Box>\n                <Stack>\n                    <Flex>\n                        <Box>\n                            <Paper>\n                                <BackgroundImage\n                                    style={{ width: '500px', height: '550px' }}\n                                    src={loginImage}\n                                    radius={'md'}\n                                    pt={300}\n                                    mt={95}\n                                    ml={69}\n                                >\n                                    <Text\n                                        c={'white'}\n                                        pl={48}\n                                        pr={56}\n                                    >\n                                        <Title>\n                                            Title\n                                        </Title>\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices tristique ligula ac suscipit.\n                                    </Text>\n                                    <Button\n                                        ml={48}\n                                        mb={48}\n                                        mt={30}\n                                    >\n                                        Read More\n                                        <IconArrowRight />\n\n                                    </Button>\n                                </BackgroundImage>\n                            </Paper>\n                        </Box>\n                        <Box>\n                            <Center>\n                                <Stack>\n                                    <Paper>\n                                        <Image\n                                            width={150}\n                                            height={128}\n                                            src={eaLogo}\n                                            mt={95}\n                                            mr={313}\n                                            ml={288}\n                                            mb={33}\n                                        />\n                                    </Paper>\n                                    <Card\n                                        shadow={'md'}\n                                        ml={50}\n                                        mr={100}\n                                        bg={'#F1F5F9'}\n                                    >\n\n                                        <TextInput label=\"Email\" placeholder=\"you@ea.in\" value={email} required onChange={(e) => setEmail(e.target.value)} />\n                                        <PasswordInput\n                                            label=\"Password\"\n                                            placeholder=\"Your password\"\n                                            required\n                                            mt=\"md\"\n                                            onChange={(e) => setPassword(e.target.value)}\n                                        />\n                                        <Group position=\"apart\" mt=\"lg\">\n                                            <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                                            {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                                        </Group>\n\n                                        <Button fullWidth mt=\"xl\" type=\"submit\" onClick={handleSubmit}>\n                                            {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                                        </Button>\n\n                                        {status === \"failed\" && <Text style={{ color: \"red\", padding: \"10px\" }}>Incorrect credentials !</Text>}\n\n                                    </Card>\n                                </Stack>\n                            </Center>\n                        </Box>\n                    </Flex>\n                </Stack>\n            </Box>\n        </>\n        // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n        // </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from 'react';\nimport { ScrollArea, Table, Title, Button } from '@mantine/core';\nimport { ActionIcon } from '@mantine/core';\nimport { IconSettings } from '@tabler/icons-react';\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n\n    const { classes, cx } = useStyles();\n    const [scrolled, setScrolled] = useState(false);\n\n    const rows = initialData.map((row) => (\n        <tr key={row.id}>\n            <td>{row.rolename}</td>\n            <td>{row.permissionname}</td>\n            <td>{row.username}</td>\n            <td><Button color='green' size=\"xs\" compact>{row.isactive}</Button></td>\n            <td>{row.created_at}</td>\n            <td><ActionIcon variant=\"light\"><IconSettings size=\"1rem\" /></ActionIcon></td>\n        </tr>\n    ));\n\n    return (\n        <>\n            <Title style={{ padding: \"10px\" }} order={4} color=\"blue.5\">{title}</Title>\n            <ScrollArea h={600} onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n                <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n                    <thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n                        <tr>\n                            <th>Role Name</th>\n                            <th>Permission Name</th>\n                            <th>User Email</th>\n                            <th>Status</th>\n                            <th>Created At</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                </Table>\n            </ScrollArea>\n        </>\n\n    );\n}\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React, { useState } from 'react';\nimport { ScrollArea, Table, Title, Button } from '@mantine/core';\nimport { ActionIcon } from '@mantine/core';\nimport { IconSettings } from '@tabler/icons-react';\n\nconst Users = ({ useStyles, initialData, title }) => {\n\n    const { classes, cx } = useStyles();\n    const [scrolled, setScrolled] = useState(false);\n\n    const rows = initialData.map((row) => (\n        <tr key={row.id}>\n            <td>{row.email}</td>\n            <td>{row.role}</td>\n            <td>{row.permissions}</td>\n            <td><Button color='green' size=\"xs\" compact>{row.isactive}</Button></td>\n            <td>{row.created_at}</td>\n            <td><ActionIcon variant=\"light\"><IconSettings size=\"1rem\" /></ActionIcon></td>\n        </tr>\n    ));\n\n    return (\n        <>\n            <Title style={{ padding: \"10px\" }} order={4} color=\"blue.5\">{title}</Title>\n            <ScrollArea h={600} onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n                <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n                    <thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n                        <tr>\n                            <th>Email</th>\n                            <th>Role</th>\n                            <th>Permissions</th>\n                            <th>Status</th>\n                            <th>Created At</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                </Table>\n            </ScrollArea>\n        </>\n\n    );\n}\n\nexport default Users;\n","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconUsersGroup size=\"1rem\" />, color: 'blue', label: 'Users', link: \"users\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import React, { useState } from 'react';\nimport { ScrollArea, Table, Title } from '@mantine/core';\nimport { ActionIcon } from '@mantine/core';\nimport { IconSettings } from '@tabler/icons-react';\n\nconst RolesVsPermissions = ({ useStyles, initialData, title }) => {\n\n    const { classes, cx } = useStyles();\n    const [scrolled, setScrolled] = useState(false);\n\n    const rows = initialData.map((row) => (\n        <tr key={row.id}>\n            <td>{row.name}</td>\n            <td>{row.permissions}</td>\n            <td>{row.created_at}</td>\n            <td><ActionIcon variant=\"light\"><IconSettings size=\"1rem\" /></ActionIcon></td>\n        </tr>\n    ));\n\n    return (\n        <>\n            <Title style={{ padding: \"10px\" }} order={4} color=\"blue.5\">{title}</Title>\n\n            <ScrollArea h={600} onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n                <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n                    <thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n                        <tr>\n                            <th>Name</th>\n                            <th>Permissions</th>\n                            <th>Created At</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                </Table>\n            </ScrollArea>\n        </>\n\n    );\n}\n\nexport default RolesVsPermissions;\n","import React from 'react'\nimport { Modal, Text, Select, Button, TextInput } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst CreatePermissionModal = ({ isModalOpen, handleModalClose, handleCreatePermission, permissionName, setPermissionName }) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Create permissions\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <TextInput\n                placeholder=\"Permssion name\"\n                label=\"Enter Permission name\"\n                value={permissionName}\n                onChange={(event) => setPermissionName(event.target.value)}\n                withAsterisk\n            />\n\n            <Button\n                className=\"mt-4\"\n                onClick={handleCreatePermission} >\n                Create\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default CreatePermissionModal","import React, { useState } from 'react';\nimport { ScrollArea, Table, Title, Button } from '@mantine/core';\nimport { ActionIcon } from '@mantine/core';\nimport { IconSettings } from '@tabler/icons-react';\n\nconst Permissions = ({ useStyles, initialData, title }) => {\n\n    const { classes, cx } = useStyles();\n    const [scrolled, setScrolled] = useState(false);\n\n    const rows = initialData.map((row) => (\n        <tr key={row.id}>\n            <td>{row.name}</td>\n            <td><Button color='green' size=\"xs\" compact>{row.isactive}</Button></td>\n            <td>{row.created_at}</td>\n            <td><ActionIcon variant=\"light\"><IconSettings size=\"1rem\" /></ActionIcon></td>\n        </tr>\n    ));\n\n    return (\n        <>\n            <Title style={{ padding: \"10px\" }} order={4} color=\"blue.5\">{title}</Title>\n\n            <ScrollArea h={600} onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n                <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n                    <thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n                        <tr>\n                            <th>Name</th>\n                            <th>Status</th>\n                            <th>Created At</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                </Table>\n            </ScrollArea>\n        </>\n\n    );\n}\n\nexport default Permissions;\n","import { Modal, Navbar, AppShell, MultiSelect, Button, ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport { useEffect, useState } from \"react\"\nimport LightDarkButton from \"../../components/LightDarkButton\"\nimport { getCustomers, getCustomersProfileCompleteness } from \"../../redux/customerSlice\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n    getAllRolesPermissionsMappings, getUserRolesPermissionsByMapping,\n    getAllPermissionsByRole, getAllPermissions, createRolesPermissionMapping, getAllRolesPermissionsMappingsByUser, getAllRoles\n} from \"../../redux/rolesPermissionSlice\"\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from '@mantine/core';\nimport { Select } from '@mantine/core';\nimport { getUsers } from \"../../redux/authSlice\"\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\"\nimport AssignPermissionModal from \"./AssignPermissionModal\"\nimport PermissionRoleMappings from \"./PermissionRoleMapping\"\nimport MainHeader from \"../../components/MainHeader/MainHeader\"\nimport Users from \"./Users\"\nimport { MainLinks } from \"./_mainLink\"\nimport RolesVsPermissions from \"./RolesVsPermissions\"\nimport { useLocation } from \"react-router-dom\"\nimport CreatePermissionModal from \"./CreatePermissionModal\"\nimport Permissions from \"./Permissions\"\nimport { createPermission } from \"../../redux/rolesPermissionSlice\"\n\n\nfunction formatDate(dateString) {\n    const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\n\nconst Acl = () => {\n    const useStyles = createStyles((theme) => ({\n        header: {\n            position: 'sticky',\n            top: 0,\n            backgroundColor: \"#c2c2c2\",\n            transition: 'box-shadow 150ms ease',\n\n            '&::after': {\n                content: '\"\"',\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                bottom: 0,\n                borderBottom: `${rem(1)} solid ${theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[2]\n                    }`,\n            },\n        },\n\n        scrolled: {\n            boxShadow: theme.shadows.sm,\n        },\n    }));\n\n\n    const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] = useState(false);\n    const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] = useState(false);\n\n    const [selectedUser, setSelectedUser] = useState(null)\n    const [selectedRole, setSelectedRole] = useState(null)\n    const [selectedPermission, setSelectedPermission] = useState(null)\n    const [selectedUserRoleName, setSelectedUserRoleName] = useState(null)\n    const [permissionName, setPermissionName] = useState(\"\")\n    const location = useLocation();\n\n    const dispatch = useDispatch();\n\n    const { rolesPermissionsStatus, rolesPermissions, userPermissions,\n        permissionsByRole, permissionsByRoleStatus, permissions, roles } = useSelector(state => state.rolePermission);\n    const { user, users } = useSelector(state => state.auth)\n\n    const userPermissionsDict = {};\n\n    for (const permission of rolesPermissions) {\n        const { userId, permission: { name } } = permission;\n\n        if (userPermissionsDict.hasOwnProperty(userId)) {\n            userPermissionsDict[userId].push(name);\n        } else {\n            userPermissionsDict[userId] = [name];\n        }\n    }\n\n    const allUserIds = users.map(user => user.id);\n\n    for (const userId of allUserIds) {\n        if (!userPermissionsDict.hasOwnProperty(userId)) {\n            userPermissionsDict[userId] = [];\n        }\n    }\n\n    console.log(location.pathname);\n\n    useEffect(() => {\n        dispatch(getAllRolesPermissionsMappings());\n        dispatch(getUsers())\n        dispatch(getAllPermissions())\n        dispatch(getAllRoles())\n    }, []);\n\n    useEffect(() => {\n        if (selectedUser !== null) {\n            const userBySelectedId = users.find(x => x.id === selectedUser);\n            if (userBySelectedId.role) {\n                setSelectedRole(userBySelectedId.role.id)\n                setSelectedUserRoleName(userBySelectedId.role.name)\n            }\n        }\n    }, [selectedUser])\n\n\n    useEffect(() => {\n        if (selectedRole !== null) {\n            dispatch(getAllPermissionsByRole(selectedRole));\n        }\n        setSelectedPermission(null)\n    }, [selectedRole])\n\n\n    const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n        id: data.id,\n        rolename: data.role.name,\n        permissionname: data.permission.name,\n        username: data.user.email,\n        isactive: data.isActive ? \"active\" : \"inactive\",\n        created_at: formatDate(data.created_at),\n    }));\n\n    const users_initialData = Object.keys(userPermissionsDict).length > 0 && users.map((data) => ({\n        id: data.id,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        permissions: userPermissionsDict[data.id].join(\" / \"),\n        created_at: formatDate(data.created_at)\n    }))\n\n\n    users.map(d => {\n        console.log(userPermissionsDict[d.id]);\n    })\n\n    const roles_initialData = roles.map((data) => ({\n        id: data.id,\n        name: data.name,\n        permissions: (data.defaultPermissions.map((permission) => permission.name)).join(\" / \"),\n        created_at: formatDate(data.created_at)\n    }))\n\n    const permissions_initialData = permissions.map((data) => ({\n        id: data.id,\n        name: data.name,\n        isactive: \"active\",\n        created_at: formatDate(data.created_at)\n    }))\n\n\n    const handleAddRoleClick = () => {\n        setIsAssignPermissionModalOpen(true);\n    };\n\n    const handleAddPermissionModal = () => {\n        setCreatePermissionModalOpen(true)\n    }\n\n\n    const handleModalClose = () => {\n        if (isAssignPermissionModalOpen) {\n            setIsAssignPermissionModalOpen(false)\n            setSelectedUser(null)\n            setSelectedRole(null)\n            setSelectedPermission(null)\n\n        }\n        if (isCreatePermissionModalOpen) {\n            setCreatePermissionModalOpen(false)\n        }\n\n    }\n\n\n    const handleAssignPermission = () => {\n        dispatch(createRolesPermissionMapping({\n            \"roleId\": selectedRole,\n            \"permissionId\": selectedPermission,\n            \"userId\": selectedUser\n        }))\n        dispatch(getAllRolesPermissionsMappings())\n        handleModalClose()\n\n    }\n\n    const handleCreatePermission = () => {\n        dispatch(createPermission({\n            \"name\": permissionName\n        }))\n        dispatch(getAllPermissions())\n        handleModalClose()\n    }\n\n\n\n\n    if (rolesPermissionsStatus === 'loading' || !users || users.length === 0) {\n        return (\n            <LoadingOverlay visible overlayBlur={2}\n                loaderProps={{\n                    size: 'xl',\n                    variant: 'dots'\n                }}\n            />\n        )\n    }\n    else {\n        return (\n            <>\n                <AppShell\n                    padding=\"md\"\n                // header={<MainHeader />}\n                >\n                    <div style={{ display: 'flex', }}>\n                        {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n                        <span style={{ flexGrow: '1', width: '100px' }}>\n                            <div style={{ padding: '10px' }}>\n                                <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px', marginTop: '-65px' }}>\n                                    <span>\n                                        <Title pl={5}>ACL</Title>\n                                    </span>\n                                    <span>\n                                        <Container>\n                                            <Navbar height={600} p=\"xs\" width={{ base: 300 }} ml={40}>\n\n                                                <Navbar.Section mt=\"xs\">\n                                                    {/* <User /> */}\n                                                </Navbar.Section>\n                                                <Navbar.Section grow mt=\"md\">\n                                                    <MainLinks />\n                                                </Navbar.Section>\n\n                                            </Navbar>\n                                            <Center>\n                                                <Flex mt={5}>\n                                                    {location.pathname === \"/acl/permissionrolemappings\" && (\n                                                        <>\n                                                            <Button\n                                                                className=\"mt-4\"\n                                                                onClick={handleAddRoleClick}\n                                                                compact\n                                                            >\n                                                                Assign permissions\n                                                            </Button>\n\n                                                            <AssignPermissionModal\n                                                                isModalOpen={isAssignPermissionModalOpen}\n                                                                handleModalClose={handleModalClose}\n                                                                selectedUserRoleName={selectedUserRoleName}\n                                                                selectedUser={selectedUser}\n                                                                setSelectedUser={setSelectedUser}\n                                                                permissions={permissions}\n                                                                selectedPermission={selectedPermission}\n                                                                setSelectedPermission={setSelectedPermission}\n                                                                rolesPermissions={rolesPermissions}\n                                                                handleAssignPermission={handleAssignPermission}\n                                                                users={users}\n                                                                selectedRole={selectedRole}\n                                                            />\n\n                                                        </>\n\n                                                    )\n                                                    }\n\n                                                    {location.pathname === \"/acl/permissions\" && (\n                                                        <>\n                                                            <Button\n                                                                className=\"mt-4\"\n                                                                onClick={handleAddPermissionModal}\n                                                                compact\n                                                            >\n                                                                Create permissions\n                                                            </Button>\n\n                                                            <CreatePermissionModal\n                                                                isModalOpen={isCreatePermissionModalOpen}\n                                                                handleCreatePermission={handleCreatePermission}\n                                                                handleModalClose={handleModalClose}\n                                                                permissionName={permissionName}\n                                                                setPermissionName={setPermissionName}\n                                                            />\n                                                        </>\n                                                    )}\n\n\n\n                                                </Flex>\n                                            </Center>\n                                        </Container>\n                                    </span>\n                                </div>\n                                <div>\n                                    <Routes>\n                                        <Route>\n                                            <Route\n                                                index\n                                                element={\n                                                    <>Default page</>\n                                                }\n                                            />\n                                            <Route\n                                                path=\"/permissionrolemappings\"\n                                                element={\n                                                    <PermissionRoleMappings\n                                                        title={\"acl/permissions vs users\"}\n                                                        useStyles={useStyles}\n                                                        initialData={rolesPermissionsMapping_initialData} />\n                                                }\n                                            />\n                                            <Route\n                                                path=\"/users\"\n                                                element={\n                                                    <Users title={\"acl/users\"} useStyles={useStyles} initialData={users_initialData} />\n                                                }\n                                            />\n                                            <Route\n                                                path=\"/rolesvspermissions\"\n                                                element={\n                                                    <RolesVsPermissions title={\"acl/roles vs permissions\"}\n                                                        useStyles={useStyles} initialData={roles_initialData} />\n                                                }\n                                            />\n                                            <Route\n                                                path=\"/permissions\"\n                                                element={\n                                                    <Permissions title={\"acl/all permissions\"}\n                                                        useStyles={useStyles} initialData={permissions_initialData} />\n                                                }\n                                            />\n                                        </Route>\n                                    </Routes>\n                                </div>\n                            </div>\n                        </span>\n                    </div>\n                </AppShell>\n            </>\n        )\n    }\n}\n\nexport default Acl;","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFiguresForRow } from '../../../../redux/campaignManagementSlice';\nimport { ActionIcon, Flex, Loader, Select } from '@mantine/core';\nimport { IconChevronDown, IconExclamationMark, IconRefresh, IconTrash, IconX } from '@tabler/icons-react';\n\nconst DropdownRow = ({ row, rowId, handleDropdownChange, dropdownData, selectedCombinations, deleteRow }) => {\n\n    const figures = row.figures;\n    const secondDropdownOptions = row.first ? Object.keys(dropdownData[row.first]) : [];\n\n    const thirdDropdownOptions = row.second\n        ? dropdownData[row.first][row.second].filter(option => {\n            const currentCombination = {\n                first: row.first,\n                second: row.second,\n                third: row.first === \"Interests\" ? option.value : option\n            };\n\n            const isSelectedCombination = selectedCombinations.some(selected =>\n                selected.first === currentCombination.first &&\n                selected.second === currentCombination.second &&\n                (row.first === \"Interests\" ? selected.third.value : selected.third) === currentCombination.third\n            );\n\n            const isSelectedInCurrentRow = selectedCombinations.some(selected =>\n                selected.rowId === rowId &&\n                selected.first === currentCombination.first &&\n                selected.second === currentCombination.second &&\n                (row.first === \"Interests\" ? selected.third.value : selected.third) === currentCombination.third\n            );\n\n            return !isSelectedCombination || isSelectedInCurrentRow;\n        })\n        : [];\n\n    const dispatch = useDispatch();\n    const loadingState = useSelector(state => state.campaignManagement.loadingStates[rowId]);\n    const error = useSelector(state => state.campaignManagement.errors[rowId]);\n\n    const handleRefresh = () => {\n        dispatch(fetchFiguresForRow(rowId));\n    };\n\n    const handleThirdDropdownChange = (value) => {\n        handleDropdownChange(rowId, \"third\", value);\n\n        dispatch(fetchFiguresForRow(rowId, value));\n    };\n\n    return (\n        <React.Fragment>\n            <div className='col-12 col-lg-3'>\n                <div className='mb-4 col-6 col-lg-12'>\n                    <Select\n                        data={Object.keys(dropdownData).map(option => ({\n                            value: option,\n                            label: typeof option === 'string' ? option : null\n                        }))}\n                        searchable\n                        rightSection={<IconChevronDown size=\"1rem\" />}\n                        rightSectionWidth={30}\n                        styles={{ rightSection: { pointerEvents: 'none' }, input: { cursor: 'pointer' } }}\n                        value={row.first}\n                        placeholder=\"Select Information Type\"\n                        onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n                    />\n                </div>\n            </div>\n            <div className='col-12 col-lg-3'>\n                <div className='mb-4 col-6 col-lg-12'>\n                    <Select\n                        data={secondDropdownOptions.map(option => ({\n                            value: option,\n                            label: typeof option === 'string' ? option : null\n                        }))}\n                        searchable\n                        rightSection={<IconChevronDown size=\"1rem\" />}\n                        rightSectionWidth={30}\n                        styles={{ rightSection: { pointerEvents: 'none' }, input: { cursor: 'pointer' } }}\n                        value={row.second}\n                        placeholder=\"Select Category\"\n                        onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n                    />\n                </div>\n            </div>\n            <div className='col-12 col-lg-3'>\n                <div className='mb-4 col-6 col-lg-12'>\n                    <Select\n                        data={thirdDropdownOptions.map(option =>\n                            typeof option === 'string'\n                                ? { value: option, label: option }\n                                : option\n                        )}\n                        searchable\n                        rightSection={<IconChevronDown size=\"1rem\" />}\n                        rightSectionWidth={30}\n                        styles={{ rightSection: { pointerEvents: 'none' }, input: { cursor: 'pointer' } }}\n                        value={row.third}\n                        placeholder=\"Select Sub-category\"\n                        onChange={handleThirdDropdownChange}\n                    />\n                </div>\n            </div>\n            <div className='col-12 col-lg-1'>\n                <ActionIcon onClick={() => deleteRow(rowId)} color='red' variant='subtle' size={'sm'}>\n                    <IconTrash />\n                </ActionIcon>\n            </div>\n            <div className='col-12 col-lg-2'>\n                {loadingState === 'loading' && <Loader />}\n                {loadingState === 'error' &&\n                    <Flex>\n                        <ActionIcon c={'red'}><IconExclamationMark /></ActionIcon>\n                        <ActionIcon c={'blue'} onClick={handleRefresh}><IconRefresh /></ActionIcon>\n                    </Flex>\n                }\n                {loadingState !== 'loading' && loadingState !== 'error' && (\n                    <>\n                        <Flex>\n                            <ActionIcon>\n                                {figures !== null ? figures : '-'}\n                            </ActionIcon>\n                            <ActionIcon c={'blue'} onClick={handleRefresh}><IconRefresh /></ActionIcon>\n                        </Flex>\n                    </>\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default DropdownRow;","import { useDispatch, useSelector } from \"react-redux\";\nimport { setEventName, setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst Step1 = () => {\n    const dispatch = useDispatch();\n    const eventName = useSelector(state => state.campaignManagement.eventName);\n    const eventDate = useSelector(state => state.campaignManagement.eventDate);\n\n    return (\n        <>\n            <div className='' style={{ minHeight: '100px' }}>\n                <Flex justify={'space-around'}>\n                    <Stack>\n                        <label className='date-inputs-control'>Event Name</label>\n                        <TextInput\n                            id=\"eventName\"\n                            w={400}\n                            name=\"eventName\"\n                            placeholder=\"Event Name\"\n                            type=\"text\"\n                            value={eventName}\n                            onChange={evt => dispatch(setEventName(evt.currentTarget.value))}\n                        />\n                    </Stack>\n                    <Stack >\n                        <label className='date-inputs-control'>Event date</label>\n                        {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n                        <DatePickerInput\n                            value={eventDate}\n                            popoverProps={{ withinPortal: true }}\n                            rightSection={<ActionIcon variant=\"subtle\"><IconCalendar size=\"1.1rem\" stroke={1.5} /></ActionIcon>}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                            w={200}\n                        />\n                    </Stack>\n                </Flex>\n            </div>\n        </>\n    );\n};\n\nexport default Step1;","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nfunction CustomDate({ setSelectedDate }) {\n\n    return (\n        <DatePickerInput\n            popoverProps={{ withinPortal: true }}\n            rightSection={<ActionIcon variant=\"subtle\"><IconCalendar size=\"1.1rem\" stroke={1.5} /></ActionIcon>}\n            label={<Text fw={'light'}>Date</Text>}\n            placeholder={<Text>Select Date</Text>}\n            onChange={(e) => setSelectedDate(e)}\n            mx=\"auto\"\n            maw={400}\n        />\n    );\n}\n\nexport default CustomDate","import { useEffect, useRef, useState } from \"react\";\nimport { TimeInput } from '@mantine/dates'\nimport { ActionIcon, Text, rem } from \"@mantine/core\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n    const ref = useRef(null);\n\n    const pickerControl = (\n        <ActionIcon variant=\"subtle\" color=\"gray\" onClick={() => ref.current?.showPicker()}>\n            <IconClock style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n        </ActionIcon>\n    );\n\n    return (\n        <TimeInput\n            value={(timeSelected ? timeSelected : '')}\n            placeholder=\"Select Time\"\n            label={<Text fw={'light'}>Time</Text>}\n            ref={ref}\n            rightSection={pickerControl}\n            onChange={(e) => setSelectedTime(e.target.value)} />\n    );\n}\n\nexport default CustomTime\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { ActionIcon, Badge, Box, Button, Card, Divider, Flex, Stack, rem } from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setEventDate } from '../../../../redux/campaignManagementSlice';\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n\n    const dispatch = useDispatch();\n    const eventDate = useSelector(state => state.campaignManagement.eventDate);\n\n    const defaultStartDate = new Date();\n\n    const defaultResults = {\n        startDate: defaultStartDate,\n        endDate: null,\n        recurrence: {\n            type: '',\n            recurrenceTime: '',\n            dailyFrequency: 1,\n            weeklyDays: [],\n            monthlyDay: '',\n            monthlyFrequency: '',\n            monthlyWeekday: '',\n            customDateTimes: []\n        }\n    };\n\n    const [startDate, setStartDate] = useState(initialState.startDate || defaultStartDate);\n    const [results, setResults] = useState(initialState.recurrence ? initialState : defaultResults);\n    console.log('results', results)\n\n    const weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    const monthlyFrequencies = ['first', 'second', 'third', 'fourth'];\n\n    const [showDropdown, setShowDropdown] = useState(false);\n    const [customDateTimes, setCustomDateTimes] = useState(results.recurrence.customDateTimes || []);\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [selectedTime, setSelectedTime] = useState(null);\n    const [recurrenceTime, setRecurrenceTime] = useState(results.recurrence.recurrenceTime || '');\n\n    const addCustomDate = () => {\n        if (selectedDate && selectedTime) {\n            const newCustomDateTime = { date: selectedDate, time: selectedTime };\n            setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n            setResults(prevState => ({\n                ...prevState,\n                recurrence: {\n                    ...prevState.recurrence,\n                    customDateTimes: [...prevState.recurrence.customDateTimes, newCustomDateTime]\n                }\n            }));\n            setSelectedDate(null);\n            setSelectedTime(null);\n            setShowDropdown(false);\n        }\n    };\n\n    useEffect(() => {\n        if (recurrenceTime) {\n            setResults(prevState => ({\n                ...prevState,\n                recurrence: {\n                    ...prevState.recurrence,\n                    recurrenceTime: recurrenceTime\n                }\n            }));\n        }\n    }, [recurrenceTime]);\n\n    useEffect(() => {\n        if (selectedDate && selectedTime) {\n            addCustomDate();\n        }\n    }, [selectedDate, selectedTime]);\n\n    useEffect(() => {\n        onUpdate(results);\n    }, [results]);\n\n    const handleDateChange = (field, date) => {\n        setResults(prevState => ({\n            ...prevState,\n            [field]: date,\n        }));\n\n        if (field === \"startDate\") {\n            setStartDate(date);\n        } else if (field === \"endDate\") {\n            dispatch(setEventDate(date));\n        }\n    };\n\n    const removeCustomDate = (indexToRemove) => {\n        const updatedCustomDateTimes = customDateTimes.filter((_, index) => index !== indexToRemove);\n        setCustomDateTimes(updatedCustomDateTimes);\n\n        setResults(prevState => ({\n            ...prevState,\n            recurrence: {\n                ...prevState.recurrence,\n                customDateTimes: updatedCustomDateTimes\n            }\n        }));\n    };\n\n    const handleRecurrenceChange = (field, value) => {\n        setResults(prevState => ({\n            ...prevState,\n            recurrence: {\n                ...prevState.recurrence,\n                [field]: value,\n            },\n        }));\n    };\n\n    const handleDailyFrequencyChange = (value) => {\n        let updatedValue = value !== 'Everyday' ? parseInt(value, 10) : 'Everyday';\n        handleRecurrenceChange('dailyFrequency', updatedValue);\n    };\n\n    const handleWeeklyDaysChange = (day) => {\n        const updatedDays = results.recurrence.weeklyDays.includes(day)\n            ? results.recurrence.weeklyDays.filter(d => d !== day)\n            : [...results.recurrence.weeklyDays, day];\n\n        handleRecurrenceChange('weeklyDays', updatedDays);\n    };\n\n    const handleMonthlyDayAndFrequencyChange = (field, value) => {\n        handleRecurrenceChange(field, parseInt(value, 10));\n    };\n\n    return (\n        <div>\n            <Divider mb={10} />\n            <div className='col-12 col-lg-12'>\n                <div className='time-title mb-20'>\n                    <Flex justify={'space-between'}>\n                        <h1>\n                            Timeline\n                        </h1>\n                        <Badge\n                            styles={{ root: { cursor: 'pointer' } }}\n                            onClick={() => onApplyForAll(results)}>Apply For All</Badge>\n                    </Flex>\n                </div>\n            </div>\n\n            <Flex>\n                <div className='col-6 col-lg-6'>\n                    <div className='mb-40'>\n                        <label htmlFor=\"startDate\" className='date-inputs-control'>Start date</label>\n                        <DatePicker className='form-control  inputs-control form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            selected={startDate}\n                            onChange={(date) => handleDateChange(\"startDate\", date)}\n                            minDate={new Date()} />\n                    </div>\n                </div>\n\n                <div className='col-6 col-lg-6'>\n                    <div className='mb-40'>\n                        <label htmlFor=\"endDate\" className='date-inputs-control'>End date</label>\n                        <DatePicker className='form-control  inputs-control form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            selected={eventDate}\n                            onChange={(date) => handleDateChange(\"endDate\", date)}\n                            minDate={new Date()} />\n                    </div>\n                </div>\n            </Flex>\n            <div className='col-12 col-lg-12'>\n                <div className='time-title mb-20'>\n                    <h1>Recurrence</h1>\n                </div>\n            </div>\n            <div className='row'>\n                <div className='col-12 col-lg-4'>\n                    <div className='mb-25 mt-10'>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input check-recu\" type=\"radio\" name=\"recurrence\" id=\"daily\" value=\"Daily\"\n                                checked={results.recurrence.type === 'Daily'} onChange={e => handleRecurrenceChange('type', e.target.value)} />\n                            <label className=\"form-check-label check-label\" htmlFor=\"daily\">Daily</label>\n                        </div>\n                    </div>\n                    <div className='mb-25'>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input check-recu\" type=\"radio\" name=\"recurrence\" id=\"weekly\" value=\"Weekly\"\n                                checked={results.recurrence.type === 'Weekly'} onChange={e => handleRecurrenceChange('type', e.target.value)} />\n                            <label className=\"form-check-label check-label\" htmlFor=\"weekly\">Weekly</label>\n                        </div>\n                    </div>\n                    <div className='mb-25'>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input check-recu\" type=\"radio\" name=\"recurrence\" id=\"monthly\" value=\"Monthly\"\n                                checked={results.recurrence.type === 'Monthly'} onChange={e => handleRecurrenceChange('type', e.target.value)} />\n                            <label className=\"form-check-label check-label\" htmlFor=\"monthly\">Monthly</label>\n                        </div>\n                    </div>\n                    <div className='mb-25'>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input check-recu\" type=\"radio\" name=\"recurrence\" id=\"custom\" value=\"Custom\"\n                                checked={results.recurrence.type === 'Custom'} onChange={e => handleRecurrenceChange('type', e.target.value)} />\n                            <label className=\"form-check-label check-label\" htmlFor=\"custom\">Custom</label>\n                        </div>\n                    </div>\n                </div>\n                <div className='col-12 col-lg-8'>\n                    {results.recurrence.type === 'Daily' && (\n                        <div className='col-6 col-lg-3'>\n                            <div className='mb-20 mt-10'>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input check-recu \" type=\"radio\" name=\"dailyOption\" id=\"everyNDaysOption\" value=\"EveryNDays\"\n                                        onChange={() => handleRecurrenceChange('dailyFrequency', 'EveryNDays')} />\n                                    <label className=\"form-check-label check-label chkinput\" htmlFor=\"everyNDaysOption\">\n                                        Every <span><input id=\"dailyFrequencyInput\" name=\"dailyFrequencyInput\" type=\"number\" min=\"1\" className='day-no' value={results.recurrence.dailyFrequency} onChange={e => handleDailyFrequencyChange(e.target.value)} /></span>day(s)\n                                    </label>\n                                </div>\n                            </div>\n                            <div className='mb-20'>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input check-recu\" type=\"radio\" name=\"dailyOption\" id=\"everydayOption\" value=\"Everyday\"\n                                        checked={results.recurrence.dailyFrequency === 'Everyday'}\n                                        onChange={() => handleRecurrenceChange('dailyFrequency', 'Everyday')} />\n                                    <label className=\"form-check-label check-label\" htmlFor=\"everydayOption\">\n                                        Everyday\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                    <div className='row'>\n                        {results.recurrence.type === 'Weekly' && weekDays.map(day => (\n                            <div className='col-2 col-lg-4'>\n                                <div key={day} className='mb-15 dis-inline web-dis-inline web-mb-0'>\n                                    <div className=\"form-check from-mrg-rtl mb-15\">\n                                        <input\n                                            className=\"form-check-input check-recu\"\n                                            type=\"checkbox\"\n                                            value={day}\n                                            checked={results.recurrence.weeklyDays.includes(day)}\n                                            onChange={() => handleWeeklyDaysChange(day)}\n                                        />\n                                        <label className=\"form-check-label check-label\">\n                                            {day}\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    {results.recurrence.type === 'Monthly' && (\n                        <div className='col-6 col-lg-9'>\n                            <div className='clearfix'>\n                                <div className='mb-25 mt-10'>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input check-recu\" type=\"radio\" name=\"monthlyOption\" id=\"monthlyOption1\" />\n                                        <label className=\"form-check-label check-label chkinput\">\n                                            Day <input\n                                                type=\"number\"\n                                                className='day-no'\n                                                onChange={e => handleMonthlyDayAndFrequencyChange('monthlyDay', e.target.value)}\n                                            />\n                                            of every <input\n                                                type=\"number\"\n                                                className='day-no'\n                                                onChange={e => handleMonthlyDayAndFrequencyChange('monthlyFrequency', e.target.value)}\n                                            /> month(s)\n                                        </label>\n                                    </div>\n                                </div>\n\n                                <div className='mb-25 mt-10'>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input check-recu\" type=\"radio\" name=\"monthlyOption\" id=\"monthlyOption2\" />\n                                        <label className=\"form-check-label check-label chkinput\" htmlFor=\"monthlyOption2\">\n                                            Day <input type=\"number\" className='day-no' />\n                                            of every\n                                            <span className='mrg-ltr'>\n                                                <select className=\"form-select dropday\" onChange={e => handleRecurrenceChange('monthlyFrequency', e.target.value)}>\n                                                    {monthlyFrequencies.map(freq => <option key={freq} value={freq}>{freq}</option>)}\n                                                </select>\n                                            </span>\n                                            <span className='mrg-ltr mrg-rtl'>\n                                                <select className=\"form-select dropday\" onChange={e => handleRecurrenceChange('monthlyWeekday', e.target.value)}>\n                                                    {weekDays.map(day => <option key={day} value={day}>{day}</option>)}\n                                                </select>\n                                            </span> of every month(s)\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {\n                        results.recurrence.type !== 'Custom' &&\n                        (\n                            results.recurrence.type === 'Daily'\n                            || results.recurrence.type === 'Weekly'\n                            || results.recurrence.type === 'Monthly'\n                        )\n                        &&\n                        (\n                            <Box w={100}>\n                                <CustomTime setSelectedTime={setRecurrenceTime} timeSelected={recurrenceTime} />\n                            </Box>\n                        )\n                    }\n                    {results.recurrence.type === 'Custom' && (\n                        <div>\n                            <Flex wrap={\"wrap\"}>\n                                <Flex mr={5} wrap={'wrap'}>\n                                    {customDateTimes.map((item, index) => (\n                                        <Badge\n                                            rightSection={\n                                                <ActionIcon\n                                                    size=\"xs\"\n                                                    color=\"blue\"\n                                                    radius=\"xl\"\n                                                    variant=\"transparent\"\n                                                    onClick={() => removeCustomDate(index)} // Add this onClick event here\n                                                >\n                                                    <IconX size={rem(10)} />\n                                                </ActionIcon>\n                                            }\n                                            size=\"lg\"\n                                            mr={5}\n                                            mb={5}\n                                            key={index}\n                                        >\n                                            {formatDateTime(item.date, item.time)}\n                                        </Badge>\n                                    ))}\n                                </Flex>\n                                <Stack>\n                                    <Badge\n                                        bg={'white'}\n                                        c={'gray'}\n                                        styles={{ root: { borderWidth: '1px', borderColor: 'gray', } }}\n                                        leftSection={<ActionIcon size={rem(20)}><IconPlus /></ActionIcon>}\n                                        rightSection={<ActionIcon><IconChevronDown /></ActionIcon>}\n                                        onClick={() => setShowDropdown(!showDropdown)}>Add More</Badge>\n                                    {showDropdown && (\n                                        <Box>\n                                            <Box shadow=\"lg\" w={200}>\n                                                <CustomDate setSelectedDate={setSelectedDate} />\n                                                <CustomTime setSelectedTime={setSelectedTime} timeSelected={selectedTime} />\n                                            </Box>\n                                        </Box>\n                                    )}\n                                </Stack>\n                            </Flex>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Timeline;","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from '@mantine/tiptap';\nimport { useEditor } from '@tiptap/react';\nimport Highlight from '@tiptap/extension-highlight';\nimport StarterKit from '@tiptap/starter-kit';\nimport Underline from '@tiptap/extension-underline';\nimport TextAlign from '@tiptap/extension-text-align';\nimport Superscript from '@tiptap/extension-superscript';\nimport SubScript from '@tiptap/extension-subscript';\nimport { useEffect } from 'react';\nimport DOMPurify from \"dompurify\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly }) => {\n    const editor = useEditor({\n        extensions: [\n            StarterKit,\n            Underline,\n            Link,\n            Superscript,\n            SubScript,\n            Highlight,\n            TextAlign.configure({ types: ['heading', 'paragraph'] }),\n        ],\n        content: initialContent.content,\n        onUpdate: ({ editor }) => {\n            onChange(editor.getHTML());\n        }\n    });\n\n    useEffect(() => {\n        // editor?.setOptions({ content: initialContent })\n        const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n        editor?.commands.insertContent(sanitizedContent)\n        console.log('Effect')\n    }, [initialContent.file]);\n\n    return (\n        <RichTextEditor\n            editor={editor}\n            readOnly={readOnly}\n            styles={{\n                root: {\n                    border: 'none',\n                    position: 'relative'\n                },\n                control: {\n                    backgroundColor: 'transparent',\n                    border: 'none',\n                },\n                controlsGroup: {\n                    position: 'relative'\n                },\n                content: {\n                    backgroundColor: 'transparent',\n                    overflow: 'auto',\n                    maxHeight: '210px',\n                },\n                toolbar: {\n                    backgroundColor: 'transparent',\n                }\n            }}\n        >\n            <RichTextEditor.Toolbar sticky stickyOffset={60}>\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.Bold />\n                    <RichTextEditor.Italic />\n                    <RichTextEditor.Underline />\n                    <RichTextEditor.Strikethrough />\n                    <RichTextEditor.ClearFormatting />\n                    <RichTextEditor.Highlight />\n                    <RichTextEditor.Code />\n                </RichTextEditor.ControlsGroup>\n\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.H1 />\n                    <RichTextEditor.H2 />\n                    <RichTextEditor.H3 />\n                    <RichTextEditor.H4 />\n                </RichTextEditor.ControlsGroup>\n\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.Blockquote />\n                    <RichTextEditor.Hr />\n                    <RichTextEditor.BulletList />\n                    <RichTextEditor.OrderedList />\n                    <RichTextEditor.Subscript />\n                    <RichTextEditor.Superscript />\n                </RichTextEditor.ControlsGroup>\n\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.Link />\n                    <RichTextEditor.Unlink />\n                </RichTextEditor.ControlsGroup>\n\n                <RichTextEditor.ControlsGroup>\n                    <RichTextEditor.AlignLeft />\n                    <RichTextEditor.AlignCenter />\n                    <RichTextEditor.AlignJustify />\n                    <RichTextEditor.AlignRight />\n                </RichTextEditor.ControlsGroup>\n            </RichTextEditor.Toolbar>\n\n            <RichTextEditor.Content />\n        </RichTextEditor>\n    );\n};\n\nexport default WysiwygEditor;","import \"./Whatsapp.css\";\nimport eaLogo from '../../../Login/assets/eaLogo.png'\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport { IconArrowAutofitLeft, IconArrowLeft, IconPhone, IconSend, IconSendOff, IconVideo } from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n    console.log('Sanitized', sanitizedContent)\n    return (\n        <div className=\"europ-assistance\">\n            <div className=\"frame\">\n                <div className=\"be-a-part-of-IPL-wrapper\">\n                    <p className=\"be-a-part-of-IPL\" dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n                </div>\n                <div className=\"group\">\n                    <div className=\"overlap-group\">\n                        <div className=\"div\">Book now</div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"overlap\">\n                <div className=\"text-wrapper-2\">Europ Assistance India</div>\n                {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n                <ActionIcon size={rem(13)} mt={17} c={'white'}><IconArrowLeft /></ActionIcon>\n                <div className=\"img-wrapper\">\n                    <img className=\"img\" alt=\"Img\" src={eaLogo} />\n                </div>\n                <div className=\"div-wrapper\">\n                    <div className=\"text-wrapper-3\">7:01 PM</div>\n                </div>\n                <div className=\"group-2\">\n                    {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n                    <Flex ml={10} mt={-1} >\n                        <ActionIcon size={rem(13)} c={'white'}><IconVideo /></ActionIcon>\n                        <ActionIcon size={rem(13)} c={'white'}><IconPhone /></ActionIcon>\n                    </Flex>\n                    <div className=\"three-dots\">\n                        <div className=\"ellipse\" />\n                        <div className=\"ellipse-2\" />\n                        <div className=\"ellipse-3\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"group-3\">\n                <div className=\"overlap-2\">\n                    {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n                    <div className=\"text-wrapper-4\">Type a message</div>\n                </div>\n                <div className=\"imagevector-wrapper\">\n                    {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from './FileUploader';\nimport {\n    setActiveTab,\n    updateTabData\n} from '../../../../redux/campaignManagementSlice';\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport './Step2.css'\n\nconst Step2 = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n    const [previewMode, setPreviewMode] = useState(false);\n\n    const enterPreviewMode = () => {\n        setPreviewMode(true);\n    };\n\n    const exitPreviewMode = () => {\n        setPreviewMode(false);\n    };\n\n    const handleTextInputWysiwyg = (content) => {\n        const updatedTabData = {\n            ...tabData,\n            [activeTab]: {\n                ...tabData[activeTab],\n                content: content,\n                characterCount: content.length\n            }\n        };\n        dispatch(updateTabData(updatedTabData));\n    };\n\n    const handleTimelineUpdate = (newState) => {\n        const updatedTabData = {\n            ...tabData,\n            [activeTab]: {\n                ...tabData[activeTab],\n                timelineState: newState\n            }\n        };\n        console.log('updatedTabData', updateTabData)\n        dispatch(updateTabData(updatedTabData));\n    };\n\n    const handleApplyForAll = (currentTimelineState) => {\n        const updatedTabData = { ...tabData };\n        ['Email', 'SMS', 'Notification', 'Whatsapp'].forEach(tab => {\n            updatedTabData[tab] = {\n                ...tabData[tab],\n                timelineState: currentTimelineState\n            };\n        });\n        dispatch(updateTabData(updatedTabData));\n        showNotification({\n            type: 'default',\n            title: 'Timelines applied',\n            message: 'Timelines have been added for all modes',\n        });\n    };\n\n    return (\n        <>\n            {previewMode && <div className=\"overlay\"></div>}\n            <div className={`modal-body modal-pad`}>\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n                            <div className=\"dis-block nav-pills me-3\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n                                {['Email', 'SMS', 'Notification', 'Whatsapp'].map(tab => (\n                                    previewMode ? (\n                                        <Box ml={-15}>\n                                            <Button\n                                                className=\"preview-container\"\n                                                key={tab}\n                                                onClick={() => dispatch(setActiveTab(tab))}\n                                                c={activeTab === tab ? \"#524EE1\" : \"white\"}\n                                                bg={activeTab === tab ? \"white\" : \"#524EE1\"}\n                                                sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                                size=\"lg\"\n                                                fullWidth\n                                                style={{ marginBottom: '10px' }}\n                                            >\n                                                <Text size={'xs'}>{tab}</Text>\n                                            </Button>\n                                        </Box>\n                                    ) : (\n                                        <button\n                                            key={tab}\n                                            className={`nav-link d-block mb-2 ${previewMode && activeTab !== tab ? 'tab-preview-container' : 'preview-container'} ${activeTab === tab ? 'active' : ''}`}\n                                            onClick={() => dispatch(setActiveTab(tab))}\n                                        >\n                                            {tab}\n                                        </button>\n                                    )\n                                ))}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-10\">\n                            <div className=\"preview-container tab-content tab-content-bg\">\n                                {['Email', 'SMS', 'Notification', 'Whatsapp'].map(tab => (\n                                    <div\n                                        key={tab}\n                                        className={` tab-pane fade ${activeTab === tab ? 'show active' : ''}`}\n                                        id={`v-pills-${tab}`}\n                                        role=\"tabpanel\"\n                                    >\n                                        <Box >\n                                            {\n                                                previewMode ? (\n                                                    <Box h={250} >\n                                                        <Preview content={tabData[tab]?.content} tab={tab} />\n                                                    </Box>\n                                                ) : (\n                                                    <Box h={290} mt={-40}>\n                                                        <WysiwygEditor\n                                                            key={activeTab}\n                                                            initialContent={tabData[tab]}\n                                                            onChange={handleTextInputWysiwyg}\n                                                        />\n                                                    </Box>\n                                                )\n                                            }\n                                        </Box>\n                                        <Flex direction={\"row-reverse\"} mt={20}>\n                                            <div className=\"character-count\">\n                                                {tabData[activeTab].characterCount}/{tabData[activeTab].charLimit}\n                                            </div>\n                                            {!previewMode && (\n                                                <Box ml={5}>\n                                                    {tabData[activeTab].characterCount > tabData[activeTab].charLimit &&\n                                                        <div className=\"character-limit-error\">Character limit exceeded!</div>\n                                                    }\n                                                </Box>\n                                            )}\n                                        </Flex>\n                                        <Box mt={'-4%'} >\n                                            {!previewMode ? (\n                                                <Button\n                                                    bg={'#524EE1'}\n                                                    sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                                    onClick={enterPreviewMode}>\n                                                    Preview\n                                                </Button>\n                                            ) : (\n                                                <Button\n                                                    bg={'#524EE1'}\n                                                    sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                                    onClick={exitPreviewMode}>\n                                                    OK\n                                                </Button>\n                                            )}\n                                        </Box>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Box className={`${!previewMode ? 'tab-preview-container' : ''}`}>\n                        {!previewMode && (\n                            <>\n                                <Flex direction={'row-reverse'} mr={-100} mt={-20}>\n                                    <FileUploader key={activeTab} />\n                                </Flex>\n                                <Timeline\n                                    key={activeTab}\n                                    onUpdate={handleTimelineUpdate}\n                                    onApplyForAll={handleApplyForAll}\n                                    initialState={tabData[activeTab]?.timelineState || {}}\n                                />\n                            </>\n                        )}\n                    </Box>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Step2;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport { Button, Center, Modal } from \"@mantine/core\";\nimport './CampaignModal.css';\nimport { toggleModal, setStep, setEventName, createCampaign } from \"../../../../redux/campaignManagementSlice\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst CampaignModal = () => {\n    const dispatch = useDispatch();\n    const { isModalOpen, eventName, step } = useSelector(state => state.campaignManagement);\n    const campaignManagementState = useSelector(state => state.campaignManagement);\n\n    const [showConfirmation, setShowConfirmation] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const handlePublish = () => {\n        dispatch(createCampaign())\n            .then(res => {\n                if (createCampaign.fulfilled.match(res)) {\n                    showNotification({\n                        type: 'default',\n                        title: `Campaign Published`,\n                        message: `The campaign has been published successfully`,\n                        color: 'green'\n                    });\n                    dispatch(toggleModal(false));\n                } else {\n                    showNotification({\n                        type: 'error',\n                        title: `Campaign Failed`,\n                        message: res.error.message,\n                        color: 'red'\n                    });\n          setLoading(false)\n                }\n            });\n    };\n\n    const handleClose = () => {\n        showNotification({\n            type: 'default',\n            title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n            message: `Click Run campaign to run the campaign again`,\n        });\n        dispatch(toggleModal(false));\n    };\n\n    const handleNext = () => {\n        if (!eventName.trim()) {\n            showNotification({\n                type: 'warning',\n                title: `Please provide an event name`,\n                message: `Event name is required to proceed.`,\n            });\n        } else {\n            dispatch(setStep(2));\n        }\n    };\n\n    const handlePublishConfirmation = () => {\n        setShowConfirmation(true);\n    };\n\n    const handleConfirmedPublish = () => {\n        setLoading(true);\n        // setShowConfirmation(false);\n        handlePublish();\n    };\n\n    return (\n        <>\n            <Modal\n                opened={isModalOpen}\n                withCloseButton={false}\n                closeOnClickOutside={false}\n                size={'xl'}\n                styles={{ content: { 'overflow': 'visible' } }}\n            >\n                <div className=\"modal-header modal-header-wrap\">\n                    <div className='modeltitle'>\n                        <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n                        <h2>Step: {step}/2</h2>\n                        {step === 2 && <IconArrowLeft cursor={'pointer'} onClick={() => dispatch(setStep(1))} />}\n                    </div>\n                    <button type=\"button\" className=\"btn-close\" onClick={handleClose} aria-label=\"Close\"></button>\n                </div>\n\n                <div>\n                    {step === 1 ? (\n                        <Step1\n                            eventName={eventName}\n                            setEventName={event => dispatch(setEventName(event))}\n                        />\n                    ) : (\n                        <div>\n                            <Step2 />\n                        </div>\n                    )}\n                </div>\n\n                <div>\n                    {step === 1 ? (\n                        <Center>\n                            <Button\n                                bg={'#524EE1'}\n                                sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                onClick={handleNext}>\n                                Next\n                            </Button>\n                        </Center>\n                    ) : (\n                        <Center>\n                            <Button\n                                bg={'#524EE1'}\n                                sx={{ '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                                onClick={handlePublishConfirmation}>\n                                Publish\n                            </Button>\n                        </Center>\n                    )}\n                </div>\n            </Modal >\n\n            <Modal\n                opened={showConfirmation}\n                withCloseButton={true}\n                onClose={() => setShowConfirmation(false)}\n                title=\"Confirm Campaign Publish\"\n                size={'md'}\n            >\n                <p>Are you sure you want to publish this campaign?</p>\n                <Center>\n                    <Button\n                        bg={'#524EE1'}\n                        sx={{ marginRight: '10px', '&:hover': { backgroundColor: 'white', color: '#524EE1' } }}\n                        onClick={handleConfirmedPublish}\n                        disabled={loading}\n                    >\n                        {loading ? \"Publishing...\" : \"Yes, Publish\"}\n                    </Button>\n                    <Button\n                        variant=\"outline\"\n                        onClick={() => setShowConfirmation(false)}\n                    >\n                        No, Go back\n                    </Button>\n                </Center>\n            </Modal>\n        </>\n    );\n}\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from 'react-redux';\nimport CampaignModal from './CampaignModal';\nimport { resetModal, fetchRowData, toggleModal } from '../../../../redux/campaignManagementSlice';\nimport { showNotification } from '@mantine/notifications';\n\nconst ButtonGroup = () => {\n    const dispatch = useDispatch();\n    const downloadDataStatus = useSelector(state => state.campaignManagement.downloadDataStatus);\n    const isModalOpen = useSelector(state => state.campaignManagement.isModalOpen);\n    const allCustomerIDs = useSelector(state => state.campaignManagement.allCustomerIDs); // <-- Add this line\n\n    const handleOpenModal = () => {\n        if (allCustomerIDs.length === 0) {\n            showNotification({\n                title: `Error!`,\n                message: `No customers have been selected. Please ensure atleast one customer`,\n                color: 'red'\n            });\n            return;\n        }\n        dispatch(toggleModal(true));\n        dispatch(resetModal());\n        showNotification({\n            title: `Success!`,\n            message: `Campaign initiated against customers in pool.`,\n            color: 'green',\n        });\n    };\n\n    const handleDownloadData = () => {\n        dispatch(fetchRowData());\n        if (downloadDataStatus === 'loading') {\n            showNotification({\n                title: `Fetching Datasets`,\n                message: `Please wait while the data is being fetched`,\n                color: 'blue'\n            });\n        } else if (downloadDataStatus === 'success') {\n            showNotification({\n                title: `Success!`,\n                message: `Data fetched successfully!`,\n                color: 'green',\n            });\n        } else if (downloadDataStatus === 'failed') {\n            showNotification({\n                title: `Error!`,\n                message: `Failed to fetch data. Please try again.`,\n                color: 'red',\n            });\n        }\n    };\n\n    return (\n        <div className='row web-pt-0 pt-5 web-mb-25'>\n            <div className='col-12 col-lg-6 web-mb-20'>\n                <button\n                    type='button'\n                    className='btn datebtn'\n                    onClick={handleDownloadData}\n                >\n                    Download Data\n                </button>\n            </div>\n            <div className='col-12 col-lg-6'>\n                <button\n                    type='button'\n                    className='btn runcamp'\n                    onClick={handleOpenModal}\n                >\n                    Run Campaign\n                </button>\n                {isModalOpen && <CampaignModal isOpen={isModalOpen} closeModal={() => toggleModal(false)} />}\n            </div>\n        </div>\n    );\n};\n\nexport default ButtonGroup;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectRadarData } from '../../../../redux/campaignManagementSlice';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, ResponsiveContainer } from 'recharts';\n\nconst RadarLinear = () => {\n    const radarData = useSelector(selectRadarData);\n\n    const updatedData = radarData.map(item => ({\n        ...item,\n        subject: `${item.subject} \\n ${item.count}`,\n    }));\n\n    const CustomizedAxisTick = (props) => {\n        const { x, y, payload } = props;\n        const text = payload.value.split('\\n');\n\n        return (\n            <g transform={`translate(${x},${y})`}>\n                {text.map((value, index) => (\n                    <text key={index} x={0} y={index * 5} dy={index === 0 ? -5 : 5} textAnchor=\"middle\" fill=\"#666\">\n                        {value}\n                    </text>\n                ))}\n            </g>\n        );\n    };\n\n    return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n                <Radar name=\"Customer Campaign\" dataKey=\"count\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n            </RadarChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default RadarLinear;","import { useDispatch, useSelector } from 'react-redux';\nimport { setRadarData, selectRadarData } from '../../../../redux/campaignManagementSlice';\nimport RadarLinear from './RadarLinear';\nimport ButtonGroup from './ButtonGroup';\n\nconst Demographic = () => {\n    const dispatch = useDispatch();\n    const radarData = useSelector(selectRadarData);\n    const allCustomerIDs = useSelector(state => state.campaignManagement.allCustomerIDs);\n\n    const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n    const handleDownload = () => {\n        const baseTotal = 18247000;\n        const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n        const desiredTotal = baseTotal + randomAdjustment;\n\n        let randomizedData = radarData.map(item => {\n            let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n            return { ...item, count: randomCount };\n        });\n\n        // Adjusting the values to ensure the total is close to the desired value\n        const currentTotal = randomizedData.reduce((acc, curr) => acc + curr.count, 0);\n        const difference = desiredTotal - currentTotal;\n        if (difference !== 0) {\n            randomizedData[0].count += difference;\n        }\n\n        dispatch(setRadarData(randomizedData));\n    };\n\n    return (\n        <div className='col-12 col-lg-4'>\n            <div className='dem-grapic clearfix'>\n                <div className='dem-title mb-4'>\n                    <h1>Total Demographic</h1>\n                </div>\n                <div className='fullwidth mb-2 mt-5'>\n                    <RadarLinear />\n                </div>\n                <div className='row mt-2'>\n                    <div className='col-12 col-lg-12 text-center mb-2'>\n                        <span className='total-numb pe-2'>\n                            {/* {totalCount.toLocaleString('en-IN')} */}\n                        </span>\n                        <span className='total-users'>{allCustomerIDs.length} Users matching your criteria</span>\n                    </div>\n                    {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n                    <ButtonGroup />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Demographic;","import { ActionIcon, Box, Flex, Select, Text, Title } from '@mantine/core';\nimport { IconChevronDown } from '@tabler/icons-react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LabelList } from 'recharts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchData, fetchSources, fetchCampaignNames } from '../../../../redux/campaignSlice';\n\nconst BarStackedView = () => {\n    const dispatch = useDispatch();\n\n    const data = useSelector((state) => state.campaign.data);\n    const sources = useSelector((state) => state.campaign.sources);\n    const campaignNames = useSelector((state) => state.campaign.campaignNames);\n    const status = useSelector((state) => state.campaign.status);\n    const error = useSelector((state) => state.campaign.error);\n\n    useEffect(() => {\n        if (status === 'idle') {\n            dispatch(fetchData());\n            dispatch(fetchSources());\n            dispatch(fetchCampaignNames());\n        }\n    }, [status, dispatch]);\n\n    return (\n        <>\n            <Box p={30} h={500} w={'100%'} >\n                <Title c={'#4e70ea'}>Other Campaign Comparison</Title>\n                <Box>\n                    <Flex>\n                        <Select\n                            maw={320}\n                            mx=\"auto\"\n                            label={<Text c={'dimmed'}>Campaign(s)</Text>}\n                            data={['All', ...campaignNames]}\n                            transitionProps={{ transition: 'pop-top-left', duration: 80, timingFunction: 'ease' }}\n                            withinPortal\n                            rightSection={<ActionIcon><IconChevronDown /></ActionIcon>}\n                        />\n                        <Select\n                            maw={320}\n                            mx=\"auto\"\n                            label={<Text c={'dimmed'}>Source(s)</Text>}\n                            data={sources}\n                            transitionProps={{ transition: 'pop-top-left', duration: 80, timingFunction: 'ease' }}\n                            withinPortal\n                            rightSection={<ActionIcon><IconChevronDown /></ActionIcon>}\n                        />\n                    </Flex>\n                </Box>\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart\n                        width={500}\n                        height={300}\n                        data={data}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 20,\n                            bottom: 5,\n                        }}\n                        maxBarSize={60}\n                    >\n                        <CartesianGrid strokeLinecap=\"3\" horizontalCoordinatesGenerator={(props) => props.height > 250 ? [75, 150, 225] : [100, 200]} vertical={false} />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis\n                            label={{ value: 'No. of Customers', angle: -90, position: 'insideLeft', offset: -4 }}\n                        />\n                        <Tooltip />\n                        <Legend iconType='circle' verticalAlign='top' align='right' offset={-10} />\n                        <Bar dataKey=\"contactability\" stackId=\"a\" fill=\"#8334f8\" />\n                        <Bar dataKey=\"interested\" stackId=\"a\" fill=\"#883538\" />\n                        <Bar dataKey=\"converted\" stackId=\"a\" fill=\"#8884d8\" />\n                        <Bar dataKey=\"over\" stackId=\"a\" fill=\"#82ca9d\">\n                            <LabelList position={'top'} />\n                        </Bar>\n\n                    </BarChart>\n                </ResponsiveContainer>\n            </Box>\n        </>\n    );\n};\n\nexport default BarStackedView;","import React, { useEffect } from 'react';\nimport DropdownRow from './DropdownRow';\nimport ButtonGroup from './ButtonGroup';\nimport '../../_customer-Profile.scss';\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getKeywords } from '../../../../redux/keywordSlice';\nimport { IconPlus } from '@tabler/icons-react';\nimport { ActionIcon, Box, Flex, Group, Text } from '@mantine/core';\nimport { toggleModal, updateDropdownData, updateRows, updateSelectedCombinations } from '../../../../redux/campaignManagementSlice';\nimport Demographic from './Demographic';\nimport BarStackedView from '../ViewCampaigns/BarStackedCampaign';\n\nconst Analysis = () => {\n    const dispatch = useDispatch();\n\n    const {\n        isModalOpen,\n        dropdownData,\n        rows,\n        selectedCombinations\n    } = useSelector(state => state.campaignManagement);\n\n    useEffect(() => {\n        dispatch(getKeywords());\n    }, [dispatch]);\n\n    const keywords = useSelector(state => state.keyword.keywords);\n    console.log(keywords, keywords)\n    const keywordsStatus = useSelector(state => state.keyword.keywordsStatus);\n\n    if (keywordsStatus === 'loading') {\n        console.log('loading...')\n    }\n\n    if (keywordsStatus === 'failed') {\n        console.log('Error getting keywords')\n    }\n\n    useEffect(() => {\n        if (keywordsStatus === 'success') {\n            let updatedDropdownData = { ...dropdownData.Interests };\n\n            keywords.forEach(keyword => {\n                const updatedCategory = updatedDropdownData[keyword.category]\n                    ? [...updatedDropdownData[keyword.category], { label: keyword.value, value: keyword.id }]\n                    : [{ label: keyword.value, value: keyword.id }];\n\n                updatedDropdownData = {\n                    ...updatedDropdownData,\n                    [keyword.category]: updatedCategory\n                };\n            });\n\n            const finalDropdownData = {\n                ...dropdownData,\n                Interests: updatedDropdownData\n            };\n\n            dispatch(updateDropdownData(finalDropdownData));\n        }\n    }, [keywordsStatus, keywords]);\n\n    const handleDropdownChange = (rowId, dropdown, value) => {\n        const updatedRows = { ...rows };\n        updatedRows[rowId] = {\n            ...updatedRows[rowId],\n            [dropdown]: value\n        };\n\n        let updatedCombinations = [...selectedCombinations];\n\n        if (dropdown === \"first\") {\n            updatedRows[rowId].second = \"\";\n            updatedRows[rowId].third = \"\";\n        } else if (dropdown === \"second\") {\n            updatedRows[rowId].third = \"\";\n        } else if (dropdown === \"third\") {\n            let thirdValue;\n            if (updatedRows[rowId].first === \"Interests\") {\n                thirdValue = dropdownData[updatedRows[rowId].first][updatedRows[rowId].second].find(opt => opt.value === value);\n            } else {\n                thirdValue = value;\n            }\n\n            updatedCombinations = updatedCombinations.filter(combination => combination.rowId !== rowId);\n\n            updatedCombinations.push({\n                rowId,\n                first: updatedRows[rowId].first,\n                second: updatedRows[rowId].second,\n                third: thirdValue\n            });\n        }\n\n        dispatch(updateRows(updatedRows));\n        dispatch(updateSelectedCombinations(updatedCombinations));\n    };\n\n    const addRow = () => {\n        const newRow = {\n            [Date.now().toString()]: {\n                first: \"\",\n                second: \"\",\n                third: \"\"\n            }\n        };\n        dispatch(updateRows({ ...rows, ...newRow }));\n    };\n\n    const deleteRow = (rowId) => {\n        const updatedRows = { ...rows };\n        delete updatedRows[rowId];\n\n        const updatedSelectedCombinations = selectedCombinations.filter(combination => combination.rowId !== rowId);\n\n        dispatch(updateRows(updatedRows));\n        dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n    };\n\n    const handleModalToggle = (status) => {\n        dispatch(toggleModal(status));\n    };\n\n    return (\n        <>\n            <div className='col-xs-12 col-lg-12'>\n                <div className='chart-bx mb-5'>\n                    <div className='row'>\n                        <div className='col-12 col-lg-8'>\n                            <div className='col-12 col-lg-12 mb-3'>\n                                <Flex justify={'space-between'}>\n                                    <div className='bx-title mb-2 dis-inline'>\n                                        <h1>Customer Profile Analysis</h1>\n                                    </div>\n                                    <div className='pl-90'>\n                                        <Group onClick={addRow} style={{ cursor: 'pointer' }}>\n                                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                                <IconPlus color='#4E70EA' />\n                                            </ActionIcon>\n                                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                                        </Group>\n                                    </div>\n                                </Flex>\n                            </div>\n                            <div className='row' style={{ maxHeight: '250px', overflowY: 'scroll' }}>\n                                <div className='col-12 col-lg-3'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Select Information Type</h1>\n                                    </div>\n                                </div>\n                                <div className='col-12 col-lg-3'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Select Category</h1>\n                                    </div>\n                                </div>\n                                <div className='col-12 col-lg-3'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Select Sub-category</h1>\n                                    </div>\n                                </div>\n                                <div className='col-12 col-lg-1'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Delete</h1>\n                                    </div>\n                                </div>\n                                <div className='col-12 col-lg-2'>\n                                    <div className='select-title mb-3'>\n                                        <h1>Figures</h1>\n                                    </div>\n                                </div>\n                                {Object.entries(rows).map(([rowId, rowData]) => (\n                                    <DropdownRow\n                                        key={rowId}\n                                        row={rowData}\n                                        rowId={rowId}\n                                        handleDropdownChange={handleDropdownChange}\n                                        dropdownData={dropdownData}\n                                        selectedCombinations={selectedCombinations}\n                                        deleteRow={deleteRow}\n                                    />\n                                ))}\n                            </div>\n                            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n                        </div>\n                        <Demographic />\n                    </div>\n                </div>\n            </div>\n            <Box h={1000} w={'100%'}>\n                <BarStackedView />\n            </Box>\n        </>\n    );\n}\n\nexport default Analysis;","import { ActionIcon, Avatar, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport { useEffect, useState } from \"react\"\nimport LightDarkButton from \"../components/LightDarkButton\"\nimport { getCustomers, getCustomersProfileCompleteness } from \"../redux/customerSlice\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Logo from '../components/assets/logo.svg';\n\n\n\nconst MainAppShell = ({ children }) => {\n\n    return (\n        <>\n            <Header height={{ base: 50, md: 70 }} p=\"md\" withBorder={false} m={'md'}>\n                <div style={{ display: 'flex', alignItems: 'center', height: '100%', justifyContent: 'space-between' }}>\n                    <Avatar radius=\"xl\" src={Logo} />\n                    <Flex justify={'space-between'}>\n                        <Center>\n                            <LightDarkButton />\n                            <Avatar ml={10} radius={'xl'} src={null} alt=\"no image here\" color=\"indigo\" />\n                        </Center>\n                    </Flex>\n                </div>\n            </Header>\n            <div style={{ display: 'flex', }}>\n                <span>\n                    <Navbar width={{ base: 50 }} height={500} p=\"xs\" withBorder={false}>\n                        <Space h={5} />\n                        <Stack>\n                            <Link to=\"/acl\">\n                                <ActionIcon variant=\"subtle\" c=\"cyan\">\n                                    <IconSettings size=\"1rem\" />\n                                </ActionIcon>\n                            </Link>\n                            <Link to=\"/campaign\">\n                                <ActionIcon variant=\"subtle\" c='cyan'><Icon3dCubeSphere size=\"1rem\" /></ActionIcon>\n                            </Link>\n                            <Link to=\"/customers\">\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconAccessible size=\"1rem\" /></ActionIcon>\n                            </Link>\n                            <Link to=\"/\">\n                                <ActionIcon variant=\"subtle\" c='cyan'><IconLayoutAlignBottom size=\"1rem\" /></ActionIcon>\n                            </Link>\n                            <ActionIcon variant=\"subtle\" c='cyan'><IconAnalyze size=\"1rem\" /></ActionIcon>\n                            <ActionIcon variant=\"gradient\" gradient={{ from: 'black', to: 'indigo' }}><IconArrowBadgeDown size=\"1rem\" /></ActionIcon>\n                        </Stack>\n                    </Navbar>\n                </span>\n                <span style={{ flexGrow: '1', width: '100px' }}>\n                    <div style={{ padding: '10px' }}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px', marginTop: '5px' }}>\n                        </div>\n                        {children}\n                    </div>\n                </span>\n            </div>\n        </>\n    )\n}\n\nexport default MainAppShell;\n","import { Box } from '@mantine/core';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    { name: 'Group A', value: 400 },\n    { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 },\n    { name: 'Group D', value: 200 },\n];\n\nconst COLORS = ['red', '#00C49F', '#FFBB28', 'green'];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n    return (\n        <Box h={300} w={300} >\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart width={400} height={400}>\n                    <Pie\n                        data={data}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        // label={renderCustomizedLabel}\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {data.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                    </Pie>\n                </PieChart>\n            </ResponsiveContainer>\n        </Box>\n    );\n};\n\nexport default CustomPieChart;","import { Box, Center } from \"@mantine/core\";\nimport React from \"react\";\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    ResponsiveContainer,\n    Tooltip,\n    Label,\n    LabelList,\n    Legend\n} from \"recharts\";\n\nconst renderCustomizedLabel = (props) => {\n    const { content, ...rest } = props;\n    return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n    const data = [\n        {\n            name: \"SMS\",\n            Contactability: 250,\n            Interested: 120,\n            Converted: 75,\n            Over: 55\n        },\n        {\n            name: \"Email\",\n            Contactability: 180,\n            Interested: 90,\n            Converted: 40,\n            Over: 20\n        },\n        {\n            name: \"Notification\",\n            Contactability: 230,\n            Interested: 110,\n            Converted: 50,\n            Over: 30\n        },\n        {\n            name: \"Whatsapp\",\n            Contactability: 275,\n            Interested: 135,\n            Converted: 85,\n            Over: 60\n        },\n    ];\n\n    return (\n        <Center>\n            <Box h={400} w={800} p={20} >\n                <ResponsiveContainer height={'100%'} width={\"100%\"}>\n                    <BarChart\n                        layout=\"vertical\"\n                        data={data}\n                    >\n                        <XAxis label={{ value: 'Campaigns', offset: 0 }} type=\"number\" height={55} />\n                        <YAxis\n                            label={{ value: 'Communication Formats', angle: -90, position: 'left', offset: '-15' }}\n                            type=\"category\"\n                            dataKey=\"name\"\n                            width={150}\n                        />\n                        <Tooltip />\n                        <Legend iconType='circle' verticalAlign='top' align='right' offset={-10} />\n                        <Bar dataKey=\"Contactability\" fill=\"#82ca9d\" stackId=\"a\">\n                        </Bar>\n                        <Bar dataKey=\"Interested\" fill=\"#8884d8\" stackId=\"a\">\n                        </Bar>\n                        <Bar dataKey=\"Converted\" fill=\"#883538\" stackId=\"a\">\n                        </Bar>\n                        <Bar dataKey=\"Over\" fill=\"#8334f8\" stackId=\"a\">\n                            <LabelList\n                                position=\"right\"\n                            />\n                        </Bar>\n                    </BarChart>\n                </ResponsiveContainer>\n            </Box>\n        </Center>\n    );\n}\n\nexport default VerticalBarChart;","import React from 'react';\nimport { Box, Card, Center, Flex, Group, ActionIcon, Text, Stack, rem } from '@mantine/core';\nimport { IconBounceLeft, IconCalendar, IconClick, IconClock, IconCone, IconCreditCard, IconSearch, IconView360 } from '@tabler/icons-react';\n\nconst data = [\n    { color: 'green', text: 'No. of Clicks', percentage: '85%', icon: IconClick },\n    { color: 'orange', text: 'No. of Bookings', percentage: '70%', icon: IconCalendar },\n    { color: 'purple', text: 'No. of Payments', percentage: '85%', icon: IconCreditCard },\n    { color: 'pink', text: 'Conversion Rate', percentage: '91%', icon: IconCone },\n    { color: 'yellow', text: 'No. of Views', percentage: '70%', icon: IconView360 },\n    { color: 'teal', text: 'No. of Searchs', percentage: '70%', icon: IconSearch },\n    { color: 'blue', text: 'No. of Sessions', percentage: '63%', icon: IconClock },\n    { color: 'teal', text: 'Bounce Rate', percentage: '13%', icon: IconBounceLeft },\n];\n\nconst TopPanelCards = () => {\n    return (\n        <>\n            {data.map((item, index) => (\n                <Box key={index}>\n                    <Card bg={'#F1F5F9'} radius={'md'} shadow='md'>\n                        <Center>\n                            <Flex>\n                                <Group>\n                                    <ActionIcon size={rem(70)} c={item.color}>\n                                        <item.icon size={rem(70)} />\n                                    </ActionIcon>\n                                    <Stack>\n                                        <Text>{item.text}</Text>\n                                        <Center>\n                                            <Text c={item.color}>{item.percentage}</Text>\n                                        </Center>\n                                    </Stack>\n                                </Group>\n                            </Flex>\n                        </Center>\n                    </Card>\n                </Box>\n            ))}\n        </>\n    );\n}\n\nexport default TopPanelCards;","import { ActionIcon, Box, Card, Center, Flex, Grid, Group, Select, SimpleGrid, Stack, Text, Title, rem } from '@mantine/core'\nimport { IconChevronDown, IconClick, IconTableExport } from '@tabler/icons-react'\nimport React from 'react'\nimport CustomPieChart from './PieChart'\nimport VerticalBarChart from './VerticalBarChart'\nimport TopPanelCards from './TopPanelCards'\n\nconst BoardStats = () => {\n    return (\n        <>\n            <Stack>\n                <Title >Campaign</Title>\n                {/* Pannel 1 */}\n                <Card shadow='lg' radius={'lg'}>\n                    <Flex c={'blue'} justify={'space-between'}>\n                        <Text fw={'bold'}>General</Text>\n                        <Center >\n                            <ActionIcon c={'blue'} ><IconTableExport /></ActionIcon>\n                            <Text fw={'bold'}>Export</Text>\n                        </Center>\n                    </Flex>\n                    <SimpleGrid cols={4}>\n                        <TopPanelCards />\n                    </SimpleGrid>\n                </Card>\n                {/* Pannel 1 End */}\n                <Grid grow>\n                    <Grid.Col span={1}>\n                        {/* Mid Pannel Left Start */}\n                        <Card shadow='lg' radius={'lg'} h={'100%'}>\n                            <Stack>\n                                <Flex c={'blue'} justify={'space-between'}>\n                                    <Text fw={'bold'}>Overview</Text>\n                                    <Center >\n                                        <ActionIcon c={'blue'} ><IconTableExport /></ActionIcon>\n                                        <Text fw={'bold'}>Export</Text>\n                                    </Center>\n                                </Flex>\n                                <Group>\n                                    <Box>\n                                        <Stack>\n                                            <Select\n                                                label={<Text c={'dimmed'}>Source(s)</Text>}\n                                                placeholder=\"All\"\n                                                rightSection={<IconChevronDown size=\"1rem\" />}\n                                                rightSectionWidth={30}\n                                                styles={{ rightSection: { pointerEvents: 'none' } }}\n                                                data={['All', 'Homecare', 'E-Portal 2.0', 'EZ-Auto', 'Cyberior']}\n                                            />\n                                            <Card withBorder>\n                                                <Stack>\n                                                    <Group spacing={'xs'}>\n                                                        <Title size={'md'}>Total</Title><Title size={'md'} c={'blue'}>16,954</Title>\n                                                    </Group>\n                                                    <Flex justify={'space-between'}>\n                                                        <Text c={'red'} fw={'bold'}>• SMS</Text>\n                                                        <Text>1244</Text>\n                                                    </Flex>\n                                                    <Flex justify={'space-between'}>\n                                                        <Text c={'yellow'} fw={'bold'}>• Email</Text>\n                                                        <Text>242</Text>\n                                                    </Flex>\n                                                    <Flex justify={'space-between'}>\n                                                        <Text c={'blue'} fw={'bold'}>• Notification</Text>\n                                                        <Text>2345</Text>\n                                                    </Flex>\n                                                    <Flex justify={'space-between'}>\n                                                        <Text c={'green'} fw={'bold'}>• Whatsapp</Text>\n                                                        <Text>13123</Text>\n                                                    </Flex>\n                                                </Stack>\n                                            </Card>\n                                        </Stack>\n                                    </Box>\n                                    <Box>\n                                        <CustomPieChart />\n                                    </Box>\n                                </Group>\n                            </Stack>\n                        </Card>\n                        {/* Mid Pannel Left End */}\n                    </Grid.Col>\n                    <Grid.Col span={3}>\n                        {/* Mid Pannel Right Start */}\n                        <Card shadow='lg' radius={'lg'}>\n                            <Stack>\n                                <Flex c={'blue'} justify={'space-between'}>\n                                    <Text fw={'bold'}>Communication Formats</Text>\n                                    <Center >\n                                        <ActionIcon c={'blue'} ><IconTableExport /></ActionIcon>\n                                        <Text fw={'bold'}>Export</Text>\n                                    </Center>\n                                </Flex>\n                                <Box>\n                                    <VerticalBarChart />\n                                </Box>\n                            </Stack>\n                        </Card>\n                        {/* Mid Pannel Right End */}\n                    </Grid.Col>\n                </Grid>\n            </Stack>\n        </>\n    )\n}\n\nexport default BoardStats","import { Suspense, lazy, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { setAuth } from \"./redux/authSlice\";\nimport {\n  ColorScheme,\n  ColorSchemeProvider,\n  MantineProvider,\n} from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport Layout from \"./components/Layout\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { ThemeProvider } from \"./ThemeProvider\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n    console.log(userPermissions);\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {hasPermission(userPermissions, \"user view\") ? (\n                <PrivateRoute path=\"/\" element={<BoardStats />} />\n              ) : (\n                <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n              )}\n              {hasPermission(userPermissions, \"user view\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute path=\"/customers\" element={<PermissionDenied />} />\n              )}\n              <Route path=\"/campaign\" element={<Analysis />} />\n              {hasPermission(userPermissions, \"customer dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}