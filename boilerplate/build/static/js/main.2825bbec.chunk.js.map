{"version":3,"sources":["components/Profiling/assets/Avid Traveler.png","i18n.js","utils/sleep.js","redux/customerSlice.js","StyledComponents/StyledTable.jsx","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/assets/index.js","components/Profiling/StatCard.jsx","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Remarks.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","redux/profileAnalysisSlice.js","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","reducers","setCurrentCustomer","state","action","payload","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","response","customer","updatedCustomers","profileCompletion","_objectSpread","profile_completion","actions","StyledTable","_ref","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","_ref2","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","size","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","TableDisplay","customerList","dispatch","useDispatch","navigate","useNavigate","useMemo","accessorFn","_row$profiling","_row$profiling$person","profiling","personal_details","full_name","header","substr","accessorKey","minSize","percentage","RingProgress","thickness","sections","value","label","weight","align","Loader","type","Customers","_useSelector","useSelector","useEffect","LoadingOverlay","visible","overlayBlur","overlayColor","loaderProps","variant","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","fontFamily","fontWeight","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","links","item","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","imageURL","require","baseUrl","window","location","origin","_AvidTraveler$Fitnes","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","ta","fz","Progress","Badge","Profiling","stats","entries","assets","list","customerStats","Math","floor","random","maxLastUpdated","maxCompleted","min","getCustomerStats","Grid","Col","span","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","profile","source","Space","h","split","gender","dob","age","marital_status","Divider","email","alternate_email","phone_number","alternate_phone_number","pincode","country","address","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","_x3","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","KeywordsEntry","updateKeywordValuesParent","setData","_useSelector2","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","unknowns","setUnknowns","transformedData","category","allKeywords","unknownValues","filter","obj","handleSearchChange","debounce","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","unknown","index","gradient","from","Interests","interests","setInterests","groupedByCategory","groupBy","interest","React","Fragment","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","_useState9","_useState10","tempEditData","setTempEditData","headerElements","headerItem","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","toString","bg","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","industry","incomeBracket","Occupation","relationship","phone","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","isArray","Dashboard","submitKeywords","routesClicked","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","auth","isLoggedIn","_useState11","_useState12","useLocation","_useState13","_useState14","pathname","at","updateKeywordPayload","customerId","keywordsPayload","then","Card","Routes","Route","element","path","Notification","loading","withCloseButton","parseJwt","token","base64","replace","jsonPayload","decodeURIComponent","atob","charCodeAt","slice","join","JSON","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_ref5","_callee5","_yield$axios$post3","_context5","t0","_x4","authSlice","user","userStatus","users","setAuth","logout","localStorage","clear","defaults","headers","common","storage","getItem","_id","access_token","_parseJwt","sub","setItem","stringify","_parseJwt2","_authSlice$actions","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","_ref6","createRolesPermissionMapping","_ref7","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_yield$axios$get5","_context9","_x6","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissionsStatus","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","userPermissions","permissionsByRole","getUserRolesPermissionsByMapping","role","push","permission","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","process","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","message","isModalOpen","dropdownData","Date","now","selectedCombinations","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","error","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","fetchData","fetchSources","sources","fetchCampaignNames","campaignNames","campaignSlice","selectedCampaign","selectCampaign","builder","addCase","delivered","totalSent","interested","success","failure","failed","converted","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","profileType","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectHoveredItem","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","API_ENDPOINT","fetchCustomerProfileData","month","customerProfileToolSlice","store","configureStore","reducer","rolePermission","campaignManagementReducer","campaign","campaignReducer","customerProfileTool","customerProfileSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","city","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","isEqual","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Remarks","Textarea","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","_useState15","_useState16","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onClose","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","some","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Modal","opened","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","agentName","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","undefined","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","isActive","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","IconRefresh","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","date","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","time","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","readOnly","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","margin","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","combination","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","hasPermission","permissionName","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","selected_user","updatedUserData","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","chartData","strokeDasharray","CustomerProfileAnalysis","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","profileData","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$textColor","textColor","_ref$text","isHovered","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","handleMouseLeave","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","Root","App","setColorScheme","login","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.2825bbec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory:[],\n  fetchedPofileCompleteness:false,\n  customerServiceHistoryStatus:\"idle\",\n  customerDetailsStatus:\"idle\"\n};\n\nexport const getCustomers = createAsyncThunk(\"customer/getCustomers\", async () => {\n  // await sleep(3000)\n  const { data } = await axios.get(\"/customers\");\n  return data;\n});\n\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\"customer/getCustomersProfileCompleteness\", async () => {\n  await sleep(200)\n  const { data } = await axios.get(\"/profile\");\n  return data;\n});\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  }\n);\n\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  }\n);\n\n\n\nexport const customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.customers.map(e => curr_state_obj[e.id] = e)\n      action.payload.customer_details.map(e => res_obj[e.id] = e)\n      state.customers = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getCustomers.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getCustomerDetails.pending]: (state, action) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload.response.customer;\n    },\n    [getCustomerDetails.rejected]: (state, action) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n   [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion ? action.payload.profileCompletion[customer.id] : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n\n      return {\n        ...state,\n        customers: updatedCustomers,\n        fetchedPofileCompleteness: true,\n      };\n    },\n\n    [getCustomersProfileCompleteness.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state, action) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state, action) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer } = customerSlice.actions;\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#EBDFFF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#EBDFFF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#5C00F2\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#5C00F2\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#5C00F2\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#5C00F2\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#5C00F2\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#5C00F2\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setCurrentCustomer } from \"../redux/customerSlice\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\nexport default function TableDisplay({\n  customerList,\n  fetchedPofileCompleteness,\n}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const profileCompletion = (percentage) => {\n    return (\n      <Box>\n        <RingProgress\n          size={45}\n          thickness={3}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 25\n                  ? \"#1D9B25\"\n                  : percentage > 50\n                  ? \"#CFA400\"\n                  : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </Box>\n    );\n  };\n\n  const handleRowClick = (customer) => {\n    navigate(\"/dashboard\");\n    dispatch(setCurrentCustomer(customer));\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorFn: (row) => `${row.profiling?.personal_details?.full_name}`,\n        id: \"name\",\n        header: \"Name\",\n      },\n      {\n        accessorFn: (row) => `CLID${row.id.substr(0, 6)}....`,\n        id: \"customerId\",\n        header: \"Customer Id\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 400,\n      },\n      {\n        accessorKey: \"source\",\n        header: \"Source\",\n      },\n      {\n        accessorKey: \"mobile\",\n        header: \"Mobile\",\n      },\n      {\n        accessorFn: (row) =>\n          !fetchedPofileCompleteness ? (\n            <Loader type={\"dots\"} color=\"#5C00F2\" />\n          ) : (\n            profileCompletion(row.profile_completion)\n          ),\n        id: \"profileCompletion\",\n        header: \"Profile Completion\",\n      },\n    ],\n    [fetchedPofileCompleteness],\n  );\n\n  return (\n    <Box>\n      <StyledTable\n        columns={columns}\n        data={customerList}\n        onRowClick={handleRowClick}\n      />\n    </Box>\n  );\n}\n","import { LoadingOverlay, Title } from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n\n  const { status, customers, fetchedPofileCompleteness } = useSelector(\n    (state) => state.customer,\n  );\n\n  // if(Array.isArray(customers) && customers.length > 0) setCustomerList(customers)\n\n  useEffect(() => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  }, []);\n\n  if (status === \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#EBDFFF\"}\n        loaderProps={{\n          color: \"#5C0FF2\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n            <div style={{ padding: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"20px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <span>\n                  <Title pl={5}>Customers</Title>\n                </span>\n              </div>\n              <TableDisplay\n                customerList={customers}\n                fetchedPofileCompleteness={fetchedPofileCompleteness}\n              />\n            </div>\n          </span>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #5C00F2\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F2\",\n      boxShadow: `\n          rgba(92, 0, 242, 0.06) 0px 2px 1px,\n          rgba(92, 0, 242, 0.09) 0px 4px 2px,\n          rgba(92, 0, 242, 0.09) 0px 8px 4px,\n          rgba(92, 0, 242, 0.09) 0px 16px 8px,\n          rgba(92, 0, 242, 0.09) 0px 32px 16px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(235, 223, 255, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(235, 223, 255, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F290\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#5C00F2\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  {\n    link: \"Financial Information\",\n    label: \"Financial Information\",\n    icon: <IconReportMoney />,\n  },\n  {\n    link: \"Insurance Details\",\n    label: \"Insurance Details  \",\n    icon: <IconCarCrash />,\n  },\n  { link: \"Vehicle\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const links = data.map((item) => (\n    <NavLink\n      className={cx(classes.link, {\n        [classes.linkActive]: item.label === active,\n      })}\n      icon={item.icon}\n      component={Link}\n      variant=\"subtle\"\n      to={item.link}\n      label={item.label}\n      key={item.label}\n      onClick={(event) => {\n        setActive(item.label);\n      }}\n    />\n  ));\n\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to=\"/customers\"\n            c=\"#5C00F2\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","\nconst imageURL = require('./Avid Traveler.png');\nconst baseUrl = window.location.origin;\nconst finalImageUrl = baseUrl + imageURL;\n\nconsole.log(baseUrl,imageURL.default);\n\n\n\n// export default {\n//     [`Avid Traveler`]: new URL('./Avid Traveler.png', import.meta.url).href,\n//     [`Fitness Freak`]: new URL('./Fitness Freak.png', import.meta.url).href,\n//     [`Foodie`]: new URL('./Foodie.png', import.meta.url).href,\n//     [`Sports Fan`]: new URL('./Sports Fan.png', import.meta.url).href,\n//     [`Techie`]: new URL('./Techie.png', import.meta.url).href,\n// }\n\nexport default {\n    [`Avid Traveler`]: \"\",\n    [`Fitness Freak`]: \"\",\n    [`Foodie`]:\"\",\n    [`Sports Fan`]: \"\",\n    [`Techie`]:\"\",\n}\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    {percentage}%\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group>\n        </Paper>\n    );\n}","import { Grid } from '@mantine/core'\nimport assets from './assets'\nimport { StatsCard } from './StatCard'\n\nconst Profiling = () => {\n\n    const assetList = Object.entries(assets)\n    const stats = assetList.map((list) => {\n        const title = list[0]\n        const url = list[1]\n        function getCustomerStats() {\n            const frequency = Math.floor(Math.random() * 16); // A random frequency per month between 0 and 15\n            const maxLastUpdated = Math.floor((1 - frequency / 15) * 30);\n            const lastUpdated = Math.floor(Math.random() * (maxLastUpdated + 1)); // A random value between 0 and maxLastUpdated, representing the number of days ago\n            const maxCompleted = Math.min(Math.floor((30 - lastUpdated) * (frequency / 30) * 100), 100);\n            const percentageCompleted = Math.floor(Math.random() * (maxCompleted + 1)); // A random percentage between 0 and maxCompleted\n\n            return [frequency, percentageCompleted, lastUpdated];\n        }\n\n        const customerStats = getCustomerStats();\n        console.log(customerStats);\n        return (<>\n            <Grid.Col span={4}>\n                <StatsCard title={title} url={url} percentage={customerStats[1]} frequency={customerStats[0]} lastUpdated={customerStats[2]} />\n            </Grid.Col>\n        </>)\n    })\n    return (\n        <>\n            <Grid gutter=\"xl\">\n                {stats}\n            </Grid>\n        </>\n    )\n}\n\nexport default Profiling","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState } from \"react\";\nimport InfoTag from \"./InfoTag\";\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n\n  const profileCompletion = (percentage) => {\n    return (\n      <div>\n        <Center>\n          <RingProgress\n            mt={50}\n            size={80}\n            thickness={5}\n            sections={[\n              {\n                value: percentage,\n                color:\n                  percentage > 75\n                    ? \"#1D9B25\"\n                    : percentage > 60\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n              },\n            ]}\n            label={\n              <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                {percentage}%\n              </Text>\n            }\n          />\n        </Center>\n      </div>\n    );\n  };\n  return (\n    <>\n      <Container mt={-80}>\n        <Group grow position=\"apart\">\n          <Text mt={70} fw={500}>\n            Basic Details\n          </Text>\n          <Space h={40} />\n          <div>\n            <Space h={40} />\n            {profileCompletion(profile_completion)}\n          </div>\n        </Group>\n        <div style={{ marginTop: \"-30px\" }}>\n          {/* <InfoTag title={'Picture'} subject={<Avatar radius={'xl'} size='xl' />} /> */}\n          <Grid gutter=\"xl\" pt={\"sm\"}>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"First Name\"}\n                subject={profile.full_name.split(\" \")[0]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Last Name\"}\n                subject={profile.full_name.split(\" \")[1]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Gender\"} subject={profile.gender} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Date of birth\"} subject={profile.dob} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Age\"} subject={profile.age} />\n            </Grid.Col>\n          </Grid>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Marital Status\"}\n                subject={profile.marital_status}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Source\"} subject={source} />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Contact Details</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag title={\"Email Address\"} subject={profile.email} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Email\"}\n                subject={profile.alternate_email}\n              />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Mobile Number\"}\n                subject={profile.alternate_phone_number}\n              />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Address</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag title={\"Location(city)\"} subject={profile.location} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"State\"} subject={profile.state} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"PINCODE\"} subject={profile.pincode} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Country\"} subject={profile.country} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Address Line\"} subject={profile.address} />\n            </Grid.Col>\n          </Grid>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\nconst KeywordsEntry = ({ updateKeywordValuesParent }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n          />\n\n          <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div>\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\nconst Interests = () => {\n    const dispatch = useDispatch()\n    const { status, customerDetails } = useSelector((state) => state.customer);\n    const { customerKeywords,customerKeywordsStatus } = useSelector((state) => state.keyword);\n    const [interests,setInterests] = useState([])\n\n\n    \n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      return { category, values: _.map(values, 'value') };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n  \n  useEffect(() => {\n    if( customerKeywordsStatus == 'success' ){\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n    { customerKeywordsStatus == 'success' ?\n    <>\n      {interests.map((interest) => (\n  <React.Fragment key={interest.category}>\n    <Text fw={700}>{interest.category}</Text>\n    {interest.values.map((value) => (\n      <Badge\n        key={value}\n        variant=\"gradient\"\n        gradient={{ from: 'indigo', to: 'cyan' }}\n      >\n        {value}\n      </Badge>\n    ))}\n  </React.Fragment>\n))}\n    </> :\n    <>Loading interests...</>\n    }\n     \n        \n        </>\n  \n    )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  useEffect(() => {\n    if (\n      routesClicked.at(-2) &&\n      routesClicked.at(-2) === \"/dashboard/keywords\"\n    ) {\n      const updateKeywordPayload = {\n        customerId: customerDetails.id,\n        keywordsPayload: keywordValues,\n      };\n\n      setNotification(true);\n      sleep(5000).then((data) => setNotification(false));\n\n      dispatch(updateKeywords(updateKeywordPayload));\n    }\n  }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Card shadow={\"lg\"} radius={\"md\"}>\n              <Routes>\n                <Route>\n                  <Route\n                    index\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route\n                    path=\"/personalInformation\"\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route path=\"/profiling\" element={<Profiling />} />\n                  <Route\n                    path=\"/keywords\"\n                    element={\n                      <KeywordsEntry\n                        submitKeywords={submitKeywords}\n                        updateKeywordValuesParent={updateKeywordValuesParent}\n                      />\n                    }\n                  />\n\n                  <Route path=\"/interests\" element={<Interests />} />\n                  <Route path=\"/occupation\" element={<Occupation />} />\n                  <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                  <Route path=\"/activity\" element={<Activity />} />\n                </Route>\n              </Routes>\n            </Card>\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Background Syncing\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n    },\n    setAuth: (state, action) => {\n      const storage = JSON.parse(localStorage.getItem(\"login\"));\n      if (Object.keys(storage).length > 0) {\n        const { email, _id } = storage\n        state.user.email = email;\n        state.user._id = _id;\n        state.status = \"success\";\n        state.isLoggedIn = true;\n      } else {\n        state.isLoggedIn = false;\n      }\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus:\"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    }\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n    \n  },\n});\n\nexport const { getUserRolesPermissionsByMapping } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n    'campaignManagement/fetchRowData',\n    async (_, { getState }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n        const responses = [];\n        let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n        for (const rowKey of Object.keys(state.rows)) {\n            const row = state.rows[rowKey];\n            if (!row.first || !row.second || !row.third) {\n                throw new Error(\"Row has empty/default values. Fetching aborted.\");\n            }\n\n            const body = {\n                information_type: row.first.toLowerCase().split(' ').join('_'),\n                category: row.second.toLowerCase().split(' ').join('_'),\n                value: row.third.toLowerCase().split(' ').join('_')\n            };\n\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            const data = await response.json();\n            const customerIDsForThisRow = data.map(customer => customer.id);\n\n            if (commonCustomerIDs === null) {\n                commonCustomerIDs = new Set(customerIDsForThisRow);\n            } else {\n                commonCustomerIDs = new Set([...commonCustomerIDs].filter(id => customerIDsForThisRow.includes(id)));\n            }\n\n            responses.push({\n                rowKey,\n                figures: commonCustomerIDs.size,\n                customerIDs: [...commonCustomerIDs]\n            });\n        }\n        return responses;\n    }\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n    'campaignManagement/fetchFiguresForRow',\n    async (rowId, { getState }) => {\n        const state = getState().campaignManagement;\n        const row = state.rows[rowId];\n        if (!row || !row.first || !row.second || !row.third) {\n            throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n        }\n\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n        const body = {\n            information_type: row.first.toLowerCase().split(' ').join('_'),\n            category: row.second.toLowerCase().split(' ').join('_'),\n            value: row.third.toLowerCase().split(' ').join('_')\n        };\n\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        });\n\n        const data = await response.json();\n        const customerIDsForThisRow = data.map(customer => customer.id);\n\n        // Retrieve customer IDs from all preceding rows\n        let commonCustomerIDs = customerIDsForThisRow;\n        for (const otherRowId of Object.keys(state.rows)) {\n            if (Number(otherRowId) < Number(rowId)) {\n                const otherRow = state.rows[otherRowId];\n                commonCustomerIDs = commonCustomerIDs.filter(id => otherRow.customerIDs.includes(id));\n            }\n        }\n\n        return { rowId, figures: commonCustomerIDs.length, customerIDs: commonCustomerIDs };\n    }\n);\n\nexport const createCampaign = createAsyncThunk(\n    'campaignManagement/createCampaign',\n    async (_, { getState, rejectWithValue }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n        const body = {\n            name: state.eventName,\n            eventBased: true,\n            triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n            type: \"EMAIL\",\n            recurrenceType: state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n            start: state.tabData.Email.timelineState.startDate,\n            end: state.tabData.Email.timelineState.endDate,\n            templateText: state.tabData.Email.content,\n            customerIDs: state.allCustomerIDs\n        };\n\n        console.log('Publish body', body)\n\n        try {\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            console.log('response', response)\n\n            if (!response.ok) {\n                throw new Error('Failed to create campaign');\n            }\n\n            return response.json();\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst initialState = {\n    isModalOpen: false,\n    dropdownData: {\n        \"Personal Information\": {\n            \"Age\": [\"25-30\", \"31-35\"],\n            \"Gender\": [\"Male\", \"Female\"],\n            \"Marital Status\": [\"Single\", \"Married\"],\n            \"Location\": [\"Delhi\", \"Mumbai\"],\n        },\n        \"Interests\": {},\n        \"Occupation\": '',\n        \"Activity\": '',\n        \"Family Details\": '',\n        \"Financial Information\": '',\n        \"Insurance Details\": '',\n        \"Vehicle\": '',\n        \"Health\": '',\n    },\n    rows: {\n        [Date.now().toString()]: {\n            first: \"\",\n            second: \"\",\n            third: \"\",\n            figures: null,\n            customerIDs: []\n        }\n    },\n    allCustomerIDs: [],\n    selectedCombinations: [],\n    eventName: \"\",\n    eventDate: null,\n    step: 1,\n    activeTab: 'Email',\n    startDate: null,\n    endDate: null,\n    tabData: {\n        Email: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 500\n        },\n        SMS: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 160\n        },\n        Notification: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 250\n        },\n        Whatsapp: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 2000\n        }\n    },\n    radarData: [\n        { count: 120, subject: 'EZ-Auto' },\n        { count: 98, subject: 'Cyberior' },\n        { count: 86, subject: 'Homecare' },\n        { count: 99, subject: 'E-Portal 2.0' },\n        { count: 85, subject: 'EZ-Travel' },\n    ],\n    downloadDataStatus: null,\n    error: null,\n    rowIdsArray: [],\n    loadingStates: {},\n    errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n    name: \"campaignManagement\",\n    initialState,\n    reducers: {\n        toggleModal: (state, action) => {\n            state.isModalOpen = action.payload;\n        },\n        updateDropdownData: (state, action) => {\n            state.dropdownData = action.payload;\n        },\n        updateRows: (state, action) => {\n            state.rows = action.payload;\n            state.rowIdsArray = [];\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        updateSelectedCombinations: (state, action) => {\n            state.selectedCombinations = action.payload;\n        },\n        setCampaignName: (state, action) => {\n            state.campaignName = action.payload;\n        },\n        setEventName: (state, action) => {\n            state.eventName = action.payload;\n        },\n        setEventDate: (state, action) => {\n            state.eventDate = action.payload;\n        },\n        setStep: (state, action) => {\n            state.step = action.payload;\n        },\n        setStartDate: (state, action) => {\n            state.startDate = action.payload;\n        },\n        setEndDate: (state, action) => {\n            state.endDate = action.payload;\n            state.eventDate = action.payload;\n        },\n        setActiveTab: (state, action) => {\n            state.activeTab = action.payload;\n        },\n        updateTabData: (state, action) => {\n            state.tabData = action.payload;\n        },\n        setRadarData: (state, action) => {\n            state.radarData = action.payload;\n        },\n        resetModal: (state) => {\n            state.step = initialState.step;\n            state.campaignName = initialState.campaignName;\n            state.eventName = initialState.eventName;\n            state.activeTab = initialState.activeTab;\n            state.tabData = initialState.tabData;\n            state.eventDate = initialState.eventDate\n        },\n    },\n    extraReducers: {\n        [fetchRowData.pending]: (state) => {\n            state.downloadDataStatus = 'loading';\n        },\n        [fetchRowData.fulfilled]: (state, action) => {\n            state.downloadDataStatus = 'success';\n\n            action.payload.forEach(item => {\n                state.rows[item.rowKey].figures = item.figures;\n                state.rows[item.rowKey].customerIDs = item.customerIDs;\n            });\n\n            state.rowIdsArray = [...new Set([...state.rowIdsArray, ...action.payload.map(item => item.rowKey)])];\n\n            const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n            state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n        },\n        [fetchRowData.rejected]: (state, action) => {\n            state.downloadDataStatus = 'failed';\n            state.error = action.error.message;\n        },\n        [fetchFiguresForRow.pending]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'loading';\n            state.errors[rowId] = null;\n        },\n        [fetchFiguresForRow.fulfilled]: (state, action) => {\n            const { rowId, figures, customerIDs } = action.payload;\n            state.rows[rowId].figures = figures;\n            state.rows[rowId].customerIDs = customerIDs;\n            state.loadingStates[rowId] = 'loaded';\n\n            const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n            if (Number(rowId) === lastRowId) {\n                state.allCustomerIDs = [...customerIDs];\n            }\n        },\n        [fetchFiguresForRow.rejected]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'error';\n            state.errors[rowId] = action.error.message;\n        }\n    }\n});\n\nexport const {\n    toggleModal,\n    updateDropdownData,\n    updateRows,\n    updateSelectedCombinations,\n    setCampaignName,\n    setEventName,\n    setEventDate,\n    setStep,\n    setStartDate,\n    setEndDate,\n    setActiveTab,\n    updateTabData,\n    setRadarData,\n    resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nexport const fetchSources = createAsyncThunk(\n  \"campaign/fetchSources\",\n  async () => {\n    const response = {\n      sources: [],\n    };\n    return response.sources;\n  },\n);\n\nexport const fetchCampaignNames = createAsyncThunk(\n  \"campaign/fetchCampaignNames\",\n  async () => {\n    const response = {\n      campaignNames: [],\n    };\n    return response.campaignNames;\n  },\n);\n\nconst initialState = {\n  data: [],\n  sources: [\"Homecare\", \"Cyberior\", \"EZ-Auto\", \"EZ-Travel\", \"E-Portal 2.0\"],\n  campaignNames: [\"Campaign 1\", \"Campaign 2\", \"Campaign 3\"],\n  selectedCampaign: \"All\",\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaign = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload.map((item) => ({\n          name: item.campaignName,\n          delivered: item.totalSent,\n          interested: item.success,\n          failure: item.failed,\n          converted: 0,\n        }));\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      })\n      .addCase(fetchSources.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.sources = action.payload;\n        }\n      })\n      .addCase(fetchCampaignNames.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.campaignNames = action.payload;\n        }\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async () => {\n    const response = await fetch(API_ENDPOINT);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F299\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#5C00F299\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#5C00F299\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#EBDFFF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n        border: \"1px solid #5C00F2\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n      navigate(\"/\");\n    }\n  }, [status, navigate]);\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#EBDFFF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#5C00F2\", to: \"#EBDFFF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#5C00F2\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Incorrect credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#5c00f2\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#5c00f2\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#5c00f2\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton\n        //       compact\n        //       onClick={() => {\n        //         console.log(\"Create Permission clicked!\");\n        //       }}\n        //     >\n        //       Create Permission\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#5C00F2\" },\n    label: {\n      color: \"#5C00F299\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#EBDFFF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#5C00F2\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#5C00F2\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#5C00F299\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F299\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F299\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#5C00F2\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#5C0FF2\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n        const currentCombination = {\n          first: row.first,\n          second: row.second,\n          third: row.first === \"Interests\" ? option.value : option,\n        };\n\n        const isSelectedCombination = selectedCombinations.some(\n          (selected) =>\n            selected.first === currentCombination.first &&\n            selected.second === currentCombination.second &&\n            (row.first === \"Interests\"\n              ? selected.third.value\n              : selected.third) === currentCombination.third,\n        );\n\n        const isSelectedInCurrentRow = selectedCombinations.some(\n          (selected) =>\n            selected.rowId === rowId &&\n            selected.first === currentCombination.first &&\n            selected.second === currentCombination.second &&\n            (row.first === \"Interests\"\n              ? selected.third.value\n              : selected.third) === currentCombination.third,\n        );\n\n        return !isSelectedCombination || isSelectedInCurrentRow;\n      })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#5C00F2\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#5C00F2\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#5C00F2\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#5C00F2\"\n          fill=\"#5C00F2\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#5C00F2\" },\n    label: {\n      color: \"#5C00F299\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#EBDFFF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#5C00F2\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#5C00F2\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#5C00F2\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#EBDFFF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n        border: \"1px solid #5C00F2\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n      \"&:hover\": {\n        border: \"2px solid #5C00F2\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#5C00F2\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#5C00F2\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#5C00F2\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#5C00F2\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#5C00F2\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#5C00F2\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#5C00F2\"}\n                      bg={activeTab === tab ? \"#5C00F2\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#EBDFFF\",\n                          color: \"#5C00F2\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${\n                      activeTab === tab ? \"show active\" : \"\"\n                    }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                            <div className=\"character-limit-error\">\n                              Character limit exceeded!\n                            </div>\n                          )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#EBDFFF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import {\n  ActionIcon,\n  Box,\n  Flex,\n  Select,\n  Text,\n  Title,\n  Loader,\n  Group,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  fetchData,\n  fetchSources,\n  fetchCampaignNames,\n  selectCampaign,\n} from \"../../redux/campaignSlice\";\nimport { Link } from \"react-router-dom\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector((state) => state.campaign.data);\n  const sources = useSelector((state) => state.campaign.sources);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n      dispatch(fetchSources());\n      dispatch(fetchCampaignNames());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#5C0FF2\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              data={[\"All\", ...campaignNames]}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={(value) => dispatch(selectCampaign(value))}\n            />\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Source(s)</Text>}\n              data={sources}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"name\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#EBDFFF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#5C00F2\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#5C00F2\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#5C00F2\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#EBDFFF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#5C00F2\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#5C00F2\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#5C00F2\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n        </Grid>\n\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Stack>\n            <Flex c={\"#5C00F2\"} justify={\"space-between\"}>\n              <Text fw={\"bold\"}>Communications</Text>\n              <Center>\n                <ActionIcon c={\"#5C00F2\"}>\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"}>Export</Text>\n              </Center>\n            </Flex>\n            <Box>\n              <VerticalBarChart />\n            </Box>\n          </Stack>\n        </Card>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(keywords, keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n              ...updatedDropdownData[keyword.category],\n              { label: keyword.value, value: keyword.id },\n            ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#5C00F2\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#5C00F2\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#5C00F2\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#5C00F2\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F2\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#5C00F2\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#EBDFFF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#EBDFFF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#EBDFFF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#5C00F2\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#5C00F2\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#EBDFFF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #5C00F2\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => dispatch(logout())}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#EBDFFF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F2\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#5C00F290\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#5C00F2\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#8C53E7,#5C00F2)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#5C0FF2)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          radius={\"md\"}\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            boxShadow: `\n    rgba(92, 0, 242, 0.17) 0px -23px 25px 0px inset,\n    rgba(92, 0, 242, 0.15) 0px -36px 30px 0px inset,\n    rgba(92, 0, 242, 0.1) 0px -79px 40px 0px inset,\n    rgba(92, 0, 242, 0.06) 0px 2px 1px,\n    rgba(92, 0, 242, 0.09) 0px 4px 2px,\n    rgba(92, 0, 242, 0.09) 0px 8px 4px,\n    rgba(92, 0, 242, 0.09) 0px 16px 8px,\n    rgba(92, 0, 242, 0.09) 0px 32px 16px\n`,\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && <User user={user} roleName={findUserRoleNameById(user._id)} />}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n                />\n              )}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#EBDFFF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#EBDFFF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          {value}\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#EBDFFF\"}\n        loaderProps={{\n          color: \"#5C0FF2\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n          // topProps={() => (\n          //   <Flex>\n          //     <StyledButton compact onClick={handleAddUserModal}>\n          //       + Create User\n          //     </StyledButton>\n          //   </Flex>\n          // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#5C00F2\">\n            My Profile\n          </Title>\n          <Divider c=\"#5C00F2\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#5C00F2\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#5C00F2\",\n                      \"&:hover\": {\n                        backgroundColor: \"#EBDFFF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#5C00F2\",\n                  color: \"#5C00F2\",\n                  \"&:hover\": {\n                    backgroundColor: \"#EBDFFF\",\n                    color: \"#5C00F2\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#5C00F2\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#5C00F2\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = (values) => {\n    console.log(values);\n\n    if (canSave) {\n      showNotification({\n        type: \"success\",\n        title: `Password changed successfully!`,\n        message: `Your password has been updated.`,\n      });\n    } else {\n      showNotification({\n        type: \"warning\",\n        title: `Password change failed!`,\n        message: `Ensure all validations are met.`,\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#5C00F2\">\n          Change Password\n        </Title>\n        <Divider c=\"#5C00F2\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#5C00F2\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#5C00F2\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #5C00F2\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = () => {\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData());\n  }, [dispatch]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\n\nconst CustomerProfileAnalysis = () => {\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"Test\"]}\n            />\n            <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group>\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async () => {\n    const response = await fetch(API_ENDPOINT);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = () => {\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData());\n  }, [dispatch]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"Test\"]}\n            />\n            <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group>\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      onMouseEnter={() => dispatch(setHoveredItem(text))}\n      onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  const dispatch = useDispatch();\n  const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#EBDFFF\"}\n      mah={300}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#5C00F2\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#5C00F2\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            onMouseEnter={() => handleMouseEnter(entry.name)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                sx={{\n                  transition: \"transform 0.3s ease\",\n                  transform:\n                    hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                  backgroundImage:\n                    hoveredItem === entry.name\n                      ? \"radial-gradient(#000000 20% ,#5C0FF2)\"\n                      : \"none\",\n                }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"none\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"none\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"none\" && selectedDemographic === \"none\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"none\" && selectedDemographic !== \"none\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"none\", label: \"None\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"none\", label: \"None\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Card shadow={\"lg\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n              Profile\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={4}>\n          <Stack>\n            <StyledSelect\n              label={\"Profile\"}\n              placeholder={\"Select Profile(s)\"}\n              data={profileOptions}\n              onChange={(value) => setSelectedProfile(value)}\n            />\n            <StyledSelect\n              label={\"Demographics\"}\n              placeholder={\"Select Main Demographics\"}\n              data={demographicOptions}\n              onChange={(value) => setSelectedDemographic(value)}\n            />\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={4}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfilePieChart />\n            )}\n          </Center>\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfileDataCard />\n            )}\n          </Center>\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#5C00F2\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#5C00F2\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#5C00F2\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\nimport { setAuth } from \"./redux/authSlice\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  useEffect(() => {\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\n    if (isLoggedIn) {\n      dispatch(setAuth());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {/* {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/\" element={<BoardStats />} />\n              ) : (\n                <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n              )} */}\n              <PrivateRoute path=\"/\" element={<Root />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              <PrivateRoute path=\"/users\" element={<Users />} />\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}