{"version":3,"sources":["i18n.js","utils/sleep.js","redux/customerSlice.js","StyledComponents/StyledTable.jsx","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/StatCard.jsx","redux/profileTypesSlice.js","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","components/AgentPages/Remarks.tsx","components/Remarks/RemarkListings.jsx","components/FinancialInformation/FinancialInformation.jsx","components/InsuranceDetails/InsuranceDetails.jsx","components/VehicleDetails/VehicleDetails.jsx","pages/Dashboard/InfoTag.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/campaignListSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/AllCampaigns/AllCampaigns.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","components/ProfileTableDisplay.jsx","pages/Profile/Profile.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","getCustomerRemarks","_ref5","_callee5","customerId","_yield$axios$get5","_context5","_x3","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerProfileCompletion","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","customerRemarks","remarksStatus","reducers","setCurrentCustomer","state","action","payload","setCurrentCustomerProfileCompletion","clearCurrentCustomer","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","updatedCustomers","customer","profileCompletion","_objectSpread","profile_completion","_customerSlice$action","actions","StyledTable","_ref","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","_ref2","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","size","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","TableDisplay","customerList","dispatch","useDispatch","navigate","useNavigate","useSelector","useEffect","useMemo","accessorFn","_row$profiling","_row$profiling$person","profiling","personal_details","full_name","header","substr","accessorKey","minSize","Loader","type","Customers","_useSelector","refreshButton","IconRefresh","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","align","fontFamily","fontWeight","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","label","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","variant","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconClipboardText","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","myRole","useLocation","auth","links","filter","item","index","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","percentage","frequency","lastUpdated","Avatar","src","ta","fz","Badge","Progress","value","fetchData","response","process","t0","fetchProfileTypes","fetchProfileMappings","profileId","profilingSlice","profileTypes","profileMappings","profileTypesStatus","profileMappingsStatus","error","builder","addCase","message","Profiling","profileData","profileTypesCustomerMapping","stats","profile","Grid","Col","span","profileType","srcUrl","Math","round","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","source","memoizedSelectedCustomer","randomDetails","randomLocation","faker","location","city","randomState","randomAddress","streetAddress","randomPincode","zipCode","marital_status","travel_address","anniversary","employment","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","handleSubmitKeywords","setData","_useSelector2","rolePermission","rolesPermissionsStatus","_useSelector3","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","setUnknowns","_useState9","_useState10","isDataChanged","setDataChanged","transformedData","category","allKeywords","unknownValues","obj","hasChanged","isEqual","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","readOnly","alignSelf","Interests","interests","setInterests","groupedByCategory","groupBy","uniq","interest","React","Fragment","gradient","from","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","tempEditData","setTempEditData","headerElements","headerItem","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","toString","bg","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","industry","incomeBracket","Occupation","gender","relationship","phone","email","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Remarks","Textarea","RemarkListings","currentCustomerId","_useDisclosure","useDisclosure","_useDisclosure2","opened","_useDisclosure2$","open","close","selectedRemark","setSelectedRemark","remark","Modal","onClose","centered","agentName","date","time","acc_no","ifsc","branch","FinancialInformation","validity","expiry","InsuranceDetails","vin","product_type","VehicleDetails","Dashboard","_customerDetails$prof","submitKeywords","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","_useState11","isLoggedIn","_useState12","_useState13","_useState14","_useState15","_useState16","pathname","LoadingOverlay","visible","overlayBlur","loaderProps","Card","textAlign","isHNI","phone_number","undefined","RingProgress","thickness","sections","weight","Routes","Route","element","path","keywordsPayload","then","Notification","loading","withCloseButton","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","window","atob","charCodeAt","slice","join","JSON","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_yield$axios$post3","_x4","authSlice","user","userStatus","users","_reducers","setAuth","logout","localStorage","clear","defaults","headers","common","reload","storage","getItem","_id","access_token","_parseJwt","sub","setItem","stringify","_parseJwt2","_authSlice$actions","setMyRole","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","_ref6","createRolesPermissionMapping","_ref7","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_context9","_x6","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","_rolesPermissionSlice","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","keywordsUsed","selectedCombinations","combination","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","isModalOpen","dropdownData","Age","Gender","Location","Vehicle","Health","Date","now","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","campaignSlice","campaignNames","selectedCampaigns","selectCampaign","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","fetchCampaigns","_error$response","determineCampaignStatus","campaign","currentDate","isActive","campaignStatus","campaigns","store","configureStore","reducer","campaignManagementReducer","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","campaignListSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","route_permission","h","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","assets","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","entries","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","floor","random","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Divider","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","Space","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","min","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","setSelectedCampaigns","margin","chartData","delivered","totalSent","converted","success","interested","failure","failed","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","AllCampaigns","campaignState","reversedData","reverse","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","handleUserActionModal","selected_user","updatedUserData","overlayColor","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","address","pincode","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","handleSubmit","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","strokeDasharray","CustomerProfileAnalysis","selectedSource","setSelectedSource","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$text","textColor","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","flex","Root","ProfileTableDisplay","Profile","showTable","setShowTable","checkedStates","setCheckedStates","imageDict","IconArrowBack","profileTypeId","isChecked","prevStates","float","App","setColorScheme","login","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.ed12f1ea.chunk.js","sourcesContent":["import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerProfileCompletion: null,\n  customerServiceHistory: [],\n  fetchedPofileCompleteness: false,\n  customerServiceHistoryStatus: \"idle\",\n  customerDetailsStatus: \"idle\",\n  customerRemarks: [], // New field for storing customer remarks\n  remarksStatus: \"idle\", // New status field for customer remarks\n};\n\nexport const getCustomers = createAsyncThunk(\n  \"customer/getCustomers\",\n  async () => {\n    // await sleep(3000)\n    const { data } = await axios.get(\"/customers\");\n    return data;\n  },\n);\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\n  \"customer/getCustomersProfileCompleteness\",\n  async () => {\n    await sleep(200);\n    const { data } = await axios.get(\"/profile\");\n    return data;\n  },\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  },\n);\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerServicesHistory\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  },\n);\n\nexport const getCustomerRemarks = createAsyncThunk(\n  \"customer/getCustomerRemarks\",\n  async (customerId) => {\n    const { data } = await axios.get(\"/customers/remarks/\" + customerId);\n    console.log(\"Remarks in thunk\", data);\n    return data;\n  },\n);\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer: (state, action) => {\n      state.customerDetails = action.payload;\n    },\n    setCurrentCustomerProfileCompletion: (state, action) => {\n      state.customerProfileCompletion = action.payload;\n    },\n    clearCurrentCustomer: (state, action) => {\n      state.customerDetails = []\n      state.customerDetailsStatus = \"idle\"\n    }\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const curr_state_obj = {};\n      const res_obj = {};\n      state.customers.map((e) => (curr_state_obj[e.id] = e));\n      action.payload.customer_details.map((e) => (res_obj[e.id] = e));\n      state.customers = Object.values(Object.assign(curr_state_obj, res_obj));\n    },\n    [getCustomers.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerDetails.pending]: (state) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload;\n    },\n    [getCustomerDetails.rejected]: (state) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion\n          ? action.payload.profileCompletion[customer.id]\n          : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n      state.customers = updatedCustomers;\n      state.fetchedPofileCompleteness = true;\n    },\n    [getCustomersProfileCompleteness.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n    [getCustomerRemarks.pending]: (state) => {\n      state.remarksStatus = \"loading\";\n    },\n    [getCustomerRemarks.fulfilled]: (state, action) => {\n      state.remarksStatus = \"success\";\n      state.customerRemarks = action.payload; // Assuming API returns an array of remarks\n    },\n    [getCustomerRemarks.rejected]: (state) => {\n      state.remarksStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer, clearCurrentCustomer, setCurrentCustomerProfileCompletion } = customerSlice.actions;\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  console.log(\"topProps\", topProps);\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import { useMemo, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getCustomerDetails, setCurrentCustomerProfileCompletion } from \"../redux/customerSlice\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\nexport default function TableDisplay({\n  customerList,\n  fetchedPofileCompleteness,\n  topProps,\n}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const customerDetailsStatus = useSelector(state => state.customer.customerDetailsStatus)\n\n\n  const profileCompletion = (percentage) => {\n    return (\n      <Box>\n        <RingProgress\n          size={45}\n          thickness={3}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 25\n                  ? \"#1D9B25\"\n                  : percentage > 50\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </Box>\n    );\n  };\n\n  const handleRowClick = (customer) => {\n    console.log(customer);\n    dispatch(getCustomerDetails(customer.id));\n    dispatch(setCurrentCustomerProfileCompletion(customer.profile_completion))\n  };\n\n\n  useEffect(() => {\n    if (customerDetailsStatus === \"success\") {\n      navigate(\"/dashboard\");\n    }\n  }, [customerDetailsStatus, navigate]);\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorFn: (row) => `${row.profiling?.personal_details?.full_name}`,\n        id: \"name\",\n        header: \"Name\",\n      },\n      {\n        accessorFn: (row) => `CLID${row.id.substr(0, 6)}....`,\n        id: \"customerId\",\n        header: \"Customer Id\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 400,\n      },\n      {\n        accessorKey: \"source\",\n        header: \"Source\",\n      },\n      {\n        accessorKey: \"mobile\",\n        header: \"Mobile\",\n      },\n      {\n        accessorFn: (row) =>\n          !fetchedPofileCompleteness ? (\n            <Loader type={\"dots\"} color=\"#0d5ff9\" />\n          ) : (\n            row.profile_completion\n          ),\n        id: \"profileCompletion\",\n        header: \"Profile Completion(in %)\",\n      },\n    ],\n    [fetchedPofileCompleteness],\n  );\n\n  return (\n    <Box>\n      <StyledTable\n        columns={columns}\n        data={customerList}\n        onRowClick={handleRowClick}\n        topProps={topProps}\n      />\n    </Box>\n  );\n}\n","import {\n  LoadingOverlay,\n  Title,\n  Button,\n  ActionIcon,\n  Loader,\n  Center,\n  Stack,\n} from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n  clearCurrentCustomer,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\nimport { IconRefresh } from \"@tabler/icons-react\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n  const { status, customers, fetchedPofileCompleteness } = useSelector(\n    (state) => state.customer,\n  );\n\n  useEffect(() => {\n    dispatch(clearCurrentCustomer());\n  }, [])\n\n  useEffect(() => {\n\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  }, [dispatch]);\n\n  const handleRefresh = () => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  };\n\n  const refreshButton = (\n    <ActionIcon c={\"#0d5ff9\"} size={\"sm\"} onClick={handleRefresh}>\n      <IconRefresh />\n    </ActionIcon>\n  );\n\n  if (status === \"loading\") {\n    return (\n      <Center>\n        <Loader c=\"#0d5ff9\" size=\"lg\" />\n      </Center>\n      // <LoadingOverlay\n      //   visible\n      //   overlayBlur={2}\n      //   overlayColor={\"#F3F6FF\"}\n      //   loaderProps={{\n      //     color: \"#0d5ff9\",\n      //     size: \"xl\",\n      //     variant: \"dots\",\n      //   }}\n      // />\n    );\n  } else {\n    return (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n            <div style={{ padding: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"20px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <span>\n                  <Title pl={5}>Customers</Title>\n                </span>\n              </div>\n              <TableDisplay\n                customerList={customers}\n                fetchedPofileCompleteness={fetchedPofileCompleteness}\n                topProps={() => refreshButton}\n              />\n            </div>\n          </span>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconClipboardText,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #0d5ff9\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0D5FF9\",\n      boxShadow: `\n rgba(13, 95, 249, 1) 0px 1px 1px,\n rgba(13, 95, 249, 0.5) 0px 2px 2px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 3px 5px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"remarks\", label: \"Remarks\", icon: <IconClipboardText /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  { link: \"fi\", label: \"Financial Information\", icon: <IconReportMoney /> },\n  { link: \"id\", label: \"Insurance Details  \", icon: <IconCarCrash /> },\n  { link: \"vd\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const location = useLocation();\n  const { myRole } = useSelector((state) => state.auth);\n\n\n  const links = data\n    .filter((item, index) => (myRole === 'qc' ? index < 2 : true))\n    .map((item) => (\n      <NavLink\n        className={cx(classes.link, {\n          [classes.linkActive]: item.label === active,\n        })}\n        icon={item.icon}\n        component={Link}\n        variant=\"subtle\"\n        to={item.link}\n        label={item.label}\n        key={item.label}\n        onClick={(event) => {\n          setActive(item.label);\n        }}\n      />\n    ));\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to={\"/customers\"}\n            c=\"#0d5ff9\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    <Badge size=\"lg\">{percentage}%</Badge>\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            {/* <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group> */}\n        </Paper>\n    );\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  data: [],\n  profileTypes: [],\n  profileMappings: [],\n  status: \"idle\",\n  profileTypesStatus: \"idle\",\n  profileMappingsStatus: \"idle\",\n  error: null,\n};\n\n// Async thunk for fetching customer data\nexport const fetchData = createAsyncThunk(\n  \"profiling/fetchData\",\n  async (customerId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/customer-mapping/${customerId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile types\nexport const fetchProfileTypes = createAsyncThunk(\n  \"profiling/fetchProfileTypes\",\n  async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-types`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile mappings by profile ID\nexport const fetchProfileMappings = createAsyncThunk(\n  \"profiling/fetchProfileMappings\",\n  async (profileId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/profile-customer-mappings-by-profile/${profileId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\nconst profilingSlice = createSlice({\n  name: \"profiling\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error =\n          action.error.message ||\n          \"Failed to fetch profile types for the customer\";\n      })\n      .addCase(fetchProfileTypes.pending, (state) => {\n        state.profileTypesStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileTypes.fulfilled, (state, action) => {\n        state.profileTypesStatus = \"succeeded\";\n        state.profileTypes = action.payload;\n      })\n      .addCase(fetchProfileTypes.rejected, (state, action) => {\n        state.profileTypesStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile types\";\n      })\n      .addCase(fetchProfileMappings.pending, (state) => {\n        state.profileMappingsStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileMappings.fulfilled, (state, action) => {\n        state.profileMappingsStatus = \"succeeded\";\n        state.profileMappings = []\n        state.profileMappings = action.payload;\n      })\n      .addCase(fetchProfileMappings.rejected, (state, action) => {\n        state.profileMappingsStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile mappings\";\n      });\n  },\n});\n\nexport default profilingSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"@mantine/core\";\nimport { StatsCard } from \"./StatCard\";\nimport { fetchData } from \"../../redux/profileTypesSlice\";\n\nconst Profiling = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(\n    (state) => state.profileTypesCustomerMapping.data,\n  );\n  const { customerDetails } = useSelector((state) => state.customer);\n\n  console.log(\"Profiling data\", profileData);\n\n  useEffect(() => {\n    dispatch(fetchData(customerDetails.id));\n  }, [dispatch, customerDetails]);\n\n  const stats = profileData.map((profile) => (\n    <Grid.Col key={profile.profileType.id} span={4}>\n      <StatsCard\n        title={profile.profileType.name}\n        url={profile.profileType.srcUrl}\n        percentage={Math.round(profile.profileCompletion)}\n      />\n    </Grid.Col>\n  ));\n\n  return (\n    <>\n      <Grid gutter=\"xl\">{stats}</Grid>\n    </>\n  );\n};\n\nexport default Profiling;\n\n","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport InfoTag from \"./InfoTag\";\nimport { fakerEN_IN as faker } from \"@faker-js/faker\";\nimport { useSelector } from \"react-redux\";\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { customerDetails } = useSelector((state) => state.customer);\n  console.log(\"state\", customerDetails);\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n  const memoizedSelectedCustomer = useMemo(\n    () => selectedCustomer,\n    [selectedCustomer.id, selectedCustomer.profiling.personal_details],\n  );\n\n  const randomDetails = useMemo(() => {\n    return {\n      randomLocation: faker.location.city(),\n      randomState: faker.location.state(),\n      randomAddress: faker.location.streetAddress(),\n      randomPincode: faker.location.zipCode(),\n    };\n  }, [memoizedSelectedCustomer]);\n\n\n\n  if (profile) {\n    return (\n      <>\n        <Container>\n\n          <div>\n            <Text fw={500}>Address & Other Info</Text>\n            <Grid gutter=\"xl\">\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Location(city)\"}\n                  subject={randomDetails.randomLocation}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"State\"} subject={randomDetails.randomState} />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"PINCODE\"}\n                  subject={randomDetails.randomPincode}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"Country\"} subject=\"India\" />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Address Line\"}\n                  subject={randomDetails.randomAddress}\n                />\n              </Grid.Col>\n\n\n            </Grid>\n          </div>\n          <div>\n            <Grid gutter=\"xl\">\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Marital status\"}\n                  subject={profile.marital_status}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"Travel Address\"} subject={profile.travel_address} />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Anniversary\"}\n                  subject={profile.anniversary}\n                />\n              </Grid.Col>\n\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Employment\"}\n                  subject={profile.employment}\n                />\n              </Grid.Col>\n\n\n            </Grid>\n          </div>\n        </Container>\n      </>\n    );\n\n  } else {\n    return (\n      <>Fetching profile ...</>\n    )\n  }\n\n\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent, handleSubmitKeywords }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n  const [isDataChanged, setDataChanged] = useState(false);\n\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n\n\n  useEffect(() => {\n    const hasChanged = !_.isEqual(values, transformedData.map((obj) => obj.value));\n    setDataChanged(hasChanged);\n  }, [values, transformedData]);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          <div style={{ alignSelf: \"center\", padding: \"10px\" }}>\n            {isDataChanged && hasPermission(userPermissions, \"keywords_edit\") && <Button variant=\"light\"\n              onClick={() => handleSubmitKeywords()}\n            >\n              Update keywords\n            </Button>\n            }\n\n          </div>\n\n\n\n          {/* <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div> */}\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\n\nconst Interests = () => {\n  const dispatch = useDispatch()\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { customerKeywords, customerKeywordsStatus } = useSelector((state) => state.keyword);\n  const [interests, setInterests] = useState([])\n\n\n\n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      // Use _.uniq to remove duplicate values\n      const uniqueValues = _.uniq(_.map(values, 'value'));\n      return { category, values: uniqueValues };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n\n  useEffect(() => {\n    if (customerKeywordsStatus == 'success') {\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n      {customerKeywordsStatus == 'success' ?\n        <>\n          {interests.map((interest) => (\n            <React.Fragment key={interest.category}>\n              <Text fw={700}>{interest.category}</Text>\n              {interest.values.map((value) => (\n                <Badge\n                  key={value}\n                  variant=\"gradient\"\n                  gradient={{ from: 'indigo', to: 'cyan' }}\n                >\n                  {value}\n                </Badge>\n              ))}\n            </React.Fragment>\n          ))}\n        </> :\n        <>Loading interests...</>\n      }\n\n\n    </>\n\n  )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport { useDisclosure } from \"@mantine/hooks\";\nimport { Modal, Group, Button } from \"@mantine/core\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport { getCustomerRemarks } from \"../../redux/customerSlice\"; // replace 'path_to_your' with the actual path\n\nconst RemarkListings = () => {\n  const dispatch = useDispatch();\n  const customerRemarks = useSelector(\n    (state) => state.customer.customerRemarks,\n  );\n  const remarksStatus = useSelector((state) => state.customer.remarksStatus);\n  const currentCustomerId = useSelector(\n    (state) => state.customer.customerDetails.id,\n  ); // Assuming 'id' is the field in customerDetails for the customer's ID\n\n  const [opened, { open, close }] = useDisclosure(false);\n  const [selectedRemark, setSelectedRemark] = useState(null);\n\n  useEffect(() => {\n    if (currentCustomerId) {\n      dispatch(getCustomerRemarks(currentCustomerId));\n    }\n  }, [dispatch, currentCustomerId]);\n\n  // Define columns for StyledTable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"agentName\",\n        header: \"Agent Name\",\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Date\",\n      },\n      {\n        accessorKey: \"time\",\n        header: \"Time\",\n      },\n      {\n        accessorKey: \"remark\",\n        header: \"Remark\",\n      },\n    ],\n    [],\n  );\n\n  const handleRowClick = (remark) => {\n    setSelectedRemark(remark);\n    open();\n  };\n\n  return (\n    <>\n      <Box>\n        {remarksStatus === \"success\" ? (\n          <StyledTable\n            columns={columns}\n            data={customerRemarks}\n            onRowClick={handleRowClick}\n          />\n        ) : remarksStatus === \"loading\" ? (\n          <p>Loading...</p>\n        ) : (\n          <p>Failed to load remarks.</p>\n        )}\n      </Box>\n\n      <Modal opened={opened} onClose={close} title=\"Remark Details\" centered>\n        {selectedRemark && (\n          <div>\n            <p>\n              <strong>Agent Name:</strong> {selectedRemark.agentName}\n            </p>\n            <p>\n              <strong>Date:</strong> {selectedRemark.date}\n            </p>\n            <p>\n              <strong>Time:</strong> {selectedRemark.time}\n            </p>\n            <p>\n              <strong>Remark:</strong> {selectedRemark.remark}\n            </p>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default RemarkListings;\n","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Financial Information';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'Acc. No', 'Variant', 'IFSC code', 'Branch'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    acc_no: '',\n    variant: '',\n    ifsc: '',\n    branch: '',\n});\n\n\nexport function FinancialInformation() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Insurance Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Source', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    source: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function InsuranceDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Vehicle Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'VIN/Chassis no.', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    vin: '',\n    product_type: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function VehicleDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { Text } from '@mantine/core';\nimport React from 'react';\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: \"-10px\" }}>\n            <Text fz={'sm'} c='dimmed' style={{ alignSelf: \"start\" }}>{title}</Text>\n            <Text style={{ alignSelf: \"end\" }}>{subject}</Text>\n        </div>\n    );\n};\n\nexport default InfoTag;\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n  Space,\n  Center,\n  RingProgress,\n  Text,\n  Badge\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\nimport Remarks from \"../../components/AgentPages/Remarks\";\nimport RemarkListings from \"../../components/Remarks/RemarkListings\";\nimport { FinancialInformation } from \"../../components/FinancialInformation/FinancialInformation\";\nimport { InsuranceDetails } from \"../../components/InsuranceDetails/InsuranceDetails\";\nimport { VehicleDetails } from \"../../components/VehicleDetails/VehicleDetails\";\nimport { IconUserSquareRounded } from '@tabler/icons-react';\nimport { Avatar } from '@mantine/core';\nimport { IconUser } from \"@tabler/icons-react\";\nimport InfoTag from \"./InfoTag\";\n\n\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n\n  const { status, customerDetails, customerProfileCompletion } = useSelector((state) => state.customer);\n  const [profile, setProfile] = useState({\n    ...customerDetails.profiling?.personal_details,\n  });\n\n  const { profile_completion } = customerDetails;\n\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n\n\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n\n\n  useEffect(() => {\n    if (!customerDetails || Object.keys(customerDetails).length === 0) {\n      navigate(\"/customers\");\n    }\n  }, [customerDetails, navigate]);\n\n\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  const handleSubmitKeywords = () => {\n\n    const payload = {\n      customerId: customerDetails.id,\n      keywordsPayload: keywordValues,\n    };\n    setNotification(true);\n    sleep(5000).then((data) => setNotification(false));\n    dispatch(updateKeywords(payload));\n\n\n  }\n\n  const profileCompletion = (percentage = 0) => {\n    return (\n      <div>\n\n        <RingProgress\n          mt={0}\n          size={100}\n          thickness={8}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 75\n                  ? \"#1D9B25\"\n                  : percentage > 60\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </div>\n    );\n  };\n\n  // useEffect(() => {\n  //   if (\n  //     routesClicked.at(-2) &&\n  //     routesClicked.at(-2) === \"/dashboard/keywords\"\n  //   ) {\n  //     const updateKeywordPayload = {\n  //       customerId: customerDetails.id,\n  //       keywordsPayload: keywordValues,\n  //     };\n\n  //     setNotification(true);\n  //     sleep(5000).then((data) => setNotification(false));\n\n  //     dispatch(updateKeywords(updateKeywordPayload));\n  //   }\n  // }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Grid.Col span={12}>\n              <Card>\n                <Grid>\n                  <Grid.Col span={2}>\n                    <Grid.Col span={12} style={{ textAlign: \"center\" }}>\n                      <Avatar color=\"blue\" size=\"lg\">\n                        <IconUser size=\"lg\" />\n                      </Avatar>\n                    </Grid.Col>\n                    {customerDetails.isHNI &&\n                      <Grid.Col span={12}>\n                        <Badge color=\"yellow\" variant=\"filled\" size=\"lg\">HNI</Badge>\n                      </Grid.Col>\n                    }\n\n\n                  </Grid.Col>\n\n                  <Grid.Col span={6}>\n                    <Text fw={500}>Basic Info</Text>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Name\"} subject={profile.full_name} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Email Address\"} subject={customerDetails.email} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Gender\"} subject={profile.gender} />\n                    </Grid.Col>\n                  </Grid.Col>\n                  <Grid.Col span={4}>\n                    <Grid.Col span={12} >\n                      <Center> {profileCompletion(customerProfileCompletion)}</Center>\n                    </Grid.Col>\n                  </Grid.Col>\n\n                </Grid>\n              </Card>\n            </Grid.Col>\n\n\n\n            <Grid.Col span={12}>\n              <Card shadow={\"lg\"} radius={\"md\"}>\n                <Routes>\n                  <Route>\n                    <Route\n                      index\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route\n                      path=\"/personalInformation\"\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route path=\"/profiling\" element={<Profiling />} />\n                    <Route\n                      path=\"/keywords\"\n                      element={\n                        <KeywordsEntry\n                          submitKeywords={submitKeywords}\n                          updateKeywordValuesParent={updateKeywordValuesParent}\n                          handleSubmitKeywords={handleSubmitKeywords}\n                        />\n                      }\n                    />\n\n                    <Route path=\"/interests\" element={<Interests />} />\n                    <Route path=\"/remarks\" element={<RemarkListings />} />\n                    <Route path=\"/occupation\" element={<Occupation />} />\n                    <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                    <Route path=\"/activity\" element={<Activity />} />\n                    <Route path=\"/fi\" element={<FinancialInformation />} />\n                    <Route path=\"/id\" element={<InsuranceDetails />} />\n                    <Route path=\"/vd\" element={<VehicleDetails />} />\n                  </Route>\n                </Routes>\n              </Card>\n\n            </Grid.Col>\n\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Syncing keywords\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  myRole: null,\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setAuth: (state, action) => {\n      const storage = JSON.parse(localStorage.getItem(\"login\"));\n      if (Object.keys(storage).length > 0) {\n        const { email, _id } = storage\n        state.user.email = email;\n        state.user._id = _id;\n        state.status = \"success\";\n        state.isLoggedIn = true;\n      } else {\n        state.isLoggedIn = false;\n      }\n    },\n\n    setMyRole: (state, action) => {\n      state.myRole = action.payload\n    }\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout, setMyRole } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n  \"campaignManagement/fetchRowData\",\n  async (_, { getState }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n    const responses = [];\n    let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n    for (const rowKey of Object.keys(state.rows)) {\n      const row = state.rows[rowKey];\n      if (!row.first || !row.second || !row.third) {\n        throw new Error(\"Row has empty/default values. Fetching aborted.\");\n      }\n\n      const body = {\n        information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n        category: row.second.toLowerCase().split(\" \").join(\"_\"),\n        value: row.third.toLowerCase().split(\" \").join(\"_\"),\n      };\n\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n      const customerIDsForThisRow = data.map((customer) => customer.id);\n\n      if (commonCustomerIDs === null) {\n        commonCustomerIDs = new Set(customerIDsForThisRow);\n      } else {\n        commonCustomerIDs = new Set(\n          [...commonCustomerIDs].filter((id) =>\n            customerIDsForThisRow.includes(id),\n          ),\n        );\n      }\n\n      responses.push({\n        rowKey,\n        figures: commonCustomerIDs.size,\n        customerIDs: [...commonCustomerIDs],\n      });\n    }\n    return responses;\n  },\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n  \"campaignManagement/fetchFiguresForRow\",\n  async (rowId, { getState }) => {\n    const state = getState().campaignManagement;\n    const row = state.rows[rowId];\n    if (!row || !row.first || !row.second || !row.third) {\n      throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n    }\n\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n    const body = {\n      information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n      category: row.second.toLowerCase().split(\" \").join(\"_\"),\n      value: row.third.toLowerCase().split(\" \").join(\"_\"),\n    };\n\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n    const customerIDsForThisRow = data.map((customer) => customer.id);\n\n    // Retrieve customer IDs from all preceding rows\n    let commonCustomerIDs = customerIDsForThisRow;\n    for (const otherRowId of Object.keys(state.rows)) {\n      if (Number(otherRowId) < Number(rowId)) {\n        const otherRow = state.rows[otherRowId];\n        commonCustomerIDs = commonCustomerIDs.filter((id) =>\n          otherRow.customerIDs.includes(id),\n        );\n      }\n    }\n\n    return {\n      rowId,\n      figures: commonCustomerIDs.length,\n      customerIDs: commonCustomerIDs,\n    };\n  },\n);\n\nexport const createCampaign = createAsyncThunk(\n  \"campaignManagement/createCampaign\",\n  async (_, { getState, rejectWithValue }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n    const keywordsUsed = state.selectedCombinations\n      .filter(\n        (combination) => combination.first === \"Interests\" && combination.third,\n      )\n      .map((combination) => combination.third.value);\n\n    const body = {\n      name: state.eventName,\n      eventBased: true,\n      triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n      type: \"EMAIL\",\n      recurrenceType:\n        state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n      start: state.tabData.Email.timelineState.startDate,\n      end: state.tabData.Email.timelineState.endDate,\n      templateText: state.tabData.Email.content,\n      customerIDs: state.allCustomerIDs,\n      keywordsUsed,\n    };\n\n    console.log(\"Publish body\", body);\n\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      console.log(\"response\", response);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create campaign\");\n      }\n\n      return response.json();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst initialState = {\n  isModalOpen: false,\n  dropdownData: {\n    \"Personal Information\": {\n      Age: [\"25-30\", \"31-35\"],\n      Gender: [\"Male\", \"Female\"],\n      \"Marital Status\": [\"Single\", \"Married\"],\n      Location: [\"Delhi\", \"Mumbai\"],\n    },\n    Interests: {},\n    Occupation: \"\",\n    Activity: \"\",\n    \"Family Details\": \"\",\n    \"Financial Information\": \"\",\n    \"Insurance Details\": \"\",\n    Vehicle: \"\",\n    Health: \"\",\n  },\n  rows: {\n    [Date.now().toString()]: {\n      first: \"\",\n      second: \"\",\n      third: \"\",\n      figures: null,\n      customerIDs: [],\n    },\n  },\n  allCustomerIDs: [],\n  selectedCombinations: [],\n  eventName: \"\",\n  eventDate: null,\n  step: 1,\n  activeTab: \"Email\",\n  startDate: null,\n  endDate: null,\n  tabData: {\n    Email: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 500,\n    },\n    SMS: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 160,\n    },\n    Notification: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 250,\n    },\n    Whatsapp: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 2000,\n    },\n  },\n  radarData: [\n    { count: 120, subject: \"EZ-Auto\" },\n    { count: 98, subject: \"Cyberior\" },\n    { count: 86, subject: \"Homecare\" },\n    { count: 99, subject: \"E-Portal 2.0\" },\n    { count: 85, subject: \"EZ-Travel\" },\n  ],\n  downloadDataStatus: null,\n  error: null,\n  rowIdsArray: [],\n  loadingStates: {},\n  errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n  name: \"campaignManagement\",\n  initialState,\n  reducers: {\n    toggleModal: (state, action) => {\n      state.isModalOpen = action.payload;\n    },\n    updateDropdownData: (state, action) => {\n      state.dropdownData = action.payload;\n    },\n    updateRows: (state, action) => {\n      state.rows = action.payload;\n      state.rowIdsArray = [];\n      state.allCustomerIDs = [\n        ...new Set(\n          Object.values(state.rows)\n            .filter((row) => row.customerIDs && row.customerIDs.length)\n            .flatMap((row) => row.customerIDs),\n        ),\n      ];\n    },\n    updateSelectedCombinations: (state, action) => {\n      state.selectedCombinations = action.payload;\n    },\n    setCampaignName: (state, action) => {\n      state.campaignName = action.payload;\n    },\n    setEventName: (state, action) => {\n      state.eventName = action.payload;\n    },\n    setEventDate: (state, action) => {\n      state.eventDate = action.payload;\n    },\n    setStep: (state, action) => {\n      state.step = action.payload;\n    },\n    setStartDate: (state, action) => {\n      state.startDate = action.payload;\n    },\n    setEndDate: (state, action) => {\n      state.endDate = action.payload;\n      state.eventDate = action.payload;\n    },\n    setActiveTab: (state, action) => {\n      state.activeTab = action.payload;\n    },\n    updateTabData: (state, action) => {\n      state.tabData = action.payload;\n    },\n    setRadarData: (state, action) => {\n      state.radarData = action.payload;\n    },\n    resetModal: (state) => {\n      state.step = initialState.step;\n      state.campaignName = initialState.campaignName;\n      state.eventName = initialState.eventName;\n      state.activeTab = initialState.activeTab;\n      state.tabData = initialState.tabData;\n      state.eventDate = initialState.eventDate;\n    },\n  },\n  extraReducers: {\n    [fetchRowData.pending]: (state) => {\n      state.downloadDataStatus = \"loading\";\n    },\n    [fetchRowData.fulfilled]: (state, action) => {\n      state.downloadDataStatus = \"success\";\n\n      action.payload.forEach((item) => {\n        state.rows[item.rowKey].figures = item.figures;\n        state.rows[item.rowKey].customerIDs = item.customerIDs;\n      });\n\n      state.rowIdsArray = [\n        ...new Set([\n          ...state.rowIdsArray,\n          ...action.payload.map((item) => item.rowKey),\n        ]),\n      ];\n\n      const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n      state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n    },\n    [fetchRowData.rejected]: (state, action) => {\n      state.downloadDataStatus = \"failed\";\n      state.error = action.error.message;\n    },\n    [fetchFiguresForRow.pending]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"loading\";\n      state.errors[rowId] = null;\n    },\n    [fetchFiguresForRow.fulfilled]: (state, action) => {\n      const { rowId, figures, customerIDs } = action.payload;\n      state.rows[rowId].figures = figures;\n      state.rows[rowId].customerIDs = customerIDs;\n      state.loadingStates[rowId] = \"loaded\";\n\n      const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n      if (Number(rowId) === lastRowId) {\n        state.allCustomerIDs = [...customerIDs];\n      }\n    },\n    [fetchFiguresForRow.rejected]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"error\";\n      state.errors[rowId] = action.error.message;\n    },\n  },\n});\n\nexport const {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n  setCampaignName,\n  setEventName,\n  setEventDate,\n  setStep,\n  setStartDate,\n  setEndDate,\n  setActiveTab,\n  updateTabData,\n  setRadarData,\n  resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nconst initialState = {\n  data: [],\n  campaignNames: [],\n  selectedCampaigns: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaigns = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n        state.campaignNames = action.payload.map((item) => item.campaignName);\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async (source) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async (source) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`,\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  campaignStatus: \"idle\",\n  campaigns: [],\n  error: null,\n};\n\nexport const fetchCampaigns = createAsyncThunk(\n  \"campaigns/fetchCampaigns\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/campaign`,\n      );\n      console.log(\"Campaign List response data\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching campaigns:\", error);\n      return rejectWithValue(\n        error.response?.data || \"Unable to fetch campaigns\",\n      );\n    }\n  },\n);\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchCampaigns.pending]: (state) => {\n      state.campaignStatus = \"loading\";\n      state.error = null; // Reset the error state\n    },\n    [fetchCampaigns.fulfilled]: (state, action) => {\n      console.log(\"Received campaigns:\", action.payload);\n      state.campaignStatus = \"success\";\n      state.campaigns = action.payload.map((campaign) => ({\n        ...campaign,\n        status: determineCampaignStatus(campaign),\n      }));\n      console.log(\"Final campaigns for table:\", action.payload);\n    },\n    [fetchCampaigns.rejected]: (state, action) => {\n      state.campaignStatus = \"failed\";\n      state.error = action.payload;\n    },\n  },\n});\n\nfunction determineCampaignStatus(campaign) {\n  const currentDate = new Date();\n  const startDate = new Date(campaign.start);\n  const endDate = new Date(campaign.end);\n\n  if (endDate < currentDate) return \"Closed\";\n  if (startDate > currentDate) return \"Pending\";\n  if (currentDate >= startDate && currentDate <= endDate)\n    return campaign.isActive ? \"On-going\" : \"Cancelled\";\n  return \"Unknown\";\n}\n\nexport default campaignSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\nimport profilingSlice from \"./profileTypesSlice\";\nimport campaignListSlice from \"./campaignListSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n    profileTypesCustomerMapping: profilingSlice,\n    campaignListSlice: campaignListSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n\n  const route_permission = {\n    \"profile_dashboard\": \"/\",\n    \"customer_dashboard\": \"/customers\"\n  }\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (getAllRolesPermissionsMappingsByUserStatus == \"success\") {\n      userPermissions.length > 0 && route_permission[userPermissions[0].name] ? navigate(route_permission[userPermissions[0].name]) : navigate(\"/pd\")\n\n    }\n  }, [getAllRolesPermissionsMappingsByUserStatus, navigate])\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#0d5ff9\", to: \"#F3F6FF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#0d5ff9\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      // topProps={() => (\n      //   <Flex>\n      //     <StyledButton\n      //       compact\n      //       onClick={() => {\n      //         console.log(\"Create Permission clicked!\");\n      //       }}\n      //     >\n      //       Create Permission\n      //     </StyledButton>\n      //   </Flex>\n      // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#0d5ff9\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#0d5ff9\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#0d5ff9\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n      const currentCombination = {\n        first: row.first,\n        second: row.second,\n        third: row.first === \"Interests\" ? option.value : option,\n      };\n\n      const isSelectedCombination = selectedCombinations.some(\n        (selected) =>\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      const isSelectedInCurrentRow = selectedCombinations.some(\n        (selected) =>\n          selected.rowId === rowId &&\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      return !isSelectedCombination || isSelectedInCurrentRow;\n    })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#0d5ff9\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#0d5ff9\"\n          fill=\"#0d5ff9\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#0d5ff9\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        border: \"2px solid #0d5ff9\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  useEffect(() => {\n    // Check if the Redux state `eventDate` is different from the local state `endDate`\n    // and if so, update the local state to match the Redux state\n    if (eventDate && (!results.endDate || results.endDate !== eventDate)) {\n      setResults((prevState) => ({\n        ...prevState,\n        endDate: eventDate,\n      }));\n\n      // Optionally, if you want to update the Redux state as well\n      dispatch(setEventDate(eventDate));\n    }\n  }, [eventDate, dispatch, results.endDate]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setRecurrenceTime(\"\");\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#0d5ff9\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#0d5ff9\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#0d5ff9\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#0d5ff9\"}\n                      bg={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#F3F6FF\",\n                          color: \"#0d5ff9\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${activeTab === tab ? \"show active\" : \"\"\n                      }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                              <div className=\"character-limit-error\">\n                                Character limit exceeded!\n                              </div>\n                            )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#F3F6FF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ActionIcon,\n  Box,\n  Flex,\n  MultiSelect,\n  Text,\n  Title,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { fetchData, selectCampaign } from \"../../redux/campaignSlice\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.campaign.data);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  const [selectedCampaigns, setSelectedCampaigns] = useState([]);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  const handleCampaignSelect = (selected) => {\n    setSelectedCampaigns(selected);\n    dispatch(selectCampaign(selected));\n  };\n\n  const filteredData =\n    selectedCampaigns.length > 0\n      ? data.filter((campaign) =>\n          selectedCampaigns.includes(campaign.campaignName),\n        )\n      : data;\n\n  // Map API data to chart data\n  const chartData = filteredData.map((item) => ({\n    ...item,\n    delivered: item.totalSent,\n    converted: item.success,\n    interested: item.success,\n    failure: item.failed,\n  }));\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#0d5ff9\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <MultiSelect\n              maw={320}\n              mx=\"auto\"\n              data={campaignNames}\n              placeholder={\"All\"}\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              searchable\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={handleCampaignSelect}\n              value={selectedCampaigns}\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={chartData}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"campaignName\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#F3F6FF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#0d5ff9\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#F3F6FF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#0d5ff9\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#0d5ff9\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#0d5ff9\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"}>\n              <Stack>\n                <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                  <Text fw={\"bold\"}>Communications</Text>\n                  <Center>\n                    <ActionIcon c={\"#0d5ff9\"}>\n                      <IconTableExport />\n                    </ActionIcon>\n                    <Text fw={\"bold\"}>Export</Text>\n                  </Center>\n                </Flex>\n                <Box>\n                  <VerticalBarChart />\n                </Box>\n              </Stack>\n            </Card>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import { ActionIcon, Flex } from \"@mantine/core\";\nimport { IconEdit, IconTrash } from \"@tabler/icons-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCampaigns } from \"../../../../redux/campaignListSlice\";\nimport StyledTable from \"../../../../StyledComponents/StyledTable\";\n\nconst AllCampaigns = () => {\n  const dispatch = useDispatch();\n  const campaignState = useSelector((state) => state.campaignListSlice);\n\n  useEffect(() => {\n    dispatch(fetchCampaigns());\n  }, [dispatch]);\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"name\",\n        header: \"Campaign Name\",\n      },\n      {\n        accessorKey: \"type\",\n        header: \"Communication Type\",\n      },\n      {\n        accessorKey: \"customers\",\n        header: \"Total No. of Customers\",\n        accessorFn: (row) => row.customers.length,\n      },\n      {\n        accessorKey: \"created_at\",\n        header: \"Create Campaign Date\",\n        accessorFn: (row) => new Date(row.created_at).toLocaleDateString(),\n      },\n      {\n        accessorKey: \"end\",\n        header: \"Event Date\",\n        accessorFn: (row) => new Date(row.end).toLocaleDateString(),\n      },\n      {\n        accessorKey: \"status\",\n        header: \"Campaign Status\",\n      },\n      {\n        accessorKey: \"actions\",\n        header: \"Action\",\n        Cell: ({ row }) => (\n          <Flex>\n            <ActionIcon color=\"lightblue\">\n              <IconEdit />\n            </ActionIcon>\n            <ActionIcon color=\"red\">\n              <IconTrash />\n            </ActionIcon>\n          </Flex>\n        ),\n      },\n    ],\n    [],\n  );\n\n  if (campaignState.campaignStatus === \"loading\") {\n    return <p>Loading...</p>;\n  }\n  if (campaignState.campaignStatus === \"failed\") {\n    return <p>Error loading campaigns. Details: {campaignState.error}</p>;\n  }\n  const reversedData = [...campaignState.campaigns].reverse();\n  const handleRowClick = () => {\n    console.log(\"Row clicked\");\n  };\n\n  return (\n    <StyledTable\n      columns={columns}\n      data={reversedData}\n      onRowClick={handleRowClick}\n    />\n  );\n};\n\nexport default AllCampaigns;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\nimport AllCampaigns from \"../AllCampaigns/AllCampaigns\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(\"keywords fetched for analysis\", keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n              ...updatedDropdownData[keyword.category],\n              { label: keyword.value, value: keyword.id },\n            ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Data Analysis\n            </Text>\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#0d5ff9\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#0d5ff9\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#0d5ff9\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n      <AllCampaigns />\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#0d5ff9\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#F3F6FF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#F3F6FF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#F3F6FF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#0d5ff9\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#0d5ff9\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#F3F6FF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #0d5ff9\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\nimport { IconUserDollar } from \"@tabler/icons-react\";\nimport { setMyRole } from \"../redux/authSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const dispatch = useDispatch()\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      dispatch(setMyRole(user.role.name))\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#00239c,#0d5ff9)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#0d5ff9)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            //            boxShadow: `\n            // rgba(13, 95, 249, 0.17) 0px -23px 25px 0px inset,\n            // rgba(13, 95, 249, 0.15) 0px -36px 30px 0px inset,\n            // rgba(13, 95, 249, 0.1) 0px -79px 40px 0px inset,\n            // rgba(13, 95, 249, 0.06) 0px 2px 1px,\n            // rgba(13, 95, 249, 0.09) 0px 4px 2px,\n            // rgba(13, 95, 249, 0.09) 0px 8px 4px,\n            // rgba(13, 95, 249, 0.09) 0px 16px 8px,\n            // rgba(13, 95, 249, 0.09) 0px 32px 16px\n            //    `,\n\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )}\n\n\n              {/* {true && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/profile\"\n                  label=\"Profiles\"\n                  icon={<IconUserDollar size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/profile\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )} */}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#F3F6FF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n        id: data.id,\n        roleId: data.roleId,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email.split(\"@\").length > 0 ? row.original.email.split(\"@\")[0] : \"\"}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          active\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton compact onClick={handleAddUserModal}>\n        //       + Create User\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            My Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#0d5ff9\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#0d5ff9\",\n                      \"&:hover\": {\n                        backgroundColor: \"#F3F6FF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#0d5ff9\",\n                  color: \"#0d5ff9\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F3F6FF\",\n                    color: \"#0d5ff9\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Change Password\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = ({ source }) => {\n  console.log(source);\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\nimport { useState } from \"react\";\n\nconst CustomerProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = ({ source }) => {\n  const dispatch = useDispatch();\n  console.log(\"source for profiles\", source);\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n  console.log(\"Chart data for profiles\", chartData);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  // const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  // const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    // if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      // onMouseEnter={() => dispatch(setHoveredItem(text))}\n      // onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        // transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        // style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        // transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        // fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        // transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  // const dispatch = useDispatch();\n  // const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    // dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    // dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#F3F6FF\"}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#0d5ff9\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#0d5ff9\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            // onMouseEnter={() => handleMouseEnter(entry.name)}\n            // onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                // sx={{\n                //   transition: \"transform 0.3s ease\",\n                //   transform:\n                //     hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                //   backgroundImage:\n                //     hoveredItem === entry.name\n                //       ? \"radial-gradient(#000000 20% ,#0d5ff9)\"\n                //       : \"none\",\n                // }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Flex\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        alignItems: \"stretch\",\n      }}\n    >\n      {/* First Card for Selectors and Pie Chart */}\n      <Flex\n        style={{\n          marginRight: \"20px\",\n          flex: 3,\n        }}\n      >\n        <Card shadow={\"lg\"} radius={\"md\"} style={{ width: \"100%\" }}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Profile\n                </Text>\n              </Center>\n              <Center>\n                <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                  <IconArrowRight />\n                </ActionIcon>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={12}>\n              <Stack>\n                <StyledSelect\n                  disabled={status === \"loading\"}\n                  label={\"Profile\"}\n                  placeholder={\"Select Profile(s)\"}\n                  data={profileOptions}\n                  onChange={(value) => setSelectedProfile(value)}\n                />\n                <StyledSelect\n                  disabled={status === \"loading\"}\n                  label={\"Demographics\"}\n                  placeholder={\"Select Main Demographics\"}\n                  data={demographicOptions}\n                  onChange={(value) => setSelectedDemographic(value)}\n                />\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={12}>\n              <Center>\n                {status === \"loading\" ? (\n                  <Loader c=\"5c0ff2\" size=\"lg\" />\n                ) : (\n                  <ProfilePieChart />\n                )}\n              </Center>\n            </Grid.Col>\n          </Grid>\n        </Card>\n      </Flex>\n\n      {/* Second Card for Profile Data */}\n      <Flex\n        style={{\n          flex: 1,\n        }}\n      >\n        <Card shadow={\"lg\"} radius={\"md\"} style={{ width: \"100%\" }}>\n          <Center style={{ height: \"100%\" }}>\n            <ProfileDataCard />\n          </Center>\n        </Card>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useMemo, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCustomerDetails } from \"../redux/customerSlice\";\nimport { useSelector } from \"react-redux\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\n\nexport default function ProfileTableDisplay({ customerList }) {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const customerDetailsStatus = useSelector(state => state.customer.customerDetailsStatus)\n\n\n\n  const handleRowClick = (customer) => {\n    dispatch(getCustomerDetails(customer.customerId));\n  };\n\n  useEffect(() => {\n    if (customerDetailsStatus === \"success\") {\n      navigate(\"/dashboard\");\n    }\n\n    console.log(customerDetailsStatus);\n  }, [customerDetailsStatus, navigate]);\n\n  const columns = [\n    {\n      accessorKey: \"customerName\",\n      header: \"Name\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"email\",\n      header: \"Email\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"source\",\n      header: \"Source\",\n    },\n    {\n      accessorKey: \"level\",\n      header: \"Level\",\n    }\n  ];\n\n\n\n\n  return (\n    <Box style={{ marginTop: \"30px\" }}>\n      <StyledTable columns={columns} data={customerList} onRowClick={handleRowClick} />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProfileTypes, fetchProfileMappings } from '../../redux/profileTypesSlice';\nimport { Grid, Card, Image, Text, Switch } from '@mantine/core';\nimport ProfileTableDisplay from '../../components/ProfileTableDisplay';\nimport { Button } from '@mantine/core';\nimport { IconArrowBack } from '@tabler/icons-react';\nimport { clearCurrentCustomer } from '../../redux/customerSlice';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const profileTypes = useSelector((state) => state.profileTypesCustomerMapping.profileTypes);\n  const status = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const error = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const profileMappings = useSelector((state) => state.profileTypesCustomerMapping.profileMappings);\n  const profileMappingsStatus = useSelector((state) => state.profileTypesCustomerMapping.profileMappingsStatus);\n  const [showTable, setShowTable] = useState(false);\n  const [checkedStates, setCheckedStates] = useState({})\n\n  const imageDict = {\n    'technology': 'https://imgur.com/a/cweY8fX',\n    'sports': 'https://imgur.com/a/9NKkaqR',\n    'music': 'https://imgur.com/a/zlQUb16',\n    'gadget': 'https://imgur.com/kQHQ4IS',\n    'food': 'https://imgur.com/a/hxhCUq9',\n    'fitness': 'https://imgur.com/eFsmreM',\n    'travel': 'https://imgur.com/iUw4buI',\n    'automobile': 'https://imgur.com/B4aIhl5'\n  }\n\n  useEffect(() => {\n    dispatch(clearCurrentCustomer());\n    dispatch(fetchProfileTypes());\n  }, [dispatch]);\n\n  const handleProfileTypeClick = (profileTypeId) => {\n    dispatch(fetchProfileMappings(profileTypeId));\n    setShowTable(true);\n  };\n\n  const handleSwitchChange = (profileTypeId, isChecked) => {\n    setCheckedStates((prevStates) => ({\n      ...prevStates,\n      [profileTypeId]: isChecked,\n    }));\n  };\n\n  const handleTableRender = () => {\n    if (profileMappingsStatus === 'loading') {\n      return <>Loading ...</>;\n    } else if (profileMappingsStatus === 'failed') {\n      return <>Something went wrong</>;\n    } else if (profileMappingsStatus === 'succeeded') {\n      return <ProfileTableDisplay customerList={profileMappings} />;\n    }\n  };\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Profile Types</h1>\n      <Grid>\n        {!showTable ? (\n          profileTypes.map((profileType) => (\n            <Grid.Col span={3} key={profileType.id}>\n              <Card shadow=\"sm\" padding=\"lg\" component=\"a\" target=\"_blank\">\n                <Card.Section>\n                  {console.log(imageDict[profileType.name])}\n                  <Image\n                    src={imageDict[profileType.name]}\n                    style={{ width: '200px', height: '200px' }}\n                  />\n                </Card.Section>\n\n                <Card.Section style={{ padding: '10px' }}>\n                  <Text\n                    fw={500}\n                    size=\"lg\"\n                    style={{ display: 'inline-block', marginRight: '10px', cursor: 'pointer' }}\n                    onClick={() => handleProfileTypeClick(profileType.id)}\n                  >\n                    {profileType.name}\n                  </Text>\n\n                  <Switch\n                    checked={checkedStates[profileType.id] || false}\n                    onChange={(event) => handleSwitchChange(profileType.id, event.currentTarget.checked)}\n                    style={{ display: 'inline-block', float: 'right' }}\n                  />\n                </Card.Section>\n              </Card>\n            </Grid.Col>\n          ))\n        ) : (\n          <>\n            <Button onClick={() => setShowTable(false)} variant=\"text\">\n              <IconArrowBack /> Back\n            </Button>\n            <br />\n            {handleTableRender()}\n          </>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\nimport { setAuth } from \"./redux/authSlice\";\nimport Profile from './pages/Profile/Profile'\nimport AllCampaigns from \"./pages/Campaign/components/AllCampaigns/AllCampaigns\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  useEffect(() => {\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\n    if (isLoggedIn) {\n      dispatch(setAuth());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {hasPermission(userPermissions, \"profile_dashboard\") ? (\n                <PrivateRoute path=\"/\" element={<Root />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute path=\"/users\" element={<PermissionDenied />} />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n              <PrivateRoute path=\"/pd\" element={<PermissionDenied />} />\n              <PrivateRoute path=\"/profile\" element={<Profile />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}