{"version":3,"sources":["i18n.js","utils/sleep.js","redux/customerSlice.js","StyledComponents/StyledTable.jsx","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/StatCard.jsx","redux/profileTypesSlice.js","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","components/AgentPages/Remarks.tsx","components/Remarks/RemarkListings.jsx","components/FinancialInformation/FinancialInformation.jsx","components/InsuranceDetails/InsuranceDetails.jsx","components/VehicleDetails/VehicleDetails.jsx","pages/Dashboard/InfoTag.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/campaignListSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/AllCampaigns/AllCampaigns.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","components/ProfileTableDisplay.jsx","pages/Profile/Profile.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","getCustomerRemarks","_ref5","_callee5","customerId","_yield$axios$get5","_context5","_x3","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","customerRemarks","remarksStatus","reducers","setCurrentCustomer","state","action","payload","clearCurrentCustomer","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","updatedCustomers","customer","profileCompletion","_objectSpread","profile_completion","_customerSlice$action","actions","StyledTable","_ref","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","_ref2","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","size","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","TableDisplay","customerList","dispatch","useDispatch","navigate","useNavigate","useSelector","useEffect","useMemo","accessorFn","_row$profiling","_row$profiling$person","profiling","personal_details","full_name","header","substr","accessorKey","minSize","percentage","RingProgress","thickness","sections","value","label","weight","align","Loader","type","Customers","_useSelector","refreshButton","IconRefresh","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","fontFamily","fontWeight","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","variant","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconClipboardText","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","location","useLocation","links","item","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","ta","fz","Badge","Progress","fetchData","response","process","t0","fetchProfileTypes","fetchProfileMappings","profileId","profilingSlice","profileTypes","profileMappings","profileTypesStatus","profileMappingsStatus","error","builder","addCase","message","Profiling","profileData","profileTypesCustomerMapping","stats","profile","Grid","Col","span","profileType","srcUrl","Math","round","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","source","memoizedSelectedCustomer","randomDetails","randomLocation","faker","city","randomState","randomAddress","streetAddress","randomPincode","zipCode","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","handleSubmitKeywords","setData","_useSelector2","rolePermission","rolesPermissionsStatus","_useSelector3","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","setUnknowns","_useState9","_useState10","isDataChanged","setDataChanged","transformedData","category","allKeywords","unknownValues","filter","obj","hasChanged","isEqual","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","readOnly","alignSelf","Interests","interests","setInterests","groupedByCategory","groupBy","uniq","interest","React","Fragment","gradient","from","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","tempEditData","setTempEditData","headerElements","headerItem","index","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","toString","bg","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","industry","incomeBracket","Occupation","gender","relationship","phone","email","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Remarks","Textarea","RemarkListings","currentCustomerId","_useDisclosure","useDisclosure","_useDisclosure2","opened","_useDisclosure2$","open","close","selectedRemark","setSelectedRemark","remark","Modal","onClose","centered","agentName","date","time","acc_no","ifsc","branch","FinancialInformation","validity","expiry","InsuranceDetails","vin","product_type","VehicleDetails","Dashboard","submitKeywords","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","_useState11","auth","isLoggedIn","_useState12","_useState13","_useState14","_useState15","_useState16","pathname","LoadingOverlay","visible","overlayBlur","loaderProps","Card","textAlign","isHNI","phone_number","undefined","Routes","Route","element","path","keywordsPayload","then","Notification","loading","withCloseButton","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","window","atob","charCodeAt","slice","join","JSON","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_yield$axios$post3","_x4","authSlice","user","userStatus","users","setAuth","logout","localStorage","clear","defaults","headers","common","reload","storage","getItem","_id","access_token","_parseJwt","sub","setItem","stringify","_parseJwt2","_authSlice$actions","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","_ref6","createRolesPermissionMapping","_ref7","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_context9","_x6","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","_rolesPermissionSlice","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","keywordsUsed","selectedCombinations","combination","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","isModalOpen","dropdownData","Age","Gender","Location","Vehicle","Health","Date","now","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","campaignSlice","campaignNames","selectedCampaigns","selectCampaign","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","fetchCampaigns","_error$response","determineCampaignStatus","campaign","currentDate","isActive","campaignStatus","campaigns","store","configureStore","reducer","campaignManagementReducer","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","campaignListSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","h","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","assets","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","entries","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","floor","random","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","Divider","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","Space","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","min","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","setSelectedCampaigns","margin","chartData","delivered","totalSent","converted","success","interested","failure","failed","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","AllCampaigns","campaignState","reversedData","reverse","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","IconUserDollar","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","handleUserActionModal","selected_user","updatedUserData","overlayColor","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","address","pincode","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","handleSubmit","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","strokeDasharray","CustomerProfileAnalysis","selectedSource","setSelectedSource","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$text","textColor","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","flex","Root","ProfileTableDisplay","Profile","_React$useState","_React$useState2","setChecked","showTable","setShowTable","IconArrowBack","profileTypeId","float","App","setColorScheme","login","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.0b038e1d.chunk.js","sourcesContent":["import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory: [],\n  fetchedPofileCompleteness: false,\n  customerServiceHistoryStatus: \"idle\",\n  customerDetailsStatus: \"idle\",\n  customerRemarks: [], // New field for storing customer remarks\n  remarksStatus: \"idle\", // New status field for customer remarks\n};\n\nexport const getCustomers = createAsyncThunk(\n  \"customer/getCustomers\",\n  async () => {\n    // await sleep(3000)\n    const { data } = await axios.get(\"/customers\");\n    return data;\n  },\n);\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\n  \"customer/getCustomersProfileCompleteness\",\n  async () => {\n    await sleep(200);\n    const { data } = await axios.get(\"/profile\");\n    return data;\n  },\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  },\n);\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerServicesHistory\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  },\n);\n\nexport const getCustomerRemarks = createAsyncThunk(\n  \"customer/getCustomerRemarks\",\n  async (customerId) => {\n    const { data } = await axios.get(\"/customers/remarks/\" + customerId);\n    console.log(\"Remarks in thunk\", data);\n    return data;\n  },\n);\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer: (state, action) => {\n      state.customerDetails = action.payload;\n    },\n    clearCurrentCustomer: (state, action) => {\n      state.customerDetails = []\n      state.customerDetailsStatus = \"idle\"\n    }\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const curr_state_obj = {};\n      const res_obj = {};\n      state.customers.map((e) => (curr_state_obj[e.id] = e));\n      action.payload.customer_details.map((e) => (res_obj[e.id] = e));\n      state.customers = Object.values(Object.assign(curr_state_obj, res_obj));\n    },\n    [getCustomers.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerDetails.pending]: (state) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload;\n    },\n    [getCustomerDetails.rejected]: (state) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion\n          ? action.payload.profileCompletion[customer.id]\n          : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n      state.customers = updatedCustomers;\n      state.fetchedPofileCompleteness = true;\n    },\n    [getCustomersProfileCompleteness.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n    [getCustomerRemarks.pending]: (state) => {\n      state.remarksStatus = \"loading\";\n    },\n    [getCustomerRemarks.fulfilled]: (state, action) => {\n      state.remarksStatus = \"success\";\n      state.customerRemarks = action.payload; // Assuming API returns an array of remarks\n    },\n    [getCustomerRemarks.rejected]: (state) => {\n      state.remarksStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer, clearCurrentCustomer } = customerSlice.actions;\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  console.log(\"topProps\", topProps);\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import { useMemo, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getCustomerDetails } from \"../redux/customerSlice\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\nexport default function TableDisplay({\n  customerList,\n  fetchedPofileCompleteness,\n  topProps,\n}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const customerDetailsStatus = useSelector(state => state.customer.customerDetailsStatus)\n\n\n  const profileCompletion = (percentage) => {\n    return (\n      <Box>\n        <RingProgress\n          size={45}\n          thickness={3}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 25\n                  ? \"#1D9B25\"\n                  : percentage > 50\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </Box>\n    );\n  };\n\n  const handleRowClick = (customer) => {\n    console.log(customer);\n    dispatch(getCustomerDetails(customer.id));\n  };\n\n\n  useEffect(() => {\n    if (customerDetailsStatus === \"success\") {\n      navigate(\"/dashboard\");\n    }\n  }, [customerDetailsStatus, navigate]);\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorFn: (row) => `${row.profiling?.personal_details?.full_name}`,\n        id: \"name\",\n        header: \"Name\",\n      },\n      {\n        accessorFn: (row) => `CLID${row.id.substr(0, 6)}....`,\n        id: \"customerId\",\n        header: \"Customer Id\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 400,\n      },\n      {\n        accessorKey: \"source\",\n        header: \"Source\",\n      },\n      {\n        accessorKey: \"mobile\",\n        header: \"Mobile\",\n      },\n      {\n        accessorFn: (row) =>\n          !fetchedPofileCompleteness ? (\n            <Loader type={\"dots\"} color=\"#0d5ff9\" />\n          ) : (\n            profileCompletion(row.profile_completion)\n          ),\n        id: \"profileCompletion\",\n        header: \"Profile Completion\",\n      },\n    ],\n    [fetchedPofileCompleteness],\n  );\n\n  return (\n    <Box>\n      <StyledTable\n        columns={columns}\n        data={customerList}\n        onRowClick={handleRowClick}\n        topProps={topProps}\n      />\n    </Box>\n  );\n}\n","import {\n  LoadingOverlay,\n  Title,\n  Button,\n  ActionIcon,\n  Loader,\n  Center,\n  Stack,\n} from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n  clearCurrentCustomer,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\nimport { IconRefresh } from \"@tabler/icons-react\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n  const { status, customers, fetchedPofileCompleteness } = useSelector(\n    (state) => state.customer,\n  );\n\n  useEffect(() => {\n    dispatch(clearCurrentCustomer());\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  }, [dispatch]);\n\n  const handleRefresh = () => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  };\n\n  const refreshButton = (\n    <ActionIcon c={\"#0d5ff9\"} size={\"sm\"} onClick={handleRefresh}>\n      <IconRefresh />\n    </ActionIcon>\n  );\n\n  if (status === \"loading\") {\n    return (\n      <Center>\n        <Loader c=\"#0d5ff9\" size=\"lg\" />\n      </Center>\n      // <LoadingOverlay\n      //   visible\n      //   overlayBlur={2}\n      //   overlayColor={\"#F3F6FF\"}\n      //   loaderProps={{\n      //     color: \"#0d5ff9\",\n      //     size: \"xl\",\n      //     variant: \"dots\",\n      //   }}\n      // />\n    );\n  } else {\n    return (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n            <div style={{ padding: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"20px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <span>\n                  <Title pl={5}>Customers</Title>\n                </span>\n              </div>\n              <TableDisplay\n                customerList={customers}\n                fetchedPofileCompleteness={fetchedPofileCompleteness}\n                topProps={() => refreshButton}\n              />\n            </div>\n          </span>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconClipboardText,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #0d5ff9\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0D5FF9\",\n      boxShadow: `\n rgba(13, 95, 249, 1) 0px 1px 1px,\n rgba(13, 95, 249, 0.5) 0px 2px 2px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 3px 5px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"remarks\", label: \"Remarks\", icon: <IconClipboardText /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  { link: \"fi\", label: \"Financial Information\", icon: <IconReportMoney /> },\n  { link: \"id\", label: \"Insurance Details  \", icon: <IconCarCrash /> },\n  { link: \"vd\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const location = useLocation();\n\n  const links = data.map((item) => (\n    <NavLink\n      className={cx(classes.link, {\n        [classes.linkActive]: item.label === active,\n      })}\n      icon={item.icon}\n      component={Link}\n      variant=\"subtle\"\n      to={item.link}\n      label={item.label}\n      key={item.label}\n      onClick={(event) => {\n        setActive(item.label);\n      }}\n    />\n  ));\n\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to={\"/dashboard\"}\n            onClick={console.log(location)}\n            c=\"#0d5ff9\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    <Badge size=\"lg\">{percentage}%</Badge>\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            {/* <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group> */}\n        </Paper>\n    );\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  data: [],\n  profileTypes: [],\n  profileMappings: [],\n  status: \"idle\",\n  profileTypesStatus: \"idle\",\n  profileMappingsStatus: \"idle\",\n  error: null,\n};\n\n// Async thunk for fetching customer data\nexport const fetchData = createAsyncThunk(\n  \"profiling/fetchData\",\n  async (customerId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/customer-mapping/${customerId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile types\nexport const fetchProfileTypes = createAsyncThunk(\n  \"profiling/fetchProfileTypes\",\n  async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-types`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\n// Async thunk for fetching profile mappings by profile ID\nexport const fetchProfileMappings = createAsyncThunk(\n  \"profiling/fetchProfileMappings\",\n  async (profileId) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/profile-customer-mappings-by-profile/${profileId}`,\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n);\n\nconst profilingSlice = createSlice({\n  name: \"profiling\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error =\n          action.error.message ||\n          \"Failed to fetch profile types for the customer\";\n      })\n      .addCase(fetchProfileTypes.pending, (state) => {\n        state.profileTypesStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileTypes.fulfilled, (state, action) => {\n        state.profileTypesStatus = \"succeeded\";\n        state.profileTypes = action.payload;\n      })\n      .addCase(fetchProfileTypes.rejected, (state, action) => {\n        state.profileTypesStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile types\";\n      })\n      .addCase(fetchProfileMappings.pending, (state) => {\n        state.profileMappingsStatus = \"loading\";\n        state.error = null;\n      })\n      .addCase(fetchProfileMappings.fulfilled, (state, action) => {\n        state.profileMappingsStatus = \"succeeded\";\n        state.profileMappings = []\n        state.profileMappings = action.payload;\n      })\n      .addCase(fetchProfileMappings.rejected, (state, action) => {\n        state.profileMappingsStatus = \"failed\";\n        state.error =\n          action.error.message || \"Failed to fetch profile mappings\";\n      });\n  },\n});\n\nexport default profilingSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"@mantine/core\";\nimport { StatsCard } from \"./StatCard\";\nimport { fetchData } from \"../../redux/profileTypesSlice\";\n\nconst Profiling = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(\n    (state) => state.profileTypesCustomerMapping.data,\n  );\n  const { customerDetails } = useSelector((state) => state.customer);\n\n  console.log(\"Profiling data\", profileData);\n\n  useEffect(() => {\n    dispatch(fetchData(customerDetails.id));\n  }, [dispatch, customerDetails]);\n\n  const stats = profileData.map((profile) => (\n    <Grid.Col key={profile.profileType.id} span={4}>\n      <StatsCard\n        title={profile.profileType.name}\n        url={profile.profileType.srcUrl}\n        percentage={Math.round(profile.profileCompletion)}\n      />\n    </Grid.Col>\n  ));\n\n  return (\n    <>\n      <Grid gutter=\"xl\">{stats}</Grid>\n    </>\n  );\n};\n\nexport default Profiling;\n\n","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport InfoTag from \"./InfoTag\";\nimport { fakerEN_IN as faker } from \"@faker-js/faker\";\nimport { useSelector } from \"react-redux\";\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { customerDetails } = useSelector((state) => state.customer);\n  console.log(\"state\", customerDetails);\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n  const memoizedSelectedCustomer = useMemo(\n    () => selectedCustomer,\n    [selectedCustomer.id, selectedCustomer.profiling.personal_details],\n  );\n\n  const randomDetails = useMemo(() => {\n    return {\n      randomLocation: faker.location.city(),\n      randomState: faker.location.state(),\n      randomAddress: faker.location.streetAddress(),\n      randomPincode: faker.location.zipCode(),\n    };\n  }, [memoizedSelectedCustomer]);\n\n\n  if (profile) {\n    return (\n      <>\n        <Container>\n\n          <div>\n            <Text fw={500}>Address</Text>\n            <Grid gutter=\"xl\">\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Location(city)\"}\n                  subject={randomDetails.randomLocation}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"State\"} subject={randomDetails.randomState} />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"PINCODE\"}\n                  subject={randomDetails.randomPincode}\n                />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag title={\"Country\"} subject=\"India\" />\n              </Grid.Col>\n              <Grid.Col span={6}>\n                <InfoTag\n                  title={\"Address Line\"}\n                  subject={randomDetails.randomAddress}\n                />\n              </Grid.Col>\n            </Grid>\n          </div>\n        </Container>\n      </>\n    );\n\n  } else {\n    return (\n      <>Fetching profile ...</>\n    )\n  }\n\n\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent, handleSubmitKeywords }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n  const [isDataChanged, setDataChanged] = useState(false);\n\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n\n\n  useEffect(() => {\n    const hasChanged = !_.isEqual(values, transformedData.map((obj) => obj.value));\n    setDataChanged(hasChanged);\n  }, [values, transformedData]);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          <div style={{ alignSelf: \"center\", padding: \"10px\" }}>\n            {isDataChanged && hasPermission(userPermissions, \"keywords_edit\") && <Button variant=\"light\"\n              onClick={() => handleSubmitKeywords()}\n            >\n              Update keywords\n            </Button>\n            }\n\n          </div>\n\n\n\n          {/* <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div> */}\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\n\nconst Interests = () => {\n  const dispatch = useDispatch()\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { customerKeywords, customerKeywordsStatus } = useSelector((state) => state.keyword);\n  const [interests, setInterests] = useState([])\n\n\n\n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      // Use _.uniq to remove duplicate values\n      const uniqueValues = _.uniq(_.map(values, 'value'));\n      return { category, values: uniqueValues };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n\n  useEffect(() => {\n    if (customerKeywordsStatus == 'success') {\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n      {customerKeywordsStatus == 'success' ?\n        <>\n          {interests.map((interest) => (\n            <React.Fragment key={interest.category}>\n              <Text fw={700}>{interest.category}</Text>\n              {interest.values.map((value) => (\n                <Badge\n                  key={value}\n                  variant=\"gradient\"\n                  gradient={{ from: 'indigo', to: 'cyan' }}\n                >\n                  {value}\n                </Badge>\n              ))}\n            </React.Fragment>\n          ))}\n        </> :\n        <>Loading interests...</>\n      }\n\n\n    </>\n\n  )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport { useDisclosure } from \"@mantine/hooks\";\nimport { Modal, Group, Button } from \"@mantine/core\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport { getCustomerRemarks } from \"../../redux/customerSlice\"; // replace 'path_to_your' with the actual path\n\nconst RemarkListings = () => {\n  const dispatch = useDispatch();\n  const customerRemarks = useSelector(\n    (state) => state.customer.customerRemarks,\n  );\n  const remarksStatus = useSelector((state) => state.customer.remarksStatus);\n  const currentCustomerId = useSelector(\n    (state) => state.customer.customerDetails.id,\n  ); // Assuming 'id' is the field in customerDetails for the customer's ID\n\n  const [opened, { open, close }] = useDisclosure(false);\n  const [selectedRemark, setSelectedRemark] = useState(null);\n\n  useEffect(() => {\n    if (currentCustomerId) {\n      dispatch(getCustomerRemarks(currentCustomerId));\n    }\n  }, [dispatch, currentCustomerId]);\n\n  // Define columns for StyledTable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"agentName\",\n        header: \"Agent Name\",\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Date\",\n      },\n      {\n        accessorKey: \"time\",\n        header: \"Time\",\n      },\n      {\n        accessorKey: \"remark\",\n        header: \"Remark\",\n      },\n    ],\n    [],\n  );\n\n  const handleRowClick = (remark) => {\n    setSelectedRemark(remark);\n    open();\n  };\n\n  return (\n    <>\n      <Box>\n        {remarksStatus === \"success\" ? (\n          <StyledTable\n            columns={columns}\n            data={customerRemarks}\n            onRowClick={handleRowClick}\n          />\n        ) : remarksStatus === \"loading\" ? (\n          <p>Loading...</p>\n        ) : (\n          <p>Failed to load remarks.</p>\n        )}\n      </Box>\n\n      <Modal opened={opened} onClose={close} title=\"Remark Details\" centered>\n        {selectedRemark && (\n          <div>\n            <p>\n              <strong>Agent Name:</strong> {selectedRemark.agentName}\n            </p>\n            <p>\n              <strong>Date:</strong> {selectedRemark.date}\n            </p>\n            <p>\n              <strong>Time:</strong> {selectedRemark.time}\n            </p>\n            <p>\n              <strong>Remark:</strong> {selectedRemark.remark}\n            </p>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default RemarkListings;\n","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Financial Information';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'Acc. No', 'Variant', 'IFSC code', 'Branch'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    acc_no: '',\n    variant: '',\n    ifsc: '',\n    branch: '',\n});\n\n\nexport function FinancialInformation() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Insurance Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Source', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    source: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function InsuranceDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Vehicle Details';\n\n\n\nconst initialData = [];\n\nconst headerData = ['Name', 'VIN/Chassis no.', 'Product Type', 'Validity(in years)', 'Expiry date', 'Status'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    vin: '',\n    product_type: '',\n    validity: '',\n    expiry: '',\n    status: '',\n});\n\n\nexport function VehicleDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { Text } from '@mantine/core';\nimport React from 'react';\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: \"-10px\" }}>\n            <Text fz={'sm'} c='dimmed' style={{ alignSelf: \"start\" }}>{title}</Text>\n            <Text style={{ alignSelf: \"end\" }}>{subject}</Text>\n        </div>\n    );\n};\n\nexport default InfoTag;\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n  Space,\n  Center,\n  RingProgress,\n  Text,\n  Badge\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\nimport Remarks from \"../../components/AgentPages/Remarks\";\nimport RemarkListings from \"../../components/Remarks/RemarkListings\";\nimport { FinancialInformation } from \"../../components/FinancialInformation/FinancialInformation\";\nimport { InsuranceDetails } from \"../../components/InsuranceDetails/InsuranceDetails\";\nimport { VehicleDetails } from \"../../components/VehicleDetails/VehicleDetails\";\nimport { IconUserSquareRounded } from '@tabler/icons-react';\nimport { Avatar } from '@mantine/core';\nimport { IconUser } from \"@tabler/icons-react\";\nimport InfoTag from \"./InfoTag\";\n\n\n\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const [profile, setProfile] = useState({\n    ...customerDetails.profiling.personal_details,\n  });\n  const { profile_completion } = customerDetails;\n\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  const handleSubmitKeywords = () => {\n\n    const payload = {\n      customerId: customerDetails.id,\n      keywordsPayload: keywordValues,\n    };\n    setNotification(true);\n    sleep(5000).then((data) => setNotification(false));\n    dispatch(updateKeywords(payload));\n\n\n  }\n\n  const profileCompletion = (percentage = 0) => {\n    return (\n      <div>\n\n        <RingProgress\n          mt={0}\n          size={100}\n          thickness={8}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 75\n                  ? \"#1D9B25\"\n                  : percentage > 60\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </div>\n    );\n  };\n\n  // useEffect(() => {\n  //   if (\n  //     routesClicked.at(-2) &&\n  //     routesClicked.at(-2) === \"/dashboard/keywords\"\n  //   ) {\n  //     const updateKeywordPayload = {\n  //       customerId: customerDetails.id,\n  //       keywordsPayload: keywordValues,\n  //     };\n\n  //     setNotification(true);\n  //     sleep(5000).then((data) => setNotification(false));\n\n  //     dispatch(updateKeywords(updateKeywordPayload));\n  //   }\n  // }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Grid.Col span={12}>\n              <Card>\n                <Grid>\n                  <Grid.Col span={2}>\n                    <Grid.Col span={12} style={{ textAlign: \"center\" }}>\n                      <Avatar color=\"blue\" size=\"lg\">\n                        <IconUser size=\"lg\" />\n                      </Avatar>\n                    </Grid.Col>\n                    {customerDetails.isHNI &&\n                      <Grid.Col span={12}>\n                        <Badge color=\"yellow\" variant=\"filled\" size=\"lg\">HNI</Badge>\n                      </Grid.Col>\n                    }\n\n\n                  </Grid.Col>\n\n                  <Grid.Col span={6}>\n                    <Text fw={500}>Basic Info</Text>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Name\"} subject={profile.full_name} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Email Address\"} subject={customerDetails.email} />\n                    </Grid.Col>\n                    <Grid.Col span={12}>\n                      <InfoTag title={\"Gender\"} subject={profile.gender} />\n                    </Grid.Col>\n                  </Grid.Col>\n                  <Grid.Col span={4}>\n                    <Grid.Col span={12} >\n                      <Center> {profileCompletion(profile_completion)}</Center>\n                    </Grid.Col>\n                  </Grid.Col>\n\n                </Grid>\n              </Card>\n            </Grid.Col>\n\n\n\n            <Grid.Col span={12}>\n              <Card shadow={\"lg\"} radius={\"md\"}>\n                <Routes>\n                  <Route>\n                    <Route\n                      index\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route\n                      path=\"/personalInformation\"\n                      element={\n                        <PersonalInformation selectedCustomer={customerDetails} />\n                      }\n                    />\n                    <Route path=\"/profiling\" element={<Profiling />} />\n                    <Route\n                      path=\"/keywords\"\n                      element={\n                        <KeywordsEntry\n                          submitKeywords={submitKeywords}\n                          updateKeywordValuesParent={updateKeywordValuesParent}\n                          handleSubmitKeywords={handleSubmitKeywords}\n                        />\n                      }\n                    />\n\n                    <Route path=\"/interests\" element={<Interests />} />\n                    <Route path=\"/remarks\" element={<RemarkListings />} />\n                    <Route path=\"/occupation\" element={<Occupation />} />\n                    <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                    <Route path=\"/activity\" element={<Activity />} />\n                    <Route path=\"/fi\" element={<FinancialInformation />} />\n                    <Route path=\"/id\" element={<InsuranceDetails />} />\n                    <Route path=\"/vd\" element={<VehicleDetails />} />\n                  </Route>\n                </Routes>\n              </Card>\n\n            </Grid.Col>\n\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Syncing keywords\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setAuth: (state, action) => {\n      const storage = JSON.parse(localStorage.getItem(\"login\"));\n      if (Object.keys(storage).length > 0) {\n        const { email, _id } = storage\n        state.user.email = email;\n        state.user._id = _id;\n        state.status = \"success\";\n        state.isLoggedIn = true;\n      } else {\n        state.isLoggedIn = false;\n      }\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n  \"campaignManagement/fetchRowData\",\n  async (_, { getState }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n    const responses = [];\n    let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n    for (const rowKey of Object.keys(state.rows)) {\n      const row = state.rows[rowKey];\n      if (!row.first || !row.second || !row.third) {\n        throw new Error(\"Row has empty/default values. Fetching aborted.\");\n      }\n\n      const body = {\n        information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n        category: row.second.toLowerCase().split(\" \").join(\"_\"),\n        value: row.third.toLowerCase().split(\" \").join(\"_\"),\n      };\n\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n      const customerIDsForThisRow = data.map((customer) => customer.id);\n\n      if (commonCustomerIDs === null) {\n        commonCustomerIDs = new Set(customerIDsForThisRow);\n      } else {\n        commonCustomerIDs = new Set(\n          [...commonCustomerIDs].filter((id) =>\n            customerIDsForThisRow.includes(id),\n          ),\n        );\n      }\n\n      responses.push({\n        rowKey,\n        figures: commonCustomerIDs.size,\n        customerIDs: [...commonCustomerIDs],\n      });\n    }\n    return responses;\n  },\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n  \"campaignManagement/fetchFiguresForRow\",\n  async (rowId, { getState }) => {\n    const state = getState().campaignManagement;\n    const row = state.rows[rowId];\n    if (!row || !row.first || !row.second || !row.third) {\n      throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n    }\n\n    const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n    const body = {\n      information_type: row.first.toLowerCase().split(\" \").join(\"_\"),\n      category: row.second.toLowerCase().split(\" \").join(\"_\"),\n      value: row.third.toLowerCase().split(\" \").join(\"_\"),\n    };\n\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n    const customerIDsForThisRow = data.map((customer) => customer.id);\n\n    // Retrieve customer IDs from all preceding rows\n    let commonCustomerIDs = customerIDsForThisRow;\n    for (const otherRowId of Object.keys(state.rows)) {\n      if (Number(otherRowId) < Number(rowId)) {\n        const otherRow = state.rows[otherRowId];\n        commonCustomerIDs = commonCustomerIDs.filter((id) =>\n          otherRow.customerIDs.includes(id),\n        );\n      }\n    }\n\n    return {\n      rowId,\n      figures: commonCustomerIDs.length,\n      customerIDs: commonCustomerIDs,\n    };\n  },\n);\n\nexport const createCampaign = createAsyncThunk(\n  \"campaignManagement/createCampaign\",\n  async (_, { getState, rejectWithValue }) => {\n    const state = getState().campaignManagement;\n    const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n    const keywordsUsed = state.selectedCombinations\n      .filter(\n        (combination) => combination.first === \"Interests\" && combination.third,\n      )\n      .map((combination) => combination.third.value);\n\n    const body = {\n      name: state.eventName,\n      eventBased: true,\n      triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n      type: \"EMAIL\",\n      recurrenceType:\n        state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n      start: state.tabData.Email.timelineState.startDate,\n      end: state.tabData.Email.timelineState.endDate,\n      templateText: state.tabData.Email.content,\n      customerIDs: state.allCustomerIDs,\n      keywordsUsed,\n    };\n\n    console.log(\"Publish body\", body);\n\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      console.log(\"response\", response);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create campaign\");\n      }\n\n      return response.json();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst initialState = {\n  isModalOpen: false,\n  dropdownData: {\n    \"Personal Information\": {\n      Age: [\"25-30\", \"31-35\"],\n      Gender: [\"Male\", \"Female\"],\n      \"Marital Status\": [\"Single\", \"Married\"],\n      Location: [\"Delhi\", \"Mumbai\"],\n    },\n    Interests: {},\n    Occupation: \"\",\n    Activity: \"\",\n    \"Family Details\": \"\",\n    \"Financial Information\": \"\",\n    \"Insurance Details\": \"\",\n    Vehicle: \"\",\n    Health: \"\",\n  },\n  rows: {\n    [Date.now().toString()]: {\n      first: \"\",\n      second: \"\",\n      third: \"\",\n      figures: null,\n      customerIDs: [],\n    },\n  },\n  allCustomerIDs: [],\n  selectedCombinations: [],\n  eventName: \"\",\n  eventDate: null,\n  step: 1,\n  activeTab: \"Email\",\n  startDate: null,\n  endDate: null,\n  tabData: {\n    Email: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 500,\n    },\n    SMS: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 160,\n    },\n    Notification: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 250,\n    },\n    Whatsapp: {\n      content: \"\",\n      timelineState: {},\n      fileName: null,\n      file: null,\n      characterCount: 0,\n      charLimit: 2000,\n    },\n  },\n  radarData: [\n    { count: 120, subject: \"EZ-Auto\" },\n    { count: 98, subject: \"Cyberior\" },\n    { count: 86, subject: \"Homecare\" },\n    { count: 99, subject: \"E-Portal 2.0\" },\n    { count: 85, subject: \"EZ-Travel\" },\n  ],\n  downloadDataStatus: null,\n  error: null,\n  rowIdsArray: [],\n  loadingStates: {},\n  errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n  name: \"campaignManagement\",\n  initialState,\n  reducers: {\n    toggleModal: (state, action) => {\n      state.isModalOpen = action.payload;\n    },\n    updateDropdownData: (state, action) => {\n      state.dropdownData = action.payload;\n    },\n    updateRows: (state, action) => {\n      state.rows = action.payload;\n      state.rowIdsArray = [];\n      state.allCustomerIDs = [\n        ...new Set(\n          Object.values(state.rows)\n            .filter((row) => row.customerIDs && row.customerIDs.length)\n            .flatMap((row) => row.customerIDs),\n        ),\n      ];\n    },\n    updateSelectedCombinations: (state, action) => {\n      state.selectedCombinations = action.payload;\n    },\n    setCampaignName: (state, action) => {\n      state.campaignName = action.payload;\n    },\n    setEventName: (state, action) => {\n      state.eventName = action.payload;\n    },\n    setEventDate: (state, action) => {\n      state.eventDate = action.payload;\n    },\n    setStep: (state, action) => {\n      state.step = action.payload;\n    },\n    setStartDate: (state, action) => {\n      state.startDate = action.payload;\n    },\n    setEndDate: (state, action) => {\n      state.endDate = action.payload;\n      state.eventDate = action.payload;\n    },\n    setActiveTab: (state, action) => {\n      state.activeTab = action.payload;\n    },\n    updateTabData: (state, action) => {\n      state.tabData = action.payload;\n    },\n    setRadarData: (state, action) => {\n      state.radarData = action.payload;\n    },\n    resetModal: (state) => {\n      state.step = initialState.step;\n      state.campaignName = initialState.campaignName;\n      state.eventName = initialState.eventName;\n      state.activeTab = initialState.activeTab;\n      state.tabData = initialState.tabData;\n      state.eventDate = initialState.eventDate;\n    },\n  },\n  extraReducers: {\n    [fetchRowData.pending]: (state) => {\n      state.downloadDataStatus = \"loading\";\n    },\n    [fetchRowData.fulfilled]: (state, action) => {\n      state.downloadDataStatus = \"success\";\n\n      action.payload.forEach((item) => {\n        state.rows[item.rowKey].figures = item.figures;\n        state.rows[item.rowKey].customerIDs = item.customerIDs;\n      });\n\n      state.rowIdsArray = [\n        ...new Set([\n          ...state.rowIdsArray,\n          ...action.payload.map((item) => item.rowKey),\n        ]),\n      ];\n\n      const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n      state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n    },\n    [fetchRowData.rejected]: (state, action) => {\n      state.downloadDataStatus = \"failed\";\n      state.error = action.error.message;\n    },\n    [fetchFiguresForRow.pending]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"loading\";\n      state.errors[rowId] = null;\n    },\n    [fetchFiguresForRow.fulfilled]: (state, action) => {\n      const { rowId, figures, customerIDs } = action.payload;\n      state.rows[rowId].figures = figures;\n      state.rows[rowId].customerIDs = customerIDs;\n      state.loadingStates[rowId] = \"loaded\";\n\n      const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n      if (Number(rowId) === lastRowId) {\n        state.allCustomerIDs = [...customerIDs];\n      }\n    },\n    [fetchFiguresForRow.rejected]: (state, action) => {\n      const rowId = action.meta.arg;\n      state.loadingStates[rowId] = \"error\";\n      state.errors[rowId] = action.error.message;\n    },\n  },\n});\n\nexport const {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n  setCampaignName,\n  setEventName,\n  setEventDate,\n  setStep,\n  setStartDate,\n  setEndDate,\n  setActiveTab,\n  updateTabData,\n  setRadarData,\n  resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nconst initialState = {\n  data: [],\n  campaignNames: [],\n  selectedCampaigns: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaigns = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n        state.campaignNames = action.payload.map((item) => item.campaignName);\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async (source) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async (source) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`,\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  campaignStatus: \"idle\",\n  campaigns: [],\n  error: null,\n};\n\nexport const fetchCampaigns = createAsyncThunk(\n  \"campaigns/fetchCampaigns\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/campaign`,\n      );\n      console.log(\"Campaign List response data\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching campaigns:\", error);\n      return rejectWithValue(\n        error.response?.data || \"Unable to fetch campaigns\",\n      );\n    }\n  },\n);\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchCampaigns.pending]: (state) => {\n      state.campaignStatus = \"loading\";\n      state.error = null; // Reset the error state\n    },\n    [fetchCampaigns.fulfilled]: (state, action) => {\n      console.log(\"Received campaigns:\", action.payload);\n      state.campaignStatus = \"success\";\n      state.campaigns = action.payload.map((campaign) => ({\n        ...campaign,\n        status: determineCampaignStatus(campaign),\n      }));\n      console.log(\"Final campaigns for table:\", action.payload);\n    },\n    [fetchCampaigns.rejected]: (state, action) => {\n      state.campaignStatus = \"failed\";\n      state.error = action.payload;\n    },\n  },\n});\n\nfunction determineCampaignStatus(campaign) {\n  const currentDate = new Date();\n  const startDate = new Date(campaign.start);\n  const endDate = new Date(campaign.end);\n\n  if (endDate < currentDate) return \"Closed\";\n  if (startDate > currentDate) return \"Pending\";\n  if (currentDate >= startDate && currentDate <= endDate)\n    return campaign.isActive ? \"On-going\" : \"Cancelled\";\n  return \"Unknown\";\n}\n\nexport default campaignSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\nimport profilingSlice from \"./profileTypesSlice\";\nimport campaignListSlice from \"./campaignListSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n    profileTypesCustomerMapping: profilingSlice,\n    campaignListSlice: campaignListSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n      navigate(\"/\");\n    }\n  }, [status, navigate]);\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#0d5ff9\", to: \"#F3F6FF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#0d5ff9\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      // topProps={() => (\n      //   <Flex>\n      //     <StyledButton\n      //       compact\n      //       onClick={() => {\n      //         console.log(\"Create Permission clicked!\");\n      //       }}\n      //     >\n      //       Create Permission\n      //     </StyledButton>\n      //   </Flex>\n      // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#0d5ff9\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#0d5ff9\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#0d5ff9\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n      const currentCombination = {\n        first: row.first,\n        second: row.second,\n        third: row.first === \"Interests\" ? option.value : option,\n      };\n\n      const isSelectedCombination = selectedCombinations.some(\n        (selected) =>\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      const isSelectedInCurrentRow = selectedCombinations.some(\n        (selected) =>\n          selected.rowId === rowId &&\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      return !isSelectedCombination || isSelectedInCurrentRow;\n    })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#0d5ff9\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#0d5ff9\"\n          fill=\"#0d5ff9\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#0d5ff9\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        border: \"2px solid #0d5ff9\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  useEffect(() => {\n    // Check if the Redux state `eventDate` is different from the local state `endDate`\n    // and if so, update the local state to match the Redux state\n    if (eventDate && (!results.endDate || results.endDate !== eventDate)) {\n      setResults((prevState) => ({\n        ...prevState,\n        endDate: eventDate,\n      }));\n\n      // Optionally, if you want to update the Redux state as well\n      dispatch(setEventDate(eventDate));\n    }\n  }, [eventDate, dispatch, results.endDate]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setRecurrenceTime(\"\");\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#0d5ff9\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#0d5ff9\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#0d5ff9\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#0d5ff9\"}\n                      bg={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#F3F6FF\",\n                          color: \"#0d5ff9\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${activeTab === tab ? \"show active\" : \"\"\n                      }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                              <div className=\"character-limit-error\">\n                                Character limit exceeded!\n                              </div>\n                            )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#F3F6FF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ActionIcon,\n  Box,\n  Flex,\n  MultiSelect,\n  Text,\n  Title,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { fetchData, selectCampaign } from \"../../redux/campaignSlice\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.campaign.data);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  const [selectedCampaigns, setSelectedCampaigns] = useState([]);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  const handleCampaignSelect = (selected) => {\n    setSelectedCampaigns(selected);\n    dispatch(selectCampaign(selected));\n  };\n\n  const filteredData =\n    selectedCampaigns.length > 0\n      ? data.filter((campaign) =>\n          selectedCampaigns.includes(campaign.campaignName),\n        )\n      : data;\n\n  // Map API data to chart data\n  const chartData = filteredData.map((item) => ({\n    ...item,\n    delivered: item.totalSent,\n    converted: item.success,\n    interested: item.success,\n    failure: item.failed,\n  }));\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#0d5ff9\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <MultiSelect\n              maw={320}\n              mx=\"auto\"\n              data={campaignNames}\n              placeholder={\"All\"}\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              searchable\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={handleCampaignSelect}\n              value={selectedCampaigns}\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={chartData}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"campaignName\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#F3F6FF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#0d5ff9\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#F3F6FF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#0d5ff9\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#0d5ff9\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#0d5ff9\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"}>\n              <Stack>\n                <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                  <Text fw={\"bold\"}>Communications</Text>\n                  <Center>\n                    <ActionIcon c={\"#0d5ff9\"}>\n                      <IconTableExport />\n                    </ActionIcon>\n                    <Text fw={\"bold\"}>Export</Text>\n                  </Center>\n                </Flex>\n                <Box>\n                  <VerticalBarChart />\n                </Box>\n              </Stack>\n            </Card>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import { ActionIcon, Flex } from \"@mantine/core\";\nimport { IconEdit, IconTrash } from \"@tabler/icons-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCampaigns } from \"../../../../redux/campaignListSlice\";\nimport StyledTable from \"../../../../StyledComponents/StyledTable\";\n\nconst AllCampaigns = () => {\n  const dispatch = useDispatch();\n  const campaignState = useSelector((state) => state.campaignListSlice);\n\n  useEffect(() => {\n    dispatch(fetchCampaigns());\n  }, [dispatch]);\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"name\",\n        header: \"Campaign Name\",\n      },\n      {\n        accessorKey: \"type\",\n        header: \"Communication Type\",\n      },\n      {\n        accessorKey: \"customers\",\n        header: \"Total No. of Customers\",\n        accessorFn: (row) => row.customers.length,\n      },\n      {\n        accessorKey: \"created_at\",\n        header: \"Create Campaign Date\",\n        accessorFn: (row) => new Date(row.created_at).toLocaleDateString(),\n      },\n      {\n        accessorKey: \"end\",\n        header: \"Event Date\",\n        accessorFn: (row) => new Date(row.end).toLocaleDateString(),\n      },\n      {\n        accessorKey: \"status\",\n        header: \"Campaign Status\",\n      },\n      {\n        accessorKey: \"actions\",\n        header: \"Action\",\n        Cell: ({ row }) => (\n          <Flex>\n            <ActionIcon color=\"lightblue\">\n              <IconEdit />\n            </ActionIcon>\n            <ActionIcon color=\"red\">\n              <IconTrash />\n            </ActionIcon>\n          </Flex>\n        ),\n      },\n    ],\n    [],\n  );\n\n  if (campaignState.campaignStatus === \"loading\") {\n    return <p>Loading...</p>;\n  }\n  if (campaignState.campaignStatus === \"failed\") {\n    return <p>Error loading campaigns. Details: {campaignState.error}</p>;\n  }\n  const reversedData = [...campaignState.campaigns].reverse();\n  const handleRowClick = () => {\n    console.log(\"Row clicked\");\n  };\n\n  return (\n    <StyledTable\n      columns={columns}\n      data={reversedData}\n      onRowClick={handleRowClick}\n    />\n  );\n};\n\nexport default AllCampaigns;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\nimport AllCampaigns from \"../AllCampaigns/AllCampaigns\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(\"keywords fetched for analysis\", keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n              ...updatedDropdownData[keyword.category],\n              { label: keyword.value, value: keyword.id },\n            ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Data Analysis\n            </Text>\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#0d5ff9\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#0d5ff9\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#0d5ff9\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n      <AllCampaigns />\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#0d5ff9\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#F3F6FF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#F3F6FF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#F3F6FF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#0d5ff9\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#0d5ff9\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#F3F6FF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #0d5ff9\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\nimport { IconUserDollar } from \"@tabler/icons-react\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#00239c,#0d5ff9)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#0d5ff9)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            //            boxShadow: `\n            // rgba(13, 95, 249, 0.17) 0px -23px 25px 0px inset,\n            // rgba(13, 95, 249, 0.15) 0px -36px 30px 0px inset,\n            // rgba(13, 95, 249, 0.1) 0px -79px 40px 0px inset,\n            // rgba(13, 95, 249, 0.06) 0px 2px 1px,\n            // rgba(13, 95, 249, 0.09) 0px 4px 2px,\n            // rgba(13, 95, 249, 0.09) 0px 8px 4px,\n            // rgba(13, 95, 249, 0.09) 0px 16px 8px,\n            // rgba(13, 95, 249, 0.09) 0px 32px 16px\n            //    `,\n\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )}\n\n\n              {true && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/profile\"\n                  label=\"Profiles\"\n                  icon={<IconUserDollar size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/profile\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n\n\n                />\n              )}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#F3F6FF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n        id: data.id,\n        roleId: data.roleId,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email.split(\"@\").length > 0 ? row.original.email.split(\"@\")[0] : \"\"}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          active\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton compact onClick={handleAddUserModal}>\n        //       + Create User\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            My Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#0d5ff9\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#0d5ff9\",\n                      \"&:hover\": {\n                        backgroundColor: \"#F3F6FF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#0d5ff9\",\n                  color: \"#0d5ff9\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F3F6FF\",\n                    color: \"#0d5ff9\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Change Password\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = ({ source }) => {\n  console.log(source);\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\nimport { useState } from \"react\";\n\nconst CustomerProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = ({ source }) => {\n  const dispatch = useDispatch();\n  console.log(\"source for profiles\", source);\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n  console.log(\"Chart data for profiles\", chartData);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  // const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  // const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    // if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      // onMouseEnter={() => dispatch(setHoveredItem(text))}\n      // onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        // transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        // style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        // transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        // fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        // transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  // const dispatch = useDispatch();\n  // const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    // dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    // dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#F3F6FF\"}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#0d5ff9\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#0d5ff9\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            // onMouseEnter={() => handleMouseEnter(entry.name)}\n            // onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                // sx={{\n                //   transition: \"transform 0.3s ease\",\n                //   transform:\n                //     hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                //   backgroundImage:\n                //     hoveredItem === entry.name\n                //       ? \"radial-gradient(#000000 20% ,#0d5ff9)\"\n                //       : \"none\",\n                // }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Flex\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        alignItems: \"stretch\",\n      }}\n    >\n      {/* First Card for Selectors and Pie Chart */}\n      <Flex\n        style={{\n          marginRight: \"20px\",\n          flex: 3,\n        }}\n      >\n        <Card shadow={\"lg\"} radius={\"md\"} style={{ width: \"100%\" }}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Profile\n                </Text>\n              </Center>\n              <Center>\n                <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                  <IconArrowRight />\n                </ActionIcon>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={12}>\n              <Stack>\n                <StyledSelect\n                  disabled={status === \"loading\"}\n                  label={\"Profile\"}\n                  placeholder={\"Select Profile(s)\"}\n                  data={profileOptions}\n                  onChange={(value) => setSelectedProfile(value)}\n                />\n                <StyledSelect\n                  disabled={status === \"loading\"}\n                  label={\"Demographics\"}\n                  placeholder={\"Select Main Demographics\"}\n                  data={demographicOptions}\n                  onChange={(value) => setSelectedDemographic(value)}\n                />\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={12}>\n              <Center>\n                {status === \"loading\" ? (\n                  <Loader c=\"5c0ff2\" size=\"lg\" />\n                ) : (\n                  <ProfilePieChart />\n                )}\n              </Center>\n            </Grid.Col>\n          </Grid>\n        </Card>\n      </Flex>\n\n      {/* Second Card for Profile Data */}\n      <Flex\n        style={{\n          flex: 1,\n        }}\n      >\n        <Card shadow={\"lg\"} radius={\"md\"} style={{ width: \"100%\" }}>\n          <Center style={{ height: \"100%\" }}>\n            <ProfileDataCard />\n          </Center>\n        </Card>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useMemo, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCustomerDetails } from \"../redux/customerSlice\";\nimport { useSelector } from \"react-redux\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\n\nexport default function ProfileTableDisplay({ customerList }) {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const customerDetailsStatus = useSelector(state => state.customer.customerDetailsStatus)\n\n\n\n  const handleRowClick = (customer) => {\n    dispatch(getCustomerDetails(customer.customerId));\n  };\n\n  useEffect(() => {\n    if (customerDetailsStatus === \"success\") {\n      navigate(\"/dashboard\");\n    }\n\n    console.log(customerDetailsStatus);\n  }, [customerDetailsStatus, navigate]);\n\n  const columns = [\n    {\n      accessorKey: \"customerName\",\n      header: \"Name\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"email\",\n      header: \"Email\",\n      minSize: 400,\n    },\n    {\n      accessorKey: \"source\",\n      header: \"Source\",\n    },\n    {\n      accessorKey: \"level\",\n      header: \"Level\",\n    }\n  ];\n\n\n\n\n  return (\n    <Box style={{ marginTop: \"30px\" }}>\n      <StyledTable columns={columns} data={customerList} onRowClick={handleRowClick} />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProfileTypes, fetchProfileMappings } from '../../redux/profileTypesSlice';\nimport { Grid, Card, Image, Text, Switch } from '@mantine/core';\nimport ProfileTableDisplay from '../../components/ProfileTableDisplay';\nimport { Button } from '@mantine/core';\nimport { IconArrowBack } from '@tabler/icons-react';\nimport { clearCurrentCustomer } from '../../redux/customerSlice';\n// import assets from \"./assets\";\n\n\nconst Profile = () => {\n  const [checked, setChecked] = React.useState(false);\n\n  const dispatch = useDispatch();\n  const profileTypes = useSelector((state) => state.profileTypesCustomerMapping.profileTypes);\n  const status = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const error = useSelector((state) => state.profileTypesCustomerMapping.profileTypesStatus);\n  const profileMappings = useSelector((state) => state.profileTypesCustomerMapping.profileMappings);\n  const profileMappingsStatus = useSelector((state) => state.profileTypesCustomerMapping.profileMappingsStatus);\n  const [showTable, setShowTable] = useState(false)\n  console.log(profileMappingsStatus);\n\n\n  useEffect(() => {\n    dispatch(clearCurrentCustomer())\n    dispatch(fetchProfileTypes());\n\n  }, [dispatch]);\n\n  const handleProfileTypeClick = (profileTypeId) => {\n    // Call fetchProfileMappings with the profileTypeId\n    dispatch(fetchProfileMappings(profileTypeId));\n    setShowTable(true)\n  };\n\n  const handleTableRender = () => {\n    if (profileMappingsStatus == 'loading') {\n      return <>Loading ...</>\n    } else if (profileMappingsStatus == 'failed') {\n      return <>Something went wrong</>\n    } else if (profileMappingsStatus == 'succeeded') {\n      return <>\n        <ProfileTableDisplay customerList={profileMappings} />\n\n      </>\n    }\n  }\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Profile Types</h1>\n      <Grid>\n        {!showTable ? profileTypes.map((profileType) => (\n          <Grid.Col span={3} key={profileType.id}>\n            <Card shadow=\"sm\" padding=\"lg\" component=\"a\" target=\"_blank\">\n              <Card.Section>\n                {/* <Image\n                  src={assets[profileType.name] ? assets[profileType.name] : \"\"}\n                  style={{ width: '200px', height: '200px' }} // Set fixed width and height\n                /> */}\n              </Card.Section>\n\n              <Card.Section style={{ padding: '10px' }}>\n                <Text\n                  fw={500}\n                  size=\"lg\"\n                  style={{ display: 'inline-block', marginRight: '10px', cursor: 'pointer' }}\n                  onClick={() => handleProfileTypeClick(profileType.id)}\n                >\n                  {profileType.name}\n                </Text>\n\n                <Switch\n                  checked={checked}\n                  onChange={(event) => setChecked(event.currentTarget.checked)}\n                  style={{ display: 'inline-block', float: 'right' }}\n                />\n              </Card.Section>\n            </Card>\n          </Grid.Col>\n        )) : <><Button onClick={() => setShowTable(false)} variant='text'><IconArrowBack /> Back </Button> <br /> {handleTableRender()}</>}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\nimport { setAuth } from \"./redux/authSlice\";\nimport Profile from './pages/Profile/Profile'\nimport AllCampaigns from \"./pages/Campaign/components/AllCampaigns/AllCampaigns\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  useEffect(() => {\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\n    if (isLoggedIn) {\n      dispatch(setAuth());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {/* {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/\" element={<BoardStats />} />\n              ) : (\n                <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n              )} */}\n              <PrivateRoute path=\"/\" element={<Root />} />\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute path=\"/users\" element={<PermissionDenied />} />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n              <PrivateRoute path=\"/profile\" element={<Profile />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}