{"version":3,"sources":["components/Profiling/assets/Avid Traveler.png","i18n.js","utils/sleep.js","redux/customerSlice.js","StyledComponents/StyledTable.jsx","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/assets/index.js","components/Profiling/StatCard.jsx","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","components/AgentPages/Remarks.tsx","components/Remarks/RemarkListings.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","getCustomerRemarks","_ref5","_callee5","customerId","_yield$axios$get5","_context5","_x3","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","customerRemarks","remarksStatus","reducers","setCurrentCustomer","state","action","payload","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","response","customer","updatedCustomers","profileCompletion","_objectSpread","profile_completion","actions","StyledTable","_ref","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","_ref2","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","size","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","TableDisplay","customerList","dispatch","useDispatch","navigate","useNavigate","useMemo","accessorFn","_row$profiling","_row$profiling$person","profiling","personal_details","full_name","header","substr","accessorKey","minSize","percentage","RingProgress","thickness","sections","value","label","weight","align","Loader","type","Customers","_useSelector","useSelector","useEffect","LoadingOverlay","visible","overlayBlur","overlayColor","loaderProps","variant","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","fontFamily","fontWeight","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconClipboardText","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","links","item","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","imageURL","require","baseUrl","window","location","origin","_AvidTraveler$Fitnes","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","ta","fz","Progress","Badge","Profiling","stats","entries","assets","list","customerStats","Math","floor","random","maxLastUpdated","maxCompleted","min","getCustomerStats","Grid","Col","span","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","profile","source","memoizedSelectedCustomer","randomDetails","randomLocation","faker","city","randomState","randomAddress","streetAddress","randomPincode","zipCode","Space","h","split","gender","dob","age","marital_status","Divider","email","alternate_email","phone_number","alternate_phone_number","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","setData","_useSelector2","rolePermission","rolesPermissionsStatus","_useSelector3","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","setUnknowns","transformedData","category","allKeywords","unknownValues","filter","obj","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","readOnly","Interests","interests","setInterests","groupedByCategory","groupBy","uniq","interest","React","Fragment","gradient","from","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","_useState9","_useState10","tempEditData","setTempEditData","headerElements","headerItem","index","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","toString","bg","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","industry","incomeBracket","Occupation","relationship","phone","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Remarks","Textarea","RemarkListings","currentCustomerId","_useDisclosure","useDisclosure","_useDisclosure2","opened","_useDisclosure2$","open","close","selectedRemark","setSelectedRemark","remark","Modal","onClose","centered","agentName","date","time","Dashboard","submitKeywords","routesClicked","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","auth","isLoggedIn","_useState11","_useState12","useLocation","_useState13","_useState14","pathname","at","updateKeywordPayload","keywordsPayload","then","Card","Routes","Route","element","path","Notification","loading","withCloseButton","parseJwt","token","base64","replace","jsonPayload","decodeURIComponent","atob","charCodeAt","slice","join","JSON","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_yield$axios$post3","t0","_x4","authSlice","user","userStatus","users","setAuth","logout","localStorage","clear","defaults","headers","common","reload","setUser","access_token","_parseJwt","_id","sub","setItem","stringify","_parseJwt2","_authSlice$actions","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","_ref6","createRolesPermissionMapping","_ref7","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_context9","_x6","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","_rolesPermissionSlice","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","process","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","message","isModalOpen","dropdownData","Date","now","selectedCombinations","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","error","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","fetchData","fetchSources","sources","fetchCampaignNames","campaignNames","campaignSlice","selectedCampaign","selectCampaign","builder","addCase","delivered","totalSent","interested","success","failure","failed","converted","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","profileType","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectHoveredItem","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","API_ENDPOINT","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","store","configureStore","reducer","campaignManagementReducer","campaign","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","isEqual","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","_useState15","_useState16","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","undefined","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","isActive","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","IconRefresh","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","margin","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","combination","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","handleUserActionModal","selected_user","updatedUserData","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","address","pincode","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","handleSubmit","_error$response","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","chartData","strokeDasharray","CustomerProfileAnalysis","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","profileData","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$textColor","textColor","_ref$text","isHovered","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","handleMouseLeave","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","Root","App","setColorScheme","login","getItem","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.ce999dc3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory: [],\n  fetchedPofileCompleteness: false,\n  customerServiceHistoryStatus: \"idle\",\n  customerDetailsStatus: \"idle\",\n  customerRemarks: [], // New field for storing customer remarks\n  remarksStatus: \"idle\", // New status field for customer remarks\n};\n\nexport const getCustomers = createAsyncThunk(\n  \"customer/getCustomers\",\n  async () => {\n    // await sleep(3000)\n    const { data } = await axios.get(\"/customers\");\n    return data;\n  },\n);\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\n  \"customer/getCustomersProfileCompleteness\",\n  async () => {\n    await sleep(200);\n    const { data } = await axios.get(\"/profile\");\n    return data;\n  },\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  },\n);\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  },\n);\n\nexport const getCustomerRemarks = createAsyncThunk(\n  \"customer/getCustomerRemarks\",\n  async (customerId) => {\n    const { data } = await axios.get(\"/customers/remarks/\" + customerId);\n    console.log(\"Remarks in thunk\", data);\n    return data;\n  },\n);\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer: (state, action) => {\n      state.customerDetails = action.payload;\n    },\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const curr_state_obj = {};\n      const res_obj = {};\n      state.customers.map((e) => (curr_state_obj[e.id] = e));\n      action.payload.customer_details.map((e) => (res_obj[e.id] = e));\n      state.customers = Object.values(Object.assign(curr_state_obj, res_obj));\n    },\n    [getCustomers.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerDetails.pending]: (state) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload.response.customer;\n    },\n    [getCustomerDetails.rejected]: (state) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion\n          ? action.payload.profileCompletion[customer.id]\n          : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n      state.customers = updatedCustomers;\n      state.fetchedPofileCompleteness = true;\n    },\n    [getCustomersProfileCompleteness.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n    [getCustomerRemarks.pending]: (state) => {\n      state.remarksStatus = \"loading\";\n    },\n    [getCustomerRemarks.fulfilled]: (state, action) => {\n      state.remarksStatus = \"success\";\n      state.customerRemarks = action.payload; // Assuming API returns an array of remarks\n    },\n    [getCustomerRemarks.rejected]: (state) => {\n      state.remarksStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer } = customerSlice.actions;\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#2B1DFD\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#2B1DFD\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#2B1DFD\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#2B1DFD\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#2B1DFD\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#2B1DFD\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#2B1DFD\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setCurrentCustomer } from \"../redux/customerSlice\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\nexport default function TableDisplay({\n  customerList,\n  fetchedPofileCompleteness,\n}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const profileCompletion = (percentage) => {\n    return (\n      <Box>\n        <RingProgress\n          size={45}\n          thickness={3}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 25\n                  ? \"#1D9B25\"\n                  : percentage > 50\n                  ? \"#CFA400\"\n                  : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </Box>\n    );\n  };\n\n  const handleRowClick = (customer) => {\n    navigate(\"/dashboard\");\n    dispatch(setCurrentCustomer(customer));\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorFn: (row) => `${row.profiling?.personal_details?.full_name}`,\n        id: \"name\",\n        header: \"Name\",\n      },\n      {\n        accessorFn: (row) => `CLID${row.id.substr(0, 6)}....`,\n        id: \"customerId\",\n        header: \"Customer Id\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 400,\n      },\n      {\n        accessorKey: \"source\",\n        header: \"Source\",\n      },\n      {\n        accessorKey: \"mobile\",\n        header: \"Mobile\",\n      },\n      {\n        accessorFn: (row) =>\n          !fetchedPofileCompleteness ? (\n            <Loader type={\"dots\"} color=\"#2B1DFD\" />\n          ) : (\n            profileCompletion(row.profile_completion)\n          ),\n        id: \"profileCompletion\",\n        header: \"Profile Completion\",\n      },\n    ],\n    [fetchedPofileCompleteness],\n  );\n\n  return (\n    <Box>\n      <StyledTable\n        columns={columns}\n        data={customerList}\n        onRowClick={handleRowClick}\n      />\n    </Box>\n  );\n}\n","import { LoadingOverlay, Title } from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n\n  const { status, customers, fetchedPofileCompleteness } = useSelector(\n    (state) => state.customer,\n  );\n\n  // if(Array.isArray(customers) && customers.length > 0) setCustomerList(customers)\n\n  useEffect(() => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  }, []);\n\n  if (status === \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#2B1DFD\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n            <div style={{ padding: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"20px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <span>\n                  <Title pl={5}>Customers</Title>\n                </span>\n              </div>\n              <TableDisplay\n                customerList={customers}\n                fetchedPofileCompleteness={fetchedPofileCompleteness}\n              />\n            </div>\n          </span>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconClipboardText,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #2B1DFD\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#2B1DFD\",\n      boxShadow: `\n          rgba(43,29,253) 0px 2px 1px,\n          rgba(43,29,253) 0px 4px 2px,\n          rgba(43,29,253) 0px 8px 4px,\n          rgba(43,29,253) 0px 16px 8px,\n          rgba(43,29,253) 0px 32px 16px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#2B1DFD90\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#2B1DFD\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"remarks\", label: \"Remarks\", icon: <IconClipboardText /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  {\n    link: \"Financial Information\",\n    label: \"Financial Information\",\n    icon: <IconReportMoney />,\n  },\n  {\n    link: \"Insurance Details\",\n    label: \"Insurance Details  \",\n    icon: <IconCarCrash />,\n  },\n  { link: \"Vehicle\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const links = data.map((item) => (\n    <NavLink\n      className={cx(classes.link, {\n        [classes.linkActive]: item.label === active,\n      })}\n      icon={item.icon}\n      component={Link}\n      variant=\"subtle\"\n      to={item.link}\n      label={item.label}\n      key={item.label}\n      onClick={(event) => {\n        setActive(item.label);\n      }}\n    />\n  ));\n\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to=\"/customers\"\n            c=\"#2B1DFD\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","\nconst imageURL = require('./Avid Traveler.png');\nconst baseUrl = window.location.origin;\nconst finalImageUrl = baseUrl + imageURL;\n\nconsole.log(baseUrl,imageURL.default);\n\n\n\n// export default {\n//     [`Avid Traveler`]: new URL('./Avid Traveler.png', import.meta.url).href,\n//     [`Fitness Freak`]: new URL('./Fitness Freak.png', import.meta.url).href,\n//     [`Foodie`]: new URL('./Foodie.png', import.meta.url).href,\n//     [`Sports Fan`]: new URL('./Sports Fan.png', import.meta.url).href,\n//     [`Techie`]: new URL('./Techie.png', import.meta.url).href,\n// }\n\nexport default {\n    [`Avid Traveler`]: \"\",\n    [`Fitness Freak`]: \"\",\n    [`Foodie`]:\"\",\n    [`Sports Fan`]: \"\",\n    [`Techie`]:\"\",\n}\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    {percentage}%\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group>\n        </Paper>\n    );\n}","import { Grid } from '@mantine/core'\nimport assets from './assets'\nimport { StatsCard } from './StatCard'\n\nconst Profiling = () => {\n\n    const assetList = Object.entries(assets)\n    const stats = assetList.map((list) => {\n        const title = list[0]\n        const url = list[1]\n        function getCustomerStats() {\n            const frequency = Math.floor(Math.random() * 16); // A random frequency per month between 0 and 15\n            const maxLastUpdated = Math.floor((1 - frequency / 15) * 30);\n            const lastUpdated = Math.floor(Math.random() * (maxLastUpdated + 1)); // A random value between 0 and maxLastUpdated, representing the number of days ago\n            const maxCompleted = Math.min(Math.floor((30 - lastUpdated) * (frequency / 30) * 100), 100);\n            const percentageCompleted = Math.floor(Math.random() * (maxCompleted + 1)); // A random percentage between 0 and maxCompleted\n\n            return [frequency, percentageCompleted, lastUpdated];\n        }\n\n        const customerStats = getCustomerStats();\n        console.log(customerStats);\n        return (<>\n            <Grid.Col span={4}>\n                <StatsCard title={title} url={url} percentage={customerStats[1]} frequency={customerStats[0]} lastUpdated={customerStats[2]} />\n            </Grid.Col>\n        </>)\n    })\n    return (\n        <>\n            <Grid gutter=\"xl\">\n                {stats}\n            </Grid>\n        </>\n    )\n}\n\nexport default Profiling","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport InfoTag from \"./InfoTag\";\nimport { fakerEN_IN as faker } from '@faker-js/faker';\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n  const memoizedSelectedCustomer = useMemo(() => selectedCustomer, [selectedCustomer.id, selectedCustomer.profiling.personal_details]);\n\n  const randomDetails = useMemo(() => {\n    return {\n      randomLocation: faker.location.city(),\n      randomState: faker.location.state(),\n      randomAddress: faker.location.streetAddress(),\n      randomPincode: faker.location.zipCode(),\n    };\n  }, [memoizedSelectedCustomer]);\n\n\n  const profileCompletion = (percentage) => {\n    return (\n      <div>\n        <Center>\n          <RingProgress\n            mt={50}\n            size={80}\n            thickness={5}\n            sections={[\n              {\n                value: percentage,\n                color:\n                  percentage > 75\n                    ? \"#1D9B25\"\n                    : percentage > 60\n                      ? \"#CFA400\"\n                      : \"#D85972\",\n              },\n            ]}\n            label={\n              <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                {percentage}%\n              </Text>\n            }\n          />\n        </Center>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Container mt={-80}>\n        <Group grow position=\"apart\">\n          <Text mt={70} fw={500}>\n            Basic Details\n          </Text>\n          <Space h={40} />\n          <div>\n            <Space h={40} />\n            {profileCompletion(profile_completion)}\n          </div>\n        </Group>\n        <div style={{ marginTop: \"-30px\" }}>\n          {/* <InfoTag title={'Picture'} subject={<Avatar radius={'xl'} size='xl' />} */}\n          <Grid gutter=\"xl\" pt={\"sm\"}>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"First Name\"}\n                subject={profile.full_name.split(\" \")[0]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Last Name\"}\n                subject={profile.full_name.split(\" \")[1]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Gender\"} subject={profile.gender} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Date of birth\"} subject={profile.dob} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Age\"} subject={profile.age} />\n            </Grid.Col>\n          </Grid>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Marital Status\"}\n                subject={profile.marital_status}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Source\"} subject={source} />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Contact Details</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag title={\"Email Address\"} subject={profile.email} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Email\"}\n                subject={profile.alternate_email}\n              />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Mobile Number\"}\n                subject={profile.alternate_phone_number}\n              />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Address</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag title={\"Location(city)\"} subject={randomDetails.randomLocation} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"State\"} subject={randomDetails.randomState} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"PINCODE\"} subject={randomDetails.randomPincode} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Country\"} subject=\"India\" />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Address Line\"} subject={randomDetails.randomAddress} />\n            </Grid.Col>\n          </Grid>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          {/* <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div> */}\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\n\nconst Interests = () => {\n  const dispatch = useDispatch()\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { customerKeywords, customerKeywordsStatus } = useSelector((state) => state.keyword);\n  const [interests, setInterests] = useState([])\n\n\n\n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      // Use _.uniq to remove duplicate values\n      const uniqueValues = _.uniq(_.map(values, 'value'));\n      return { category, values: uniqueValues };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n\n  useEffect(() => {\n    if (customerKeywordsStatus == 'success') {\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n      {customerKeywordsStatus == 'success' ?\n        <>\n          {interests.map((interest) => (\n            <React.Fragment key={interest.category}>\n              <Text fw={700}>{interest.category}</Text>\n              {interest.values.map((value) => (\n                <Badge\n                  key={value}\n                  variant=\"gradient\"\n                  gradient={{ from: 'indigo', to: 'cyan' }}\n                >\n                  {value}\n                </Badge>\n              ))}\n            </React.Fragment>\n          ))}\n        </> :\n        <>Loading interests...</>\n      }\n\n\n    </>\n\n  )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport { useDisclosure } from \"@mantine/hooks\";\nimport { Modal, Group, Button } from \"@mantine/core\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport { getCustomerRemarks } from \"../../redux/customerSlice\"; // replace 'path_to_your' with the actual path\n\nconst RemarkListings = () => {\n  const dispatch = useDispatch();\n  const customerRemarks = useSelector(\n    (state) => state.customer.customerRemarks,\n  );\n  const remarksStatus = useSelector((state) => state.customer.remarksStatus);\n  const currentCustomerId = useSelector(\n    (state) => state.customer.customerDetails.id,\n  ); // Assuming 'id' is the field in customerDetails for the customer's ID\n\n  const [opened, { open, close }] = useDisclosure(false);\n  const [selectedRemark, setSelectedRemark] = useState(null);\n\n  useEffect(() => {\n    if (currentCustomerId) {\n      dispatch(getCustomerRemarks(currentCustomerId));\n    }\n  }, [dispatch, currentCustomerId]);\n\n  // Define columns for StyledTable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"agentName\",\n        header: \"Agent Name\",\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Date\",\n      },\n      {\n        accessorKey: \"time\",\n        header: \"Time\",\n      },\n      {\n        accessorKey: \"remark\",\n        header: \"Remark\",\n      },\n    ],\n    [],\n  );\n\n  const handleRowClick = (remark) => {\n    setSelectedRemark(remark);\n    open();\n  };\n\n  return (\n    <>\n      <Box>\n        {remarksStatus === \"success\" ? (\n          <StyledTable\n            columns={columns}\n            data={customerRemarks}\n            onRowClick={handleRowClick}\n          />\n        ) : remarksStatus === \"loading\" ? (\n          <p>Loading...</p>\n        ) : (\n          <p>Failed to load remarks.</p>\n        )}\n      </Box>\n\n      <Modal opened={opened} onClose={close} title=\"Remark Details\" centered>\n        {selectedRemark && (\n          <div>\n            <p>\n              <strong>Agent Name:</strong> {selectedRemark.agentName}\n            </p>\n            <p>\n              <strong>Date:</strong> {selectedRemark.date}\n            </p>\n            <p>\n              <strong>Time:</strong> {selectedRemark.time}\n            </p>\n            <p>\n              <strong>Remark:</strong> {selectedRemark.remark}\n            </p>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default RemarkListings;\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\nimport Remarks from \"../../components/AgentPages/Remarks\";\nimport RemarkListings from \"../../components/Remarks/RemarkListings\";\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  useEffect(() => {\n    if (\n      routesClicked.at(-2) &&\n      routesClicked.at(-2) === \"/dashboard/keywords\"\n    ) {\n      const updateKeywordPayload = {\n        customerId: customerDetails.id,\n        keywordsPayload: keywordValues,\n      };\n\n      setNotification(true);\n      sleep(5000).then((data) => setNotification(false));\n\n      dispatch(updateKeywords(updateKeywordPayload));\n    }\n  }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Card shadow={\"lg\"} radius={\"md\"}>\n              <Routes>\n                <Route>\n                  <Route\n                    index\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route\n                    path=\"/personalInformation\"\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route path=\"/profiling\" element={<Profiling />} />\n                  <Route\n                    path=\"/keywords\"\n                    element={\n                      <KeywordsEntry\n                        submitKeywords={submitKeywords}\n                        updateKeywordValuesParent={updateKeywordValuesParent}\n                      />\n                    }\n                  />\n\n                  <Route path=\"/interests\" element={<Interests />} />\n                  <Route path=\"/remarks\" element={<RemarkListings />} />\n                  <Route path=\"/occupation\" element={<Occupation />} />\n                  <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                  <Route path=\"/activity\" element={<Activity />} />\n                </Route>\n              </Routes>\n            </Card>\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Background Syncing\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n    'campaignManagement/fetchRowData',\n    async (_, { getState }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n        const responses = [];\n        let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n        for (const rowKey of Object.keys(state.rows)) {\n            const row = state.rows[rowKey];\n            if (!row.first || !row.second || !row.third) {\n                throw new Error(\"Row has empty/default values. Fetching aborted.\");\n            }\n\n            const body = {\n                information_type: row.first.toLowerCase().split(' ').join('_'),\n                category: row.second.toLowerCase().split(' ').join('_'),\n                value: row.third.toLowerCase().split(' ').join('_')\n            };\n\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            const data = await response.json();\n            const customerIDsForThisRow = data.map(customer => customer.id);\n\n            if (commonCustomerIDs === null) {\n                commonCustomerIDs = new Set(customerIDsForThisRow);\n            } else {\n                commonCustomerIDs = new Set([...commonCustomerIDs].filter(id => customerIDsForThisRow.includes(id)));\n            }\n\n            responses.push({\n                rowKey,\n                figures: commonCustomerIDs.size,\n                customerIDs: [...commonCustomerIDs]\n            });\n        }\n        return responses;\n    }\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n    'campaignManagement/fetchFiguresForRow',\n    async (rowId, { getState }) => {\n        const state = getState().campaignManagement;\n        const row = state.rows[rowId];\n        if (!row || !row.first || !row.second || !row.third) {\n            throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n        }\n\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n        const body = {\n            information_type: row.first.toLowerCase().split(' ').join('_'),\n            category: row.second.toLowerCase().split(' ').join('_'),\n            value: row.third.toLowerCase().split(' ').join('_')\n        };\n\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        });\n\n        const data = await response.json();\n        const customerIDsForThisRow = data.map(customer => customer.id);\n\n        // Retrieve customer IDs from all preceding rows\n        let commonCustomerIDs = customerIDsForThisRow;\n        for (const otherRowId of Object.keys(state.rows)) {\n            if (Number(otherRowId) < Number(rowId)) {\n                const otherRow = state.rows[otherRowId];\n                commonCustomerIDs = commonCustomerIDs.filter(id => otherRow.customerIDs.includes(id));\n            }\n        }\n\n        return { rowId, figures: commonCustomerIDs.length, customerIDs: commonCustomerIDs };\n    }\n);\n\nexport const createCampaign = createAsyncThunk(\n    'campaignManagement/createCampaign',\n    async (_, { getState, rejectWithValue }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n        const body = {\n            name: state.eventName,\n            eventBased: true,\n            triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n            type: \"EMAIL\",\n            recurrenceType: state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n            start: state.tabData.Email.timelineState.startDate,\n            end: state.tabData.Email.timelineState.endDate,\n            templateText: state.tabData.Email.content,\n            customerIDs: state.allCustomerIDs\n        };\n\n        console.log('Publish body', body)\n\n        try {\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            console.log('response', response)\n\n            if (!response.ok) {\n                throw new Error('Failed to create campaign');\n            }\n\n            return response.json();\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst initialState = {\n    isModalOpen: false,\n    dropdownData: {\n        \"Personal Information\": {\n            \"Age\": [\"25-30\", \"31-35\"],\n            \"Gender\": [\"Male\", \"Female\"],\n            \"Marital Status\": [\"Single\", \"Married\"],\n            \"Location\": [\"Delhi\", \"Mumbai\"],\n        },\n        \"Interests\": {},\n        \"Occupation\": '',\n        \"Activity\": '',\n        \"Family Details\": '',\n        \"Financial Information\": '',\n        \"Insurance Details\": '',\n        \"Vehicle\": '',\n        \"Health\": '',\n    },\n    rows: {\n        [Date.now().toString()]: {\n            first: \"\",\n            second: \"\",\n            third: \"\",\n            figures: null,\n            customerIDs: []\n        }\n    },\n    allCustomerIDs: [],\n    selectedCombinations: [],\n    eventName: \"\",\n    eventDate: null,\n    step: 1,\n    activeTab: 'Email',\n    startDate: null,\n    endDate: null,\n    tabData: {\n        Email: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 500\n        },\n        SMS: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 160\n        },\n        Notification: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 250\n        },\n        Whatsapp: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 2000\n        }\n    },\n    radarData: [\n        { count: 120, subject: 'EZ-Auto' },\n        { count: 98, subject: 'Cyberior' },\n        { count: 86, subject: 'Homecare' },\n        { count: 99, subject: 'E-Portal 2.0' },\n        { count: 85, subject: 'EZ-Travel' },\n    ],\n    downloadDataStatus: null,\n    error: null,\n    rowIdsArray: [],\n    loadingStates: {},\n    errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n    name: \"campaignManagement\",\n    initialState,\n    reducers: {\n        toggleModal: (state, action) => {\n            state.isModalOpen = action.payload;\n        },\n        updateDropdownData: (state, action) => {\n            state.dropdownData = action.payload;\n        },\n        updateRows: (state, action) => {\n            state.rows = action.payload;\n            state.rowIdsArray = [];\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        updateSelectedCombinations: (state, action) => {\n            state.selectedCombinations = action.payload;\n        },\n        setCampaignName: (state, action) => {\n            state.campaignName = action.payload;\n        },\n        setEventName: (state, action) => {\n            state.eventName = action.payload;\n        },\n        setEventDate: (state, action) => {\n            state.eventDate = action.payload;\n        },\n        setStep: (state, action) => {\n            state.step = action.payload;\n        },\n        setStartDate: (state, action) => {\n            state.startDate = action.payload;\n        },\n        setEndDate: (state, action) => {\n            state.endDate = action.payload;\n            state.eventDate = action.payload;\n        },\n        setActiveTab: (state, action) => {\n            state.activeTab = action.payload;\n        },\n        updateTabData: (state, action) => {\n            state.tabData = action.payload;\n        },\n        setRadarData: (state, action) => {\n            state.radarData = action.payload;\n        },\n        resetModal: (state) => {\n            state.step = initialState.step;\n            state.campaignName = initialState.campaignName;\n            state.eventName = initialState.eventName;\n            state.activeTab = initialState.activeTab;\n            state.tabData = initialState.tabData;\n            state.eventDate = initialState.eventDate\n        },\n    },\n    extraReducers: {\n        [fetchRowData.pending]: (state) => {\n            state.downloadDataStatus = 'loading';\n        },\n        [fetchRowData.fulfilled]: (state, action) => {\n            state.downloadDataStatus = 'success';\n\n            action.payload.forEach(item => {\n                state.rows[item.rowKey].figures = item.figures;\n                state.rows[item.rowKey].customerIDs = item.customerIDs;\n            });\n\n            state.rowIdsArray = [...new Set([...state.rowIdsArray, ...action.payload.map(item => item.rowKey)])];\n\n            const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n            state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n        },\n        [fetchRowData.rejected]: (state, action) => {\n            state.downloadDataStatus = 'failed';\n            state.error = action.error.message;\n        },\n        [fetchFiguresForRow.pending]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'loading';\n            state.errors[rowId] = null;\n        },\n        [fetchFiguresForRow.fulfilled]: (state, action) => {\n            const { rowId, figures, customerIDs } = action.payload;\n            state.rows[rowId].figures = figures;\n            state.rows[rowId].customerIDs = customerIDs;\n            state.loadingStates[rowId] = 'loaded';\n\n            const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n            if (Number(rowId) === lastRowId) {\n                state.allCustomerIDs = [...customerIDs];\n            }\n        },\n        [fetchFiguresForRow.rejected]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'error';\n            state.errors[rowId] = action.error.message;\n        }\n    }\n});\n\nexport const {\n    toggleModal,\n    updateDropdownData,\n    updateRows,\n    updateSelectedCombinations,\n    setCampaignName,\n    setEventName,\n    setEventDate,\n    setStep,\n    setStartDate,\n    setEndDate,\n    setActiveTab,\n    updateTabData,\n    setRadarData,\n    resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nexport const fetchSources = createAsyncThunk(\n  \"campaign/fetchSources\",\n  async () => {\n    const response = {\n      sources: [],\n    };\n    return response.sources;\n  },\n);\n\nexport const fetchCampaignNames = createAsyncThunk(\n  \"campaign/fetchCampaignNames\",\n  async () => {\n    const response = {\n      campaignNames: [],\n    };\n    return response.campaignNames;\n  },\n);\n\nconst initialState = {\n  data: [],\n  sources: [\"Homecare\", \"Cyberior\", \"EZ-Auto\", \"EZ-Travel\", \"E-Portal 2.0\"],\n  campaignNames: [\"Campaign 1\", \"Campaign 2\", \"Campaign 3\"],\n  selectedCampaign: \"All\",\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaign = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload.map((item) => ({\n          name: item.campaignName,\n          delivered: item.totalSent,\n          interested: item.success,\n          failure: item.failed,\n          converted: 0,\n        }));\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      })\n      .addCase(fetchSources.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.sources = action.payload;\n        }\n      })\n      .addCase(fetchCampaignNames.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.campaignNames = action.payload;\n        }\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async () => {\n    const response = await fetch(API_ENDPOINT);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async () => {\n    const response = await fetch(API_ENDPOINT);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD99\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#2B1DFD99\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#2B1DFD99\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n        border: \"1px solid #2B1DFD\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n      navigate(\"/\");\n    }\n  }, [status, navigate]);\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#2B1DFD\", to: \"#F3F6FF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#2B1DFD\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#2B1DFD\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#2B1DFD\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#2B1DFD\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton\n        //       compact\n        //       onClick={() => {\n        //         console.log(\"Create Permission clicked!\");\n        //       }}\n        //     >\n        //       Create Permission\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#2B1DFD\" },\n    label: {\n      color: \"#2B1DFD99\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#2B1DFD\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#2B1DFD\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#2B1DFD99\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD99\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD99\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#2B1DFD\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#2B1DFD\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n        const currentCombination = {\n          first: row.first,\n          second: row.second,\n          third: row.first === \"Interests\" ? option.value : option,\n        };\n\n        const isSelectedCombination = selectedCombinations.some(\n          (selected) =>\n            selected.first === currentCombination.first &&\n            selected.second === currentCombination.second &&\n            (row.first === \"Interests\"\n              ? selected.third.value\n              : selected.third) === currentCombination.third,\n        );\n\n        const isSelectedInCurrentRow = selectedCombinations.some(\n          (selected) =>\n            selected.rowId === rowId &&\n            selected.first === currentCombination.first &&\n            selected.second === currentCombination.second &&\n            (row.first === \"Interests\"\n              ? selected.third.value\n              : selected.third) === currentCombination.third,\n        );\n\n        return !isSelectedCombination || isSelectedInCurrentRow;\n      })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#2B1DFD\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#2B1DFD\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#2B1DFD\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#2B1DFD\"\n          fill=\"#2B1DFD\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#2B1DFD\" },\n    label: {\n      color: \"#2B1DFD99\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#2B1DFD\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#2B1DFD\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#2B1DFD\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n        border: \"1px solid #2B1DFD\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n      \"&:hover\": {\n        border: \"2px solid #2B1DFD\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#2B1DFD\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#2B1DFD\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#2B1DFD\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#2B1DFD\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#2B1DFD\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#2B1DFD\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#2B1DFD\"}\n                      bg={activeTab === tab ? \"#2B1DFD\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#F3F6FF\",\n                          color: \"#2B1DFD\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${\n                      activeTab === tab ? \"show active\" : \"\"\n                    }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                            <div className=\"character-limit-error\">\n                              Character limit exceeded!\n                            </div>\n                          )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#F3F6FF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import {\n  ActionIcon,\n  Box,\n  Flex,\n  Select,\n  Text,\n  Title,\n  Loader,\n  Group,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  fetchData,\n  fetchSources,\n  fetchCampaignNames,\n  selectCampaign,\n} from \"../../redux/campaignSlice\";\nimport { Link } from \"react-router-dom\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector((state) => state.campaign.data);\n  const sources = useSelector((state) => state.campaign.sources);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n      dispatch(fetchSources());\n      dispatch(fetchCampaignNames());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#2B1DFD\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#2B1DFD\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              data={[\"All\", ...campaignNames]}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={(value) => dispatch(selectCampaign(value))}\n            />\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Source(s)</Text>}\n              data={sources}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"name\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#F3F6FF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#2B1DFD\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#2B1DFD\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#2B1DFD\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#F3F6FF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#2B1DFD\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#2B1DFD\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#2B1DFD\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"}>\n              <Stack>\n                <Flex c={\"#2B1DFD\"} justify={\"space-between\"}>\n                  <Text fw={\"bold\"}>Communications</Text>\n                  <Center>\n                    <ActionIcon c={\"#2B1DFD\"}>\n                      <IconTableExport />\n                    </ActionIcon>\n                    <Text fw={\"bold\"}>Export</Text>\n                  </Center>\n                </Flex>\n                <Box>\n                  <VerticalBarChart />\n                </Box>\n              </Stack>\n            </Card>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(keywords, keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n              ...updatedDropdownData[keyword.category],\n              { label: keyword.value, value: keyword.id },\n            ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <Text fw={\"bold\"} c={\"#2B1DFD\"} size={\"sm\"}>\n              Data Analysis\n            </Text>\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#2B1DFD\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#2B1DFD\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#2B1DFD\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#2B1DFD\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#2B1DFD\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#2B1DFD\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#F3F6FF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#F3F6FF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#F3F6FF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#2B1DFD\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#2B1DFD\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#F3F6FF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #2B1DFD\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#2B1DFD\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#2B1DFD90\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#2B1DFD\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#8C53E7,#2B1DFD)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#2B1DFD)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            boxShadow: `\n        rgba(43, 29, 253, 0.17) 0px -23px 25px 0px inset,\n        rgba(43, 29, 253, 0.15) 0px -36px 30px 0px inset,\n        rgba(43, 29, 253, 0.1) 0px -79px 40px 0px inset,\n        rgba(43, 29, 253, 0.06) 0px 2px 1px,\n        rgba(43, 29, 253, 0.09) 0px 4px 2px,\n        rgba(43, 29, 253, 0.09) 0px 8px 4px,\n        rgba(43, 29, 253, 0.09) 0px 16px 8px,\n        rgba(43, 29, 253, 0.09) 0px 32px 16px\n    `,\n\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n                />\n              )}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#F3F6FF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n        id: data.id,\n        roleId: data.roleId,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email.split(\"@\").length > 0 ? row.original.email.split(\"@\")[0] : \"\"}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          active\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#2B1DFD\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton compact onClick={handleAddUserModal}>\n        //       + Create User\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#2B1DFD\">\n            My Profile\n          </Title>\n          <Divider c=\"#2B1DFD\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#2B1DFD\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#2B1DFD\",\n                      \"&:hover\": {\n                        backgroundColor: \"#F3F6FF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#2B1DFD\",\n                  color: \"#2B1DFD\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F3F6FF\",\n                    color: \"#2B1DFD\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#2B1DFD\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#2B1DFD\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#2B1DFD\">\n          Change Password\n        </Title>\n        <Divider c=\"#2B1DFD\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#2B1DFD\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#2B1DFD\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #2B1DFD\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #2B1DFD\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #2B1DFD\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #2B1DFD\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #2B1DFD\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = () => {\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData());\n  }, [dispatch]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\n\nconst CustomerProfileAnalysis = () => {\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#2B1DFD\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#2B1DFD\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"Test\"]}\n            />\n            <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group>\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = () => {\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount());\n  }, [dispatch]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#2B1DFD\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#2B1DFD\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"Test\"]}\n            />\n            <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group>\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      onMouseEnter={() => dispatch(setHoveredItem(text))}\n      onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  const dispatch = useDispatch();\n  const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#F3F6FF\"}\n      mah={300}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#2B1DFD\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#2B1DFD\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            onMouseEnter={() => handleMouseEnter(entry.name)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                sx={{\n                  transition: \"transform 0.3s ease\",\n                  transform:\n                    hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                  backgroundImage:\n                    hoveredItem === entry.name\n                      ? \"radial-gradient(#000000 20% ,#2B1DFD)\"\n                      : \"none\",\n                }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Card shadow={\"lg\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#2B1DFD\"} size={\"sm\"}>\n              Profile\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#2B1DFD\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={4}>\n          <Stack>\n            <StyledSelect\n              disabled={status === \"loading\"}\n              label={\"Profile\"}\n              placeholder={\"Select Profile(s)\"}\n              data={profileOptions}\n              onChange={(value) => setSelectedProfile(value)}\n            />\n            <StyledSelect\n              disabled={status === \"loading\"}\n              label={\"Demographics\"}\n              placeholder={\"Select Main Demographics\"}\n              data={demographicOptions}\n              onChange={(value) => setSelectedDemographic(value)}\n            />\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={4}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfilePieChart />\n            )}\n          </Center>\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfileDataCard />\n            )}\n          </Center>\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#2B1DFD\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#2B1DFD\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#2B1DFD\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#2B1DFD\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {/* {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/\" element={<BoardStats />} />\n              ) : (\n                <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n              )} */}\n              <PrivateRoute path=\"/\" element={<Root />} />\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/users\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}