{"version":3,"sources":["components/Profiling/assets/Avid Traveler.png","i18n.js","utils/sleep.js","redux/customerSlice.js","StyledComponents/StyledTable.jsx","components/TableDisplay.jsx","pages/Customers/Customers.jsx","pages/Login/Register.jsx","pages/Dashboard/DashboardNavbar.jsx","components/Profiling/assets/index.js","components/Profiling/StatCard.jsx","components/Profiling/Profiling.jsx","components/PersonalInformation/InfoTag.jsx","components/PersonalInformation/PersonalInformation.jsx","redux/keywordSlice.js","components/KeywordsEntry/KeywordsEntry.jsx","components/Interests/Interests.jsx","components/EditableTable/EditableTable.jsx","components/Occupation/Occupation.jsx","components/FamilyDetails/FamilyDetails.jsx","components/Activity/Activity.jsx","components/AgentPages/Remarks.tsx","components/Remarks/RemarkListings.jsx","pages/Dashboard/Dashboard.jsx","redux/authSlice.js","redux/rolesPermissionSlice.js","redux/campaignManagementSlice.js","redux/campaignSlice.js","redux/profileDataCardSlice.js","redux/customerProfileSlice.js","redux/profileAnalysisSlice.js","redux/store.js","components/PrivateRoute.jsx","pages/Login/assets/login.png","pages/Login/assets/eaLogo.png","pages/Login/Recaptcha.jsx","StyledComponents/StyledPasswordInput.jsx","StyledComponents/StyledTextInput.jsx","StyledComponents/StyledButton.jsx","pages/Login/Login.jsx","components/AgentPages/assets/Avid Traveler.png","components/AgentPages/assets/index.ts","components/AgentPages/assets/Fitness Freak.png","components/AgentPages/assets/Foodie.png","components/AgentPages/assets/Sports Fan.png","components/AgentPages/assets/Techie.png","components/AgentPages/assets/AddProfile.png","components/AgentPages/BouncingAvatar.tsx","components/AgentPages/mobileIdMap.ts","components/AgentPages/MobileSimulation.tsx","components/AgentPages/ProfileCard.tsx","components/AgentPages/PercentageCompleted.tsx","components/AgentPages/ProfilingInterests.tsx","components/AgentPages/KeywordsEntry.tsx","components/AgentPages/Questionnaire.tsx","components/AgentPages/AgentEntry.tsx","components/common/useQueryParams.tsx","components/LightDarkButton.jsx","pages/Acl/AssignPermissionModal.jsx","pages/Acl/PermissionRoleMapping.jsx","components/assets/logo.svg","pages/Acl/_mainLink.js","pages/Acl/RolesVsPermissions.jsx","pages/Acl/Permissions.jsx","StyledComponents/StyledDateInput.jsx","StyledComponents/StyledSelect.jsx","pages/Acl/AddUserModal.jsx","pages/Acl/UserActionModal.jsx","pages/Acl/UserPermissions.jsx","pages/Acl/Acl.jsx","pages/PermissionDenied.jsx","pages/Campaign/components/Analysis/DropdownRow.jsx","pages/Campaign/components/Analysis/RadarLinear.jsx","pages/Campaign/components/Analysis/Step1.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomDate.jsx","StyledComponents/StyledTimeInput.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/CustomTime.jsx","pages/Campaign/components/Analysis/CustomTimelineComponents/DateFormatter.js","StyledComponents/StyledBadge.jsx","StyledComponents/StyledCheckBox.jsx","pages/Campaign/components/Analysis/Timeline.jsx","pages/Campaign/components/Analysis/FileUploader.jsx","pages/Campaign/components/Analysis/WysiwygEditor.jsx","pages/Campaign/components/Analysis/Whatsapp.jsx","pages/Campaign/components/Analysis/Preview.jsx","pages/Campaign/components/Analysis/Step2.jsx","pages/Campaign/components/Analysis/CampaignModal.jsx","pages/Campaign/components/Analysis/ButtonGroup.jsx","pages/Campaign/components/Analysis/Demographic.jsx","pages/HomeDashBoard/BarStackedCampaign.jsx","pages/HomeDashBoard/PieChart.jsx","pages/HomeDashBoard/VerticalBarChart.jsx","pages/HomeDashBoard/TopPanelCards.jsx","pages/HomeDashBoard/BoardStats.jsx","pages/Campaign/components/Analysis/Analysis.jsx","components/assets/eaLogoRotate.svg","AppShell/_user.jsx","AppShell/MainAppShell.jsx","pages/Users/UserActionModal.jsx","pages/Users/EditUserInfoModal.jsx","pages/Users/Users.jsx","AppShell/UserMenuItems/MyAccount/MyProfile.jsx","AppShell/UserMenuItems/MyAccount/EditProfile.jsx","AppShell/UserMenuItems/MyAccount/MyAccount.jsx","AppShell/UserMenuItems/SecuritySettings/ChangePassword.jsx","AppShell/UserMenuItems/SecuritySettings/PasswordConstraints.jsx","AppShell/UserMenuItems/SecuritySettings/Security.jsx","pages/Root/CustomerBarChart.jsx","pages/Root/CustomerProfileAnalysis.jsx","pages/Root/ProfileAnalysisBarChart.jsx","pages/Root/ProfileAnalysis.jsx","pages/Root/ProfileBarChart.jsx","pages/Root/PofilePieChart.jsx","pages/Root/ArrowLabel.jsx","pages/Root/assets/Avid Traveler.png","pages/Root/assets/Fitness Freak.png","pages/Root/assets/Foodie.png","pages/Root/assets/Sports Fan.png","pages/Root/assets/Techie.png","pages/Root/assets/index.ts","pages/Root/assets/Auto Lover.png","pages/Root/assets/Musicophile.png","pages/Root/assets/Gadgets Freaks.png","pages/Root/assets/AddProfile.png","pages/Root/ProfileDataCard.jsx","pages/Root/ProfileTypeAnalysis.jsx","pages/Root/Root.jsx","App.js","index.js"],"names":["loadPath","concat","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","supportedLngs","backend","sleep","milliseconds","Promise","resolve","setTimeout","getCustomers","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","getCustomersProfileCompleteness","_callee2","_yield$axios$get2","_context2","getCustomerDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","_x","apply","arguments","getCustomerServicesHistory","_ref4","_callee4","_yield$axios$get4","_context4","console","log","_x2","getCustomerRemarks","_ref5","_callee5","customerId","_yield$axios$get5","_context5","_x3","customerSlice","createSlice","name","initialState","status","customers","customerDetails","customerServiceHistory","fetchedPofileCompleteness","customerServiceHistoryStatus","customerDetailsStatus","customerRemarks","remarksStatus","reducers","setCurrentCustomer","state","action","payload","extraReducers","_extraReducers","_defineProperty","pending","fulfilled","curr_state_obj","res_obj","map","e","customer_details","Object","values","assign","rejected","response","customer","updatedCustomers","profileCompletion","_objectSpread","profile_completion","actions","StyledTable","_ref","columns","onRowClick","topProps","restProps","_objectWithoutProperties","_excluded","theme","useMantineTheme","localTheme","createTheme","shadows","Array","fill","_","i","spacing","factor","palette","background","default","text","primary","colorScheme","csvConfig","mkConfig","useKeysAsHeaders","filename","_jsx","ThemeProvider","children","MaterialReactTable","defaultColumn","maxSize","enableColumnActions","enableDensityToggle","density","muiTableProps","sx","tableLayout","muiTablePaperProps","borderRadius","backgroundColor","boxShadow","muiTableBodyRowProps","_ref2","row","onClick","original","cursor","transition","transform","muiTableBodyCellProps","overflow","textOverflow","whiteSpace","muiTableHeadRowProps","muiTablePaginationProps","color","renderTopToolbarCustomActions","table","Box","w","pt","_jsxs","Flex","justify","Center","ActionIcon","c","size","rows","csv","generateCsv","download","handleExportRows","getRowModel","IconTableExport","Text","fw","Group","renderToolbarInternalActions","MRT_ToggleGlobalFilterButton","style","MRT_ToggleFiltersButton","MRT_ShowHideColumnsButton","MRT_FullScreenToggleButton","TableDisplay","customerList","dispatch","useDispatch","navigate","useNavigate","useMemo","accessorFn","_row$profiling","_row$profiling$person","profiling","personal_details","full_name","header","substr","accessorKey","minSize","percentage","RingProgress","thickness","sections","value","label","weight","align","Loader","type","Customers","_useSelector","useSelector","useEffect","LoadingOverlay","visible","overlayBlur","overlayColor","loaderProps","variant","_Fragment","display","flexGrow","width","padding","justifyContent","marginBottom","marginTop","Title","pl","Register","Container","my","fontFamily","fontWeight","mt","component","Link","to","Paper","withBorder","shadow","p","radius","TextInput","placeholder","required","PasswordInput","position","Checkbox","lineHeight","Button","fullWidth","useStyles","createStyles","_hover","link","fn","focusStyles","alignItems","textDecoration","fontSize","fontSizes","sm","colors","dark","gray","md","backdropFilter","border","webkitBackdropFilter","outline","white","getStylesRef","black","linkIcon","ref","marginRight","linkActive","primaryColor","stickyNavbar","height","top","icon","IconUser","IconCircleKey","IconTimeline","IconPalette","IconClipboardText","IconBriefcase","IconComet","IconFriends","IconReportMoney","IconCarCrash","IconCar","IconHealthRecognition","IconSocial","DashboardNavbar","_useStyles","classes","cx","_useState","useState","_useState2","_slicedToArray","active","setActive","links","item","NavLink","className","event","lg","Stack","Navbar","Section","grow","IconArrowNarrowLeft","rightSection","imageURL","require","baseUrl","window","location","origin","_AvidTraveler$Fitnes","ICON_SIZE","rem","card","xl","paddingTop","left","title","StatsCard","percentageCompleted","url","frequency","lastUpdated","Avatar","src","ta","fz","Progress","Badge","Profiling","stats","entries","assets","list","customerStats","Math","floor","random","maxLastUpdated","maxCompleted","min","getCustomerStats","Grid","Col","span","gutter","InfoTag","subject","PersonalInformation","selectedCustomer","profile","source","memoizedSelectedCustomer","randomDetails","randomLocation","faker","city","randomState","randomAddress","streetAddress","randomPincode","zipCode","Space","h","split","gender","dob","age","marital_status","Divider","email","alternate_email","phone_number","alternate_phone_number","getKeywords","getCustomerKeywords","searchKeywords","query","updateKeywords","keywordPayload","_yield$axios$post","post","keywordSlice","KeywordsStatus","customerKeywordsStatus","updateKeywordsStatus","keywords","customerKeywords","keywordsStatus","hasPermission","userPermissions","permissionName","some","permission","KeywordsEntry","updateKeywordValuesParent","handleSubmitKeywords","setData","_useSelector2","rolePermission","rolesPermissionsStatus","_useSelector3","keyword","_useState3","_useState4","setValue","_useState5","_useState6","searchValue","onSearchChange","_useState7","_useState8","setUnknowns","_useState9","_useState10","isDataChanged","setDataChanged","transformedData","category","allKeywords","unknownValues","filter","obj","hasChanged","isEqual","handleSearchChange","debounce","isArray","MultiSelect","onChange","searchable","clearable","withinPortal","creatable","getCreateLabel","onCreate","current","_toConsumableArray","readOnly","alignSelf","Interests","interests","setInterests","groupedByCategory","groupBy","uniq","interest","React","Fragment","gradient","from","rowSelected","rgba","EditableTable","initialData","headerData","createEmptyRow","customInputs","selection","setSelection","editRow","setEditRow","newRow","setNewRow","tempEditData","setTempEditData","headerElements","headerItem","index","handleEditChange","rowId","key","prevData","handleNewRowChange","newRowElement","keys","currentTarget","length","toString","bg","selected","includes","checked","transitionDuration","IconCheck","IconX","find","prevState","IconEdit","mb","IconTrash","ml","IconPlus","ScrollArea","maxHeight","Table","industry","incomeBracket","Occupation","relationship","phone","FamilyDetails","rowData","Activity","historyItem","ticket_id","order_id","source_of_booking","ticket_type","ticket_date","tat","service","subType","Remarks","Textarea","RemarkListings","currentCustomerId","_useDisclosure","useDisclosure","_useDisclosure2","opened","_useDisclosure2$","open","close","selectedRemark","setSelectedRemark","remark","Modal","onClose","centered","agentName","date","time","Dashboard","submitKeywords","setRoutesClicked","keywordValues","setKeywordValues","showNotification","setNotification","auth","isLoggedIn","_useState11","_useState12","useLocation","_useState13","_useState14","pathname","Card","Routes","Route","element","path","keywordsPayload","then","Notification","loading","withCloseButton","parseJwt","token","base64","replace","jsonPayload","decodeURIComponent","atob","charCodeAt","slice","join","JSON","parse","loginUser","userData","registerUser","_yield$axios$post2","getProfile","getUsers","addUser","_yield$axios$post3","t0","_x4","authSlice","user","userStatus","users","setAuth","logout","localStorage","clear","defaults","headers","common","reload","storage","getItem","_id","access_token","_parseJwt","sub","setItem","stringify","_parseJwt2","_authSlice$actions","getAllRolesPermissionsMappings","updateRolesIntoPermission","permissionId","roleIds","_yield$axios$patch","patch","createRoles","createPermission","_ref6","createRolesPermissionMapping","_ref7","getAllRoles","_callee6","_context6","getAllPermissions","_callee7","_context7","getAllPermissionsByRole","_ref10","_callee8","roleid","_context8","_x5","getAllRolesPermissionsMappingsByUser","_ref11","_callee9","userId","_context9","_x6","deactivateMapping","_ref12","_callee10","mappingId","_yield$axios$get6","_context10","_x7","rolesPermissionSlice","rolesPermissions","updateRolesStatus","createRolesStatus","createPermissionStatus","getAllRolesStatus","getAllPermissionsStatus","permissionsByRoleStatus","createRolesPermissionMappingStatus","getAllRolesPermissionsMappingsByUserStatus","deactivateMappingStatus","roles","permissions","userRoles","permissionsByRole","getUserRolesPermissionsByMapping","role","push","clearUserPermissions","userRole","_rolesPermissionSlice","fetchRowData","getState","endpoint","responses","commonCustomerIDs","_loop","_i","_Object$keys","campaignManagement","process","rowKey","body","customerIDsForThisRow","first","second","third","Error","information_type","toLowerCase","fetch","method","json","Set","figures","customerIDs","delegateYield","fetchFiguresForRow","_i2","_Object$keys2","otherRowId","Number","otherRow","createCampaign","rejectWithValue","eventName","eventBased","triggerTime","tabData","Email","timelineState","recurrence","recurrenceTime","recurrenceType","toUpperCase","start","startDate","end","endDate","templateText","content","allCustomerIDs","ok","message","isModalOpen","dropdownData","Date","now","selectedCombinations","eventDate","step","activeTab","fileName","file","characterCount","charLimit","SMS","Whatsapp","radarData","count","downloadDataStatus","error","rowIdsArray","loadingStates","errors","campaignManagementSlice","toggleModal","updateDropdownData","updateRows","flatMap","updateSelectedCombinations","setCampaignName","campaignName","setEventName","setEventDate","setStep","setStartDate","setEndDate","setActiveTab","updateTabData","setRadarData","resetModal","forEach","lastRowId","max","meta","arg","_action$payload","_campaignManagementSl","selectRadarData","fetchData","fetchSources","sources","fetchCampaignNames","campaignNames","campaignSlice","selectedCampaign","selectCampaign","builder","addCase","delivered","totalSent","interested","success","failure","failed","converted","API_URL","fetchProfileData","requestBody","profileTypeDemoStats","demographicData","totalCount","profileDataCard","profileType","demographic","profiles","displayName","displayAndColorMappings","reduce","sum","hoveredItem","food","sports","travel","music","fitness","automobile","gadget","technology","profileDataCardSlice","setHoveredItem","clearHoveredItem","_profileDataCardSlice","selectHoveredItem","selectProfileData","selectRequestBody","selectProfileTypeDemoStats","fetchCustomerProfileData","month","customerProfileToolSlice","fetchProfileCount","profileCountSlice","store","configureStore","reducer","campaignManagementReducer","campaign","campaignReducer","customerProfileTool","customerProfileSlice","profileCount","profileAnalysisSlice","PrivateRoute","props","Navigate","Recaptcha","setCaptchaStatus","ReCAPTCHA","sitekey","StyledPasswordInput","defaultStyles","visibilityToggle","teal","input","styles","StyledTextInput","pointerEvents","StyledButton","root","backgroundImage","Login","setEmail","password","setPassword","captchaStatus","BackgroundImage","loginImage","deg","Image","eaLogo","target","disabled","preventDefault","BouncingAvatar","shouldBounce","animation","setAnimation","AddProfile","backgroundSize","backgroundPosition","SimulateCall","showIcon","setShowIcon","showIframe","setShowIframe","iframeRef","useRef","mobileNumber","setMobileNumber","isValidMobileNumber","setIsValidMobileNumber","mobileNumberError","setMobileNumberError","iframeSrc","setIframeSrc","handleMessage","addEventListener","removeEventListener","handleSimulateCall","responseProfile","responseCategories","responseCompletion","details","mobileIdMap","mobileNo","mobile","URLSearchParams","completionPercentage","categories","profilingTypes","toggleIframe","isValid","test","validateMobileNumber","bottom","xs","right","zIndex","allowFullScreen","ProfileCard","onDetailChange","editable","PercentageCompleted","ProfilingInterests","profilingInterests","setKeywordsAdded","keywordList","setKeywordList","keywordsSelected","setKeywordsSelected","inputRef","handleChange","change","onRemove","others","removeButton","onMouseDown","customerKeywordsData","keywordsDifference","newData","differenceWith","catch","_inputRef$current","focus","MultiSelectComponent","hoverOnSearchChange","minHeight","valueComponent","transitionProps","duration","timingFunction","flexDirection","Questionnaire","setQuestionsHistory","selectedAnswers","setSelectedAnswers","selectedQuestions","setSelectedQuestions","isLoading","setIsLoading","fetchQuestions","categoriesKeys","randomCategories","randomIndex","randomCategoryKey","randomCategoryItems","fetchedQuestions","_randomCategories","categoryItems","bodyInputParts","_iterator","_step","result","questionText","questionLevel","questionAnswers","splice","_createForOfIteratorHelper","s","n","done","level","err","f","parseInt","_unused","question","answers","idx","updatedQuestions","Autosize","mah","maw","mx","answer","_selectedAnswers$ques","questionId","answerId","isMultiple","mr","initialProfileDetails","AgentEntry","_useQueryParams","searchParams","search","params","_step$value","useQueryParams","_useQueryParams$profi","currentProfile","setCurrentProfile","setPercentageCompleted","setProfilingInterests","categoryObject","profileList","setProfileList","setModalOpen","isFullScreen","setFullScreen","_useState15","_useState16","questionHistory","setQuestionHistory","_useState17","_useState18","keywordsAdded","errorNotification","notifications","show","onOpen","autoClose","successNotification","handleProfileSubmit","history","dir","prevProfileList","parent","postMessage","AxiosError","handleClose","submit","profileExists","direction","document","exitFullscreen","documentElement","requestFullscreen","IconMaximize","pr","prevProfile","LightDarkButton","_useMantineColorSchem","useMantineColorScheme","toggleColorScheme","IconSun","IconMoonStars","AssignPermissionModal","handleModalClose","selectedUserRoleName","selectedUser","setSelectedUser","selectedPermission","setSelectedPermission","handleAssignPermission","selectedRole","Select","rolesPermission","dropdownComponent","PermissionRoleMappings","scrolled","setScrolled","rolename","permissionname","username","compact","isactive","created_at","IconSettings","order","onScrollPositionChange","y","miw","striped","highlightOnHover","withColumnBorders","IconDatabase","RolesVsPermissions","Cell","column","Permissions","permissionsData","StyledDateInput","dropdown","calendarHeader","day","monthList","weekday","calendarHeaderLevel","calendarHeaderControlIcon","DateInput","valueFormat","popoverProps","IconCalendar","StyledSelect","IconChevronDown","AddUserModal","handleAddUser","userDetails","setUserDetails","rolesData","SimpleGrid","cols","firstname","withAsterisk","lastname","maxDate","formatDate","dateString","toLocaleDateString","undefined","year","prop","borderColor","blue","description","closeButton","UserActionModal","curr_user","userRolesPermissions","userPermissionsOptions","isActive","tableData","setTableData","adding","setAdding","Switch","onLabel","offLabel","overlayProps","opacity","blur","alt","borderLeft","fontColor","roleId","UserPermissions","borderBottom","isAddUserModalOpen","setAddUserModalOpen","isUserActionModalOpen","setUserActionModalOpen","userPermissionsDict","setCurrUser","hasOwnProperty","_step2","allUserIds","_iterator2","fullname","AppShell","Acl","isAssignPermissionModalOpen","setIsAssignPermissionModalOpen","isCreatePermissionModalOpen","setCreatePermissionModalOpen","setSelectedRole","setSelectedUserRoleName","userBySelectedId","x","rolesPermissionsMapping_initialData","userPermissionsInitialData","d","roles_initialData","defaultPermissions","permissions_initialData","PermissionDenied","DropdownRow","handleDropdownChange","deleteRow","secondDropdownOptions","thirdDropdownOptions","option","currentCombination","isSelectedCombination","isSelectedInCurrentRow","loadingState","handleRefresh","IconExclamationMark","IconRefresh","RadarLinear","updatedData","CustomizedAxisTick","dy","textAnchor","ResponsiveContainer","RadarChart","cy","outerRadius","PolarGrid","PolarAngleAxis","dataKey","tick","Radar","stroke","fillOpacity","Step1","evt","minDate","CustomDate","setSelectedDate","StyledTimeInput","TimeInput","showPicker","IconClock","CustomTime","setSelectedTime","timeSelected","formatDateTime","itemDate","itemTime","combinedDateTime","moment","format","StyledBadge","StyledCheckBox","Timeline","onUpdate","onApplyForAll","defaultStartDate","defaultResults","dailyFrequency","weeklyDays","monthlyDay","monthlyFrequency","monthlyWeekday","customDateTimes","results","setResults","weekDays","showDropdown","setShowDropdown","setCustomDateTimes","selectedDate","selectedTime","setRecurrenceTime","newCustomDateTime","addCustomDate","handleDateChange","field","handleRecurrenceChange","handleMonthlyDayAndFrequencyChange","updatedValue","handleDailyFrequencyChange","updatedDays","handleWeeklyDaysChange","indexToRemove","updatedCustomDateTimes","removeCustomDate","borderWidth","leftSection","FileUploader","_tabData$activeTab","handleFileChange","fileContent","updatedTabData","files","alert","accept","WysiwygEditor","initialContent","editor","useEditor","extensions","StarterKit","Underline","Superscript","SubScript","Highlight","TextAlign","configure","types","getHTML","sanitizedContent","DOMPurify","sanitize","commands","insertContent","RichTextEditor","control","controlsGroup","toolbar","Toolbar","sticky","stickyOffset","ControlsGroup","Bold","Italic","Strikethrough","ClearFormatting","Code","H1","H2","H3","H4","Blockquote","Hr","BulletList","OrderedList","Subscript","Unlink","AlignLeft","AlignCenter","AlignJustify","AlignRight","Content","previewStyles","dangerouslySetInnerHTML","__html","IconArrowLeft","IconVideo","IconPhone","Preview","tab","zoom","Step2","previewMode","setPreviewMode","enterPreviewMode","exitPreviewMode","handleTextInputWysiwyg","_tabData$tab","newState","currentTimelineState","CampaignModal","campaignManagementState","showConfirmation","setShowConfirmation","setLoading","closeOnClickOutside","trim","res","match","ButtonGroup","isOpen","closeModal","Demographic","acc","curr","BarStackedView","margin","IconArrowRight","BarChart","maxBarSize","CartesianGrid","strokeLinecap","horizontalCoordinatesGenerator","vertical","XAxis","YAxis","angle","offset","Tooltip","Legend","iconType","verticalAlign","Bar","stackId","strokeWidth","LabelList","COLORS","CustomPieChart","PI","PieChart","Pie","labelLine","entry","VerticalBarChart","layout","Delivered","Interested","Converted","Failure","barSize","IconClick","IconCreditCard","IconCone","IconBounceLeft","TopPanelCards","visibleTooltip","setVisibleTooltip","onMouseEnter","onMouseLeave","noWrap","withArrow","BoardStats","Analysis","updatedDropdownData","updatedCategory","finalDropdownData","updatedRows","updatedCombinations","thirdValue","opt","combination","updatedSelectedCombinations","overflowY","User","_user$email","roleName","Menu","trigger","openDelay","closeDelay","Target","UnstyledButton","avatarUrl","Dropdown","IconKey","IconLogout","MainAppShell","activeNavLink","setActiveNavLink","isMounted","setIsMounted","Header","paddingRight","base","IconBell","Logo","findUserRoleNameById","IconAnalyze","IconUsersGroup","IconSettingsAutomation","Icon3dCubeSphere","IconAccessible","paddingLeft","bulletSize","lineWidth","Item","bullet","IconGitBranch","inherit","IconGitCommit","EditUserInfoModal","handleEditUser","initialUserDetails","Users","isEditUserModalOpen","setEditUserModalOpen","editingUser","setEditingUser","handleUserActionModal","selected_user","updatedUserData","MyProfile","imagePreview","setImagePreview","form","useForm","initialValues","emailId","dateOfBirth","image","validate","validateInputOnChange","imageInputRef","setFieldValue","onSubmit","click","getInputProps","inputMode","URL","createObjectURL","EditProfile","address","pincode","MyAccount","ChangePassword","onPasswordChange","canSave","oldPassword","newPassword","confirmPassword","handleSubmit","_error$response","PasswordConstraints","_ref$password","onValidationChange","condition","validations","every","v","Security","validationsPassed","setValidationsPassed","CustomerBarChart","chartData","strokeDasharray","CustomerProfileAnalysis","selectedSource","setSelectedSource","ProfileAnalysisBarChart","ProfileAnalysis","detractors","promotors","ProfileBarChart","RenderActiveShape","RADIAN","midAngle","innerRadius","startAngle","endAngle","percent","sin","cos","sy","ex","ey","Sector","r","toFixed","ProfilePieChart","profileData","dataToDisplay","activeIndex","findIndex","activeShape","Arrow","_ref$bgColor","bgColor","_ref$textColor","textColor","_ref$text","isHovered","viewBox","points","canvas","createElement","ctx","getContext","fillStyle","fillRect","_Array$from","getImageData","_Array$from2","g","b","transparentBgColor","AvidTraveler","Musicophile","FitnessFreak","Foodie","SportsFan","Techie","ProfileDataCard","handleMouseLeave","totalValue","cur","scrollbarColor","ArrowLabel","ProfileTypeAnalysis","selectedProfile","setSelectedProfile","selectedDemographic","setSelectedDemographic","profileOptions","Root","App","setColorScheme","login","ColorSchemeProvider","MantineProvider","withGlobalStyles","withNormalizeCSS","Notifications","baseURL","ReactDOM","render","StrictMode","Provider","BrowserRouter","Suspense","fallback","getElementById"],"mappings":"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","file":"static/js/main.c0b39f3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"JfMdrKKmBHuC9YGlc3kDSw\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n\n    ns: [\"default\"],\n    defaultNS: \"default\",\n\n    supportedLngs: [\"en\",\"hi\",\"mr\"],\n    \n    backend: {\n      loadPath: loadPath\n    }\n  })","export function sleep (milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }","import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  status: \"idle\",\n  customers: [],\n  customerDetails: {},\n  customerServiceHistory: [],\n  fetchedPofileCompleteness: false,\n  customerServiceHistoryStatus: \"idle\",\n  customerDetailsStatus: \"idle\",\n  customerRemarks: [], // New field for storing customer remarks\n  remarksStatus: \"idle\", // New status field for customer remarks\n};\n\nexport const getCustomers = createAsyncThunk(\n  \"customer/getCustomers\",\n  async () => {\n    // await sleep(3000)\n    const { data } = await axios.get(\"/customers\");\n    return data;\n  },\n);\n\nexport const getCustomersProfileCompleteness = createAsyncThunk(\n  \"customer/getCustomersProfileCompleteness\",\n  async () => {\n    await sleep(200);\n    const { data } = await axios.get(\"/profile\");\n    return data;\n  },\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/customers/\" + id);\n    return data;\n  },\n);\n\nexport const getCustomerServicesHistory = createAsyncThunk(\n  \"customer/getCustomerDetails\",\n  async (id) => {\n    const { data } = await axios.get(\"/api/service-customer-mappings/\" + id);\n    console.log(data);\n    return data;\n  },\n);\n\nexport const getCustomerRemarks = createAsyncThunk(\n  \"customer/getCustomerRemarks\",\n  async (customerId) => {\n    const { data } = await axios.get(\"/customers/remarks/\" + customerId);\n    console.log(\"Remarks in thunk\", data);\n    return data;\n  },\n);\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    setCurrentCustomer: (state, action) => {\n      state.customerDetails = action.payload;\n    },\n  },\n  extraReducers: {\n    [getCustomers.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomers.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const curr_state_obj = {};\n      const res_obj = {};\n      state.customers.map((e) => (curr_state_obj[e.id] = e));\n      action.payload.customer_details.map((e) => (res_obj[e.id] = e));\n      state.customers = Object.values(Object.assign(curr_state_obj, res_obj));\n    },\n    [getCustomers.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerDetails.pending]: (state) => {\n      state.customerDetailsStatus = \"loading\";\n    },\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetailsStatus = \"success\";\n      state.customerDetails = action.payload.response.customer;\n    },\n    [getCustomerDetails.rejected]: (state) => {\n      state.customerDetailsStatus = \"failed\";\n    },\n    [getCustomersProfileCompleteness.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getCustomersProfileCompleteness.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const updatedCustomers = state.customers.map((customer) => {\n        const profileCompletion = action.payload.profileCompletion\n          ? action.payload.profileCompletion[customer.id]\n          : 0;\n        return {\n          ...customer,\n          profile_completion: profileCompletion,\n        };\n      });\n      state.customers = updatedCustomers;\n      state.fetchedPofileCompleteness = true;\n    },\n    [getCustomersProfileCompleteness.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n    [getCustomerServicesHistory.pending]: (state) => {\n      state.customerServiceHistoryStatus = \"loading\";\n    },\n    [getCustomerServicesHistory.fulfilled]: (state, action) => {\n      state.customerServiceHistoryStatus = \"success\";\n      state.customerServiceHistory = action.payload.data;\n    },\n    [getCustomerServicesHistory.rejected]: (state) => {\n      state.customerServiceHistoryStatus = \"failed\";\n    },\n    [getCustomerRemarks.pending]: (state) => {\n      state.remarksStatus = \"loading\";\n    },\n    [getCustomerRemarks.fulfilled]: (state, action) => {\n      state.remarksStatus = \"success\";\n      state.customerRemarks = action.payload; // Assuming API returns an array of remarks\n    },\n    [getCustomerRemarks.rejected]: (state) => {\n      state.remarksStatus = \"failed\";\n    },\n  },\n});\n\nexport default customerSlice.reducer;\nexport const { setCurrentCustomer } = customerSlice.actions;\n","/* eslint-disable react/jsx-pascal-case */\nimport {\n  MaterialReactTable,\n  MRT_FullScreenToggleButton,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFiltersButton,\n  MRT_ToggleGlobalFilterButton,\n} from \"material-react-table\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport {\n  Box,\n  Center,\n  Group,\n  ActionIcon,\n  Text,\n  Flex,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nconst StyledTable = ({ columns, data, onRowClick, topProps, ...restProps }) => {\n  const theme = useMantineTheme();\n\n  const localTheme = createTheme({\n    shadows: Array(25)\n      .fill(\"none\")\n      .map((_, i) =>\n        i === 2\n          ? \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\"\n          : \"none\",\n      ),\n    spacing: (factor) => `${0.25 * factor}rem`,\n    palette: {\n      background: {\n        default: \"#00000000\",\n        // theme.colorScheme == \"light\" ? \"#F1F5F9\" : \"#25262B\",\n      },\n      text: {\n        primary: theme.colorScheme == \"light\" ? \"#0E0E0F\" : \"#A6A7AB\",\n      },\n    },\n  });\n\n  const csvConfig = mkConfig({\n    useKeysAsHeaders: true,\n    filename: \"exported_customers\",\n  });\n\n  const handleExportRows = (rows) => {\n    const csv = generateCsv(csvConfig)(rows.map((row) => row.original));\n    download(csvConfig)(csv);\n  };\n\n  return (\n    <ThemeProvider theme={localTheme}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        defaultColumn={{ maxSize: 300 }}\n        enableColumnActions={false}\n        enableDensityToggle={false}\n        state={{ density: \"compact\" }}\n        initialState={{ density: \"compact\" }}\n        muiTableProps={{\n          sx: { tableLayout: \"fixed\" },\n        }}\n        muiTablePaperProps={{\n          sx: {\n            borderRadius: \"20px\",\n            backgroundColor: theme.colorScheme === \"dark\" ? \"#25262B\" : \"white\",\n            boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n          },\n        }}\n        muiTableBodyRowProps={({ row }) => ({\n          onClick: () => onRowClick(row.original),\n          sx: {\n            cursor: \"pointer\",\n            transition: \"transform 0.3s ease, background-color 0.3s ease\",\n            \"&:hover\": {\n              transform: \"scale(0.99)\",\n              backgroundColor: \"#F3F6FF90\",\n            },\n          },\n        })}\n        muiTableBodyCellProps={{\n          sx: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        muiTableHeadRowProps={{\n          sx: { backgroundColor: \"#F3F6FF\" },\n        }}\n        muiTablePaginationProps={{\n          sx: { color: \"#0d5ff9\" },\n        }}\n        renderTopToolbarCustomActions={({ table }) => (\n          <Box w={\"100%\"} pt={10}>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <ActionIcon\n                  c={\"#0d5ff9\"}\n                  size={\"sm\"}\n                  onClick={() => handleExportRows(table.getRowModel().rows)}\n                >\n                  <IconTableExport />\n                </ActionIcon>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Export\n                </Text>\n              </Center>\n              <Center>\n                <Group>{topProps ? topProps() : null}</Group>\n              </Center>\n            </Flex>\n          </Box>\n        )}\n        renderToolbarInternalActions={({ table }) => (\n          <Box w={160}>\n            <MRT_ToggleGlobalFilterButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ToggleFiltersButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_ShowHideColumnsButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n            <MRT_FullScreenToggleButton\n              style={{ color: \"#0d5ff9\" }}\n              table={table}\n            />\n          </Box>\n        )}\n        {...restProps}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default StyledTable;\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setCurrentCustomer } from \"../redux/customerSlice\";\n\nimport { RingProgress, Text, Box, Loader } from \"@mantine/core\";\nimport StyledTable from \"../StyledComponents/StyledTable\";\n\nexport default function TableDisplay({\n  customerList,\n  fetchedPofileCompleteness,\n}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const profileCompletion = (percentage) => {\n    return (\n      <Box>\n        <RingProgress\n          size={45}\n          thickness={3}\n          sections={[\n            {\n              value: percentage,\n              color:\n                percentage > 25\n                  ? \"#1D9B25\"\n                  : percentage > 50\n                    ? \"#CFA400\"\n                    : \"#D85972\",\n            },\n          ]}\n          label={\n            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n              {percentage}%\n            </Text>\n          }\n        />\n      </Box>\n    );\n  };\n\n  const handleRowClick = (customer) => {\n    navigate(\"/dashboard\");\n    dispatch(setCurrentCustomer(customer));\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorFn: (row) => `${row.profiling?.personal_details?.full_name}`,\n        id: \"name\",\n        header: \"Name\",\n      },\n      {\n        accessorFn: (row) => `CLID${row.id.substr(0, 6)}....`,\n        id: \"customerId\",\n        header: \"Customer Id\",\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        minSize: 400,\n      },\n      {\n        accessorKey: \"source\",\n        header: \"Source\",\n      },\n      {\n        accessorKey: \"mobile\",\n        header: \"Mobile\",\n      },\n      {\n        accessorFn: (row) =>\n          !fetchedPofileCompleteness ? (\n            <Loader type={\"dots\"} color=\"#0d5ff9\" />\n          ) : (\n            profileCompletion(row.profile_completion)\n          ),\n        id: \"profileCompletion\",\n        header: \"Profile Completion\",\n      },\n    ],\n    [fetchedPofileCompleteness],\n  );\n\n  return (\n    <Box>\n      <StyledTable\n        columns={columns}\n        data={customerList}\n        onRowClick={handleRowClick}\n      />\n    </Box>\n  );\n}\n","import { LoadingOverlay, Title } from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TableDisplay from \"../../components/TableDisplay\";\n\nconst Customers = () => {\n  const dispatch = useDispatch();\n\n  const { status, customers, fetchedPofileCompleteness } = useSelector(\n    (state) => state.customer,\n  );\n\n  // if(Array.isArray(customers) && customers.length > 0) setCustomerList(customers)\n\n  useEffect(() => {\n    dispatch(getCustomers());\n    dispatch(getCustomersProfileCompleteness());\n  }, []);\n\n  if (status === \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n            <div style={{ padding: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"20px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <span>\n                  <Title pl={5}>Customers</Title>\n                </span>\n              </div>\n              <TableDisplay\n                customerList={customers}\n                fetchedPofileCompleteness={fetchedPofileCompleteness}\n              />\n            </div>\n          </span>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Customers;\n","import {\n    TextInput,\n    PasswordInput,\n    Checkbox,\n    Anchor,\n    Paper,\n    Title,\n    Text,\n    Container,\n    Group,\n    Button,\n    Center,\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    return (\n        <Container size={420} my={40}>\n            <Title\n                align=\"center\"\n                sx={(theme) => ({\n                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                    fontWeight: 900,\n                })}\n            >\n                Customer Profiling\n            </Title>\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5} component={Link} to={'/'}>\n                <Center>\n                    Already have an account?\n                    <Text c={'blue'}>\n                        Login\n                    </Text>\n                </Center>\n            </Text>\n\n            <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n                <TextInput label=\"Email\" placeholder=\"you@ea.in\" required />\n                <PasswordInput\n                    label=\"Password\"\n                    placeholder=\"Your password\"\n                    required\n                    mt=\"md\"\n                />\n                <Group position=\"apart\" mt=\"lg\">\n                    <Checkbox label=\"Remember me\" sx={{ lineHeight: 1 }} />\n                    {/* <Anchor<\"a\">\n                        onClick={(event) => event.preventDefault()}\n                        href=\"#\"\n                        size=\"sm\"\n                    >\n                        Forgot password?\n                    </Anchor> */}\n                </Group>\n                <Link to={'/dashboard'}>\n                    <Button fullWidth mt=\"xl\">\n                        Register\n                    </Button>\n                </Link>\n            </Paper>\n        </Container>\n    );\n}\n","import {\n  IconArrowNarrowLeft,\n  IconBriefcase,\n  IconCar,\n  IconCarCrash,\n  IconCircleKey,\n  IconClipboardText,\n  IconComet,\n  IconFriends,\n  IconHealthRecognition,\n  IconPalette,\n  IconReportMoney,\n  IconSocial,\n  IconTimeline,\n  IconUser,\n} from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Navbar,\n  Group,\n  Code,\n  getStylesRef,\n  rem,\n  NavLink,\n  Card,\n  useMantineTheme,\n  Stack,\n  Box,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.md,\n    // border: \"1px solid #0d5ff9\",\n    marginTop: 5,\n    fontWeight: 500,\n    \"&\": {\n      // backgroundColor:\n      //   theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0D5FF9\",\n      boxShadow: `\n rgba(13, 95, 249, 1) 0px 1px 1px,\n rgba(13, 95, 249, 0.5) 0px 2px 2px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 2px 5px,\n rgba(13, 95, 249, 0.5) 0px 3px 5px\n      `,\n      /* From https://css.glass */\n      background: \"rgba(, 1)\",\n      borderRadius: \"16px\",\n      // boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n      backdropFilter: \"blur(5.1px)\",\n      border: \"1px solid rgba(, 0.42)\",\n      webkitBackdropFilter: \"blur(5.1px)\",\n      //       boxShadow: `\n      //     rgba(92, 0, 242, 0.09) 0px 4px 2px,\n      //     rgba(92, 0, 242, 0.09) 0px 32px 16px\n      // `,\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n      transition: \"transform 0.3s ease\",\n      \"&:hover\": {\n        transform: \"translateX(5px)\",\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\n// const useStyles = createStyles((theme) => ({\n//     link: {\n//         ...theme.fn.focusStyles(),\n//         display: 'flex',\n//         alignItems: 'center',\n//         textDecoration: 'none',\n//         fontSize: theme.fontSizes.sm,\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n//         // padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n//         borderRadius: theme.radius.sm,\n//         fontWeight: 500,\n//\n//         '&:hover': {\n//             backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : '#4E70EA',\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n//             },\n//         },\n//     },\n//\n//     linkIcon: {\n//         ref: getStylesRef('icon'),\n//         color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n//         marginRight: theme.spacing.sm,\n//     },\n//\n//     linkActive: {\n//         '&, &:hover': {\n//             // backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n//             backgroundColor: theme.colorScheme === 'dark' ? '#252D3B' : '#4E70EA',\n//             // color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             color: theme.colorScheme === 'dark' ? theme.white : '#FFFFFF',\n//             [`& .${getStylesRef('icon')}`]: {\n//                 color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n//             },\n//         },\n//     },\n// }));\n\nconst data = [\n  {\n    link: \"personalInformation\",\n    label: \"Personal Information\",\n    icon: <IconUser />,\n  },\n  { link: \"keywords\", label: \"Keywords\", icon: <IconCircleKey /> },\n  { link: \"profiling\", label: \"Profiling\", icon: <IconTimeline /> },\n  { link: \"interests\", label: \"Interests\", icon: <IconPalette /> },\n  { link: \"remarks\", label: \"Remarks\", icon: <IconClipboardText /> },\n  { link: \"occupation\", label: \"Occupation\", icon: <IconBriefcase /> },\n  { link: \"activity\", label: \"Activity\", icon: <IconComet /> },\n  { link: \"familydetails\", label: \"Family Details\", icon: <IconFriends /> },\n  {\n    link: \"Financial Information\",\n    label: \"Financial Information\",\n    icon: <IconReportMoney />,\n  },\n  {\n    link: \"Insurance Details\",\n    label: \"Insurance Details  \",\n    icon: <IconCarCrash />,\n  },\n  { link: \"Vehicle\", label: \"Vehicle\", icon: <IconCar /> },\n  { link: \"Health\", label: \"Health\", icon: <IconHealthRecognition /> },\n  { link: \"Social Media\", label: \"Social Media\", icon: <IconSocial /> },\n];\n\nconst DashboardNavbar = () => {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(\"Personal Information\");\n  const theme = useMantineTheme();\n\n  const links = data.map((item) => (\n    <NavLink\n      className={cx(classes.link, {\n        [classes.linkActive]: item.label === active,\n      })}\n      icon={item.icon}\n      component={Link}\n      variant=\"subtle\"\n      to={item.link}\n      label={item.label}\n      key={item.label}\n      onClick={(event) => {\n        setActive(item.label);\n      }}\n    />\n  ));\n\n  return (\n    <Box height={700} p=\"md\" width={{ sm: 200, lg: 300 }} withBorder={false}>\n      <Stack>\n        <Box\n          sx={{\n            borderRadius: 10,\n            padding: 2,\n          }}\n        >\n          <Navbar.Section grow>{links}</Navbar.Section>\n        </Box>\n\n        <Navbar.Section>\n          <NavLink\n            icon={<IconArrowNarrowLeft />}\n            component={Link}\n            variant=\"subtle\"\n            to=\"/customers\"\n            c=\"#0d5ff9\"\n            sx={{\n              cursor: \"pointer\",\n              borderRadius: 10,\n            }}\n            label={\"Go Back\"}\n            rightSection\n          />\n        </Navbar.Section>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DashboardNavbar;\n","\nconst imageURL = require('./Avid Traveler.png');\nconst baseUrl = window.location.origin;\nconst finalImageUrl = baseUrl + imageURL;\n\nconsole.log(baseUrl,imageURL.default);\n\n\n\n// export default {\n//     [`Avid Traveler`]: new URL('./Avid Traveler.png', import.meta.url).href,\n//     [`Fitness Freak`]: new URL('./Fitness Freak.png', import.meta.url).href,\n//     [`Foodie`]: new URL('./Foodie.png', import.meta.url).href,\n//     [`Sports Fan`]: new URL('./Sports Fan.png', import.meta.url).href,\n//     [`Techie`]: new URL('./Techie.png', import.meta.url).href,\n// }\n\nexport default {\n    [`Avid Traveler`]: \"\",\n    [`Fitness Freak`]: \"\",\n    [`Foodie`]:\"\",\n    [`Sports Fan`]: \"\",\n    [`Techie`]:\"\",\n}\n","import { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper, rem, Avatar } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\n\nconst ICON_SIZE = rem(60);\n\nconst useStyles = createStyles((theme) => ({\n    card: {\n        position: 'relative',\n        overflow: 'visible',\n        padding: theme.spacing.xl,\n        paddingTop: `calc(${theme.spacing.xl} * 1.5 + ${ICON_SIZE} / 3)`,\n    },\n\n    icon: {\n        position: 'absolute',\n        top: `calc(-${ICON_SIZE} / 3)`,\n        left: `calc(50% - ${ICON_SIZE} / 2)`,\n    },\n\n    title: {\n        fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n        lineHeight: 1,\n    },\n}));\n\nconst getExpertiseLevel = (percentageCompleted) => {\n    if (percentageCompleted >= 0 && percentageCompleted <= 10) {\n        return 'Clueless Newbie';\n    } else if (percentageCompleted > 10 && percentageCompleted <= 25) {\n        return 'Bumbling Beginner';\n    } else if (percentageCompleted > 25 && percentageCompleted <= 40) {\n        return 'Somewhat Savvy';\n    } else if (percentageCompleted > 40 && percentageCompleted <= 60) {\n        return 'Eager Explorer';\n    } else if (percentageCompleted > 60 && percentageCompleted <= 75) {\n        return 'Amusingly Advanced';\n    } else if (percentageCompleted > 75 && percentageCompleted <= 90) {\n        return 'Whimsical Wizard';\n    } else {\n        return 'Expert Extraordinaire';\n    }\n}\n\nexport function StatsCard({ title, url, percentage, frequency, lastUpdated }) {\n    const { classes } = useStyles();\n\n    return (\n        <Paper radius=\"md\" withBorder className={classes.card} mt={`calc(${ICON_SIZE} / 3)`}>\n            <Avatar className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE} src={url} />\n            <Text ta=\"center\" fw={700} className={classes.title}>\n                {title}\n            </Text>\n            <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n                {getExpertiseLevel(percentage)}\n            </Text>\n            <Group position=\"apart\" mt=\"xs\">\n                <Text fz=\"sm\" color=\"dimmed\">\n                    Percentage Completed\n                </Text>\n                <Text fz=\"sm\" color=\"dimmed\">\n                    {percentage}%\n                </Text>\n            </Group>\n            <Progress value={percentage} mt={5} />\n            <Group position=\"apart\" mt=\"md\">\n                <Text fz=\"sm\">{frequency} times a month</Text>\n                <Badge size=\"sm\">{lastUpdated} days ago</Badge>\n            </Group>\n        </Paper>\n    );\n}","import { Grid } from '@mantine/core'\nimport assets from './assets'\nimport { StatsCard } from './StatCard'\n\nconst Profiling = () => {\n\n    const assetList = Object.entries(assets)\n    const stats = assetList.map((list) => {\n        const title = list[0]\n        const url = list[1]\n        function getCustomerStats() {\n            const frequency = Math.floor(Math.random() * 16); // A random frequency per month between 0 and 15\n            const maxLastUpdated = Math.floor((1 - frequency / 15) * 30);\n            const lastUpdated = Math.floor(Math.random() * (maxLastUpdated + 1)); // A random value between 0 and maxLastUpdated, representing the number of days ago\n            const maxCompleted = Math.min(Math.floor((30 - lastUpdated) * (frequency / 30) * 100), 100);\n            const percentageCompleted = Math.floor(Math.random() * (maxCompleted + 1)); // A random percentage between 0 and maxCompleted\n\n            return [frequency, percentageCompleted, lastUpdated];\n        }\n\n        const customerStats = getCustomerStats();\n        console.log(customerStats);\n        return (<>\n            <Grid.Col span={4}>\n                <StatsCard title={title} url={url} percentage={customerStats[1]} frequency={customerStats[0]} lastUpdated={customerStats[2]} />\n            </Grid.Col>\n        </>)\n    })\n    return (\n        <>\n            <Grid gutter=\"xl\">\n                {stats}\n            </Grid>\n        </>\n    )\n}\n\nexport default Profiling","import { Text } from '@mantine/core'\nimport React from 'react'\n\nconst InfoTag = ({ title, subject }) => {\n    return (\n        <>\n            <Text fz={'sm'} c='dimmed'>{title}</Text>\n            <Text>{subject}</Text>\n        </>\n    )\n}\n\nexport default InfoTag","import {\n  Avatar,\n  Card,\n  Center,\n  Container,\n  Divider,\n  Grid,\n  Group,\n  RingProgress,\n  Space,\n  Text,\n} from \"@mantine/core\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport InfoTag from \"./InfoTag\";\nimport { fakerEN_IN as faker } from '@faker-js/faker';\n\nconst PersonalInformation = ({ selectedCustomer }) => {\n  const [profile, setProfile] = useState({\n    ...selectedCustomer.profiling.personal_details,\n  });\n  const { profile_completion } = selectedCustomer;\n  const { source } = selectedCustomer;\n  const memoizedSelectedCustomer = useMemo(() => selectedCustomer, [selectedCustomer.id, selectedCustomer.profiling.personal_details]);\n\n  const randomDetails = useMemo(() => {\n    return {\n      randomLocation: faker.location.city(),\n      randomState: faker.location.state(),\n      randomAddress: faker.location.streetAddress(),\n      randomPincode: faker.location.zipCode(),\n    };\n  }, [memoizedSelectedCustomer]);\n\n\n  const profileCompletion = (percentage) => {\n    return (\n      <div>\n        <Center>\n          <RingProgress\n            mt={50}\n            size={80}\n            thickness={5}\n            sections={[\n              {\n                value: percentage,\n                color:\n                  percentage > 75\n                    ? \"#1D9B25\"\n                    : percentage > 60\n                      ? \"#CFA400\"\n                      : \"#D85972\",\n              },\n            ]}\n            label={\n              <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                {percentage}%\n              </Text>\n            }\n          />\n        </Center>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Container mt={-80}>\n        <Group grow position=\"apart\">\n          <Text mt={70} fw={500}>\n            Basic Details\n          </Text>\n          <Space h={40} />\n          <div>\n            <Space h={40} />\n            {profileCompletion(profile_completion)}\n          </div>\n        </Group>\n        <div style={{ marginTop: \"-30px\" }}>\n          {/* <InfoTag title={'Picture'} subject={<Avatar radius={'xl'} size='xl' />} */}\n          <Grid gutter=\"xl\" pt={\"sm\"}>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"First Name\"}\n                subject={profile.full_name.split(\" \")[0]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Last Name\"}\n                subject={profile.full_name.split(\" \")[1]}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Gender\"} subject={profile.gender} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Date of birth\"} subject={profile.dob} />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Age\"} subject={profile.age} />\n            </Grid.Col>\n          </Grid>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={4}>\n              <InfoTag\n                title={\"Marital Status\"}\n                subject={profile.marital_status}\n              />\n            </Grid.Col>\n            <Grid.Col span={4}>\n              <InfoTag title={\"Source\"} subject={source} />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Contact Details</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag title={\"Email Address\"} subject={profile.email} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Email\"}\n                subject={profile.alternate_email}\n              />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Mobile Number\"} subject={profile.phone_number} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag\n                title={\"Alternative Mobile Number\"}\n                subject={profile.alternate_phone_number}\n              />\n            </Grid.Col>\n          </Grid>\n          <Divider my=\"md\" size={\"xs\"} color={\"#4E70EA\"} />\n          <Text fw={500}>Address</Text>\n          <Grid gutter=\"xl\">\n            <Grid.Col span={6}>\n              <InfoTag title={\"Location(city)\"} subject={randomDetails.randomLocation} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"State\"} subject={randomDetails.randomState} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"PINCODE\"} subject={randomDetails.randomPincode} />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Country\"} subject=\"India\" />\n            </Grid.Col>\n            <Grid.Col span={6}>\n              <InfoTag title={\"Address Line\"} subject={randomDetails.randomAddress} />\n            </Grid.Col>\n          </Grid>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default PersonalInformation;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { sleep } from \"../utils/sleep\";\n\nconst initialState = {\n  KeywordsStatus: \"idle\",\n  customerKeywordsStatus: \"idle\",\n  updateKeywordsStatus:\"idle\",\n  keywords: [],\n  customerKeywords:[]\n};\n\nexport const getKeywords = createAsyncThunk(\"keywords/getKeywords\", async () => {\n  const { data } = await axios.get(\"/keywords\");\n  return data;\n});\n\nexport const getCustomerKeywords = createAsyncThunk(\"keywords/getCustomerKeywords\", async (id) => {\n  const { data } = await axios.get(\"/keywords/customer/\"+id);\n  return data;\n});\n\n\nexport const searchKeywords = createAsyncThunk(\"keywords/searchKeywords\", async (query) => {\n  const { data } = await axios.get(\"/keywords/search/\"+query);\n  return data;\n});\n\nexport const updateKeywords = createAsyncThunk(\n  \"keywords/searchKeywords\",\n  async (keywordPayload) => {\n    const { data } = await axios.post(\"/keywords/update/many\", keywordPayload);\n    return data;\n  }\n);\n\nexport const keywordSlice = createSlice({\n  name: \"keyword\",\n  initialState,\n  reducers: {\n    updateKeywords:(state,action) => {\n      console.log(action.payload);\n      state.customerDetails = action.payload\n    }\n    \n  },\n  extraReducers: {\n    [getKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [getKeywords.fulfilled]: (state, action) => {\n      state.keywordsStatus = \"success\";\n\n      const curr_state_obj = {}\n      const res_obj = {}\n      state.keywords.map(e => curr_state_obj[e.id] = e)\n      action.payload.data.map(e => res_obj[e.id] = e)\n      state.keywords = Object.values(Object.assign(curr_state_obj,res_obj)) ;\n    },\n    [getKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [getCustomerKeywords.pending]: (state, action) => {\n      state.customerKeywordsStatus = \"loading\";\n    },\n    [getCustomerKeywords.fulfilled]: (state, action) => {\n      state.customerKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n    },\n    [getCustomerKeywords.rejected]: (state, action) => {\n      state.customerKeywordsStatus = \"failed\";\n    },\n    [searchKeywords.pending]: (state, action) => {\n      state.keywordsStatus = \"loading\";\n    },\n    [searchKeywords.fulfilled]: (state, action) => {\n      // state.keywordsStatus = \"success\";\n\n    },\n    [searchKeywords.rejected]: (state, action) => {\n      state.keywordsStatus = \"failed\";\n    },\n    [updateKeywords.pending]: (state, action) => {\n      state.updateKeywordsStatus = \"loading\";\n    },\n    [updateKeywords.fulfilled]: (state, action) => {\n      state.updateKeywordsStatus = \"success\";\n      state.customerKeywords = action.payload.data\n\n    },\n    [updateKeywords.rejected]: (state, action) => {\n      state.updateKeywordsStatus = \"failed\";\n    }\n  },\n});\n\nexport default keywordSlice.reducer;\n","import { MultiSelect, Button, Badge } from \"@mantine/core\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport AddKeywordsModal from \"./AddKeywordsModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomerKeywords, getKeywords } from \"../../redux/keywordSlice\";\nimport _ from \"lodash\";\n\n\nfunction hasPermission(userPermissions, permissionName) {\n  return userPermissions.some(\n    (permission) => permission.name === permissionName,\n  );\n}\n\nconst KeywordsEntry = ({ updateKeywordValuesParent, handleSubmitKeywords }) => {\n  const [data, setData] = useState([]);\n\n\n\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { userPermissions, rolesPermissionsStatus } =\n    useSelector((state) => state.rolePermission);\n  const dispatch = useDispatch();\n\n  const { customerKeywords, keywords, keywordsStatus, customerKeywordsStatus } = useSelector((state) => state.keyword);\n\n\n  const [values, setValue] = useState();\n  const [searchValue, onSearchChange] = useState(\"\");\n  const [unknowns, setUnknowns] = useState([])\n  const [isDataChanged, setDataChanged] = useState(false);\n\n\n\n\n  // const keywordFinalPaylaod = []\n\n  // const filteredKeywords = _.filter(values, (keyword) => _.includes(idsToFind, keyword.id));\n  // const existingIds = _.map(filteredKeywords, 'id');\n  // const notFoundIds = _.difference(idsToFind, foundIds);\n\n  const transformedData = useMemo(\n    () =>\n      _.map(customerKeywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [customerKeywords]\n  );\n\n  const allKeywords = useMemo(\n    () =>\n      _.map(keywords, ({ id, value, category }) => ({\n        value: id,\n        label: `${value} [${category}]`,\n      })),\n    [keywords]\n  );\n\n\n\n  const unknownValues = _.map(\n    _.filter(keywords, { category: 'unknown' }),\n    'value'\n  );\n\n\n  useEffect(() => {\n    if (keywordsStatus == 'success' && customerKeywordsStatus == 'success') {\n      setData(allKeywords);\n      setValue(transformedData.map((obj) => obj.value));\n      setUnknowns(unknownValues)\n\n    }\n\n\n  }, [customerKeywords, keywords]);\n\n  useEffect(() => {\n    // setData(allKeywords);\n    // setValue(transformedData.map((obj) => obj.value));\n    updateKeywordValuesParent(values)\n  }, [data, values]);\n\n\n  useEffect(() => {\n    dispatch(getCustomerKeywords(customerDetails.id));\n    dispatch(getKeywords())\n  }, []);\n\n\n\n  useEffect(() => {\n    const hasChanged = !_.isEqual(values, transformedData.map((obj) => obj.value));\n    setDataChanged(hasChanged);\n  }, [values, transformedData]);\n\n  const handleSearchChange = useMemo(\n    () =>\n      _.debounce((value) => {\n        onSearchChange(value);\n\n      }, 200),\n    []\n  );\n\n  return (\n    <>\n      {console.log(userPermissions, hasPermission(userPermissions, \"keywords_edit\"))}\n      {keywordsStatus == 'success' && customerKeywordsStatus == 'success' && userPermissions && Array.isArray(userPermissions) ?\n        <>\n          <MultiSelect\n            data={data}\n            value={values}\n            onChange={(e) => setValue(e)}\n            label=\"Keywords\"\n            searchable\n            searchValue={searchValue}\n            onSearchChange={(event) => handleSearchChange(event)}\n            clearable\n            withinPortal\n            placeholder=\"Add keywords\"\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onCreate={(query) => {\n              const item = { value: query, label: query };\n              setData((current) => [...current, item]);\n              return item;\n            }}\n            readOnly={!hasPermission(userPermissions, \"keywords_edit\")}\n          />\n\n          <div style={{ alignSelf: \"center\", padding: \"10px\" }}>\n            {isDataChanged && hasPermission(userPermissions, \"keywords_edit\") && <Button variant=\"light\"\n              onClick={() => handleSubmitKeywords()}\n            >\n              Update keywords\n            </Button>\n            }\n\n          </div>\n\n\n\n          {/* <div style={{ marginTop: '1rem' }}>\n            Existing Unknown keywords : {unknowns.map((unknown, index) => (\n              <Badge\n                key={unknown}\n                variant=\"gradient\"\n                gradient={{ from: 'indigo', to: 'cyan' }}\n              >\n                {unknown}\n              </Badge>\n            ))}\n          </div> */}\n        </>\n        : <>\n          <p>Please wait.......</p>\n        </>\n      }\n\n    </>\n  );\n};\n\nexport default KeywordsEntry;\n","import { Badge } from '@mantine/core';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getCustomerKeywords } from '../../redux/keywordSlice';\nimport { Text } from '@mantine/core';\n\n\n\n\n\n\nconst Interests = () => {\n  const dispatch = useDispatch()\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { customerKeywords, customerKeywordsStatus } = useSelector((state) => state.keyword);\n  const [interests, setInterests] = useState([])\n\n\n\n  const transformedData = useMemo(() => {\n    const groupedByCategory = _.groupBy(customerKeywords, 'category');\n    return _.map(groupedByCategory, (values, category) => {\n      // Use _.uniq to remove duplicate values\n      const uniqueValues = _.uniq(_.map(values, 'value'));\n      return { category, values: uniqueValues };\n    });\n  }, [customerKeywords]);\n\n  useEffect(() => {\n    status && dispatch(getCustomerKeywords(customerDetails.id));\n  }, []);\n\n  useEffect(() => {\n    if (customerKeywordsStatus == 'success') {\n      setInterests(transformedData);\n    }\n  }, [customerKeywords]);\n\n\n  return (\n    <>\n      {customerKeywordsStatus == 'success' ?\n        <>\n          {interests.map((interest) => (\n            <React.Fragment key={interest.category}>\n              <Text fw={700}>{interest.category}</Text>\n              {interest.values.map((value) => (\n                <Badge\n                  key={value}\n                  variant=\"gradient\"\n                  gradient={{ from: 'indigo', to: 'cyan' }}\n                >\n                  {value}\n                </Badge>\n              ))}\n            </React.Fragment>\n          ))}\n        </> :\n        <>Loading interests...</>\n      }\n\n\n    </>\n\n  )\n}\n\nexport default Interests","import { useState } from 'react';\nimport {\n    createStyles,\n    Table,\n    Checkbox,\n    ScrollArea,\n    TextInput,\n    Button,\n    Box,\n    Text,\n    rem,\n    Group,\n    ActionIcon,\n} from '@mantine/core';\nimport { IconCheck, IconEdit, IconPlus, IconTrash, IconX } from '@tabler/icons-react';\n\nconst useStyles = createStyles((theme) => ({\n    rowSelected: {\n        backgroundColor:\n            theme.colorScheme === 'dark'\n                ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n                : theme.colors[theme.primaryColor][0],\n    },\n}));\n\nexport function EditableTable({ title, initialData, headerData, createEmptyRow, customInputs }) {\n    const { classes, cx } = useStyles();\n    const [selection, setSelection] = useState([]);\n    const [data, setData] = useState(initialData);\n    const [editRow, setEditRow] = useState(null);\n    const [newRow, setNewRow] = useState(null);\n    const [tempEditData, setTempEditData] = useState(null);\n\n    const headerElements = headerData.map((headerItem, index) => (\n        <th key={index}>{headerItem}</th>\n    ));\n\n    const toggleRow = (id) =>\n        setSelection((current) =>\n            current.includes(id) ? current.filter((item) => item !== id) : [...current, id],\n        );\n\n    const toggleAll = () =>\n        setSelection((current) =>\n            current.length === data.length ? [] : data.map((item) => item.id),\n        );\n\n    const handleEditChange = (\n        rowId,\n        key,\n        value,\n    ) => {\n        setTempEditData((prevData) =>\n            prevData && prevData.id === rowId\n                ? { ...prevData, [key]: value }\n                : prevData,\n        );\n    };\n\n    const handleDelete = () => {\n        setData((prevData) => prevData.filter((item) => !selection.includes(item.id)));\n        setSelection([]);\n    };\n\n    const handleNewRowChange = (key, value) => {\n        if (newRow) {\n            setNewRow({ ...newRow, [key]: value });\n        }\n    };\n\n    const handleEditSave = (rowId) => {\n        setData((prevData) =>\n            prevData.map((item) =>\n                item.id === rowId ? { ...item, ...tempEditData } : item,\n            ),\n        );\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleDiscard = (rowId) => {\n        setEditRow(null);\n        setTempEditData(null);\n    };\n\n    const handleSaveNewRow = () => {\n        if (newRow) {\n            setData((prevData) => [\n                ...prevData,\n                {\n                    ...createEmptyRow(),\n                    ...newRow,\n                    id: (data.length + 1).toString(),\n                },\n            ]);\n            setNewRow(null);\n        }\n    };\n\n    const handleEdit = (rowId) => {\n        setTempEditData(data.find((item) => item.id === rowId) || null);\n        setEditRow((prevState) => (prevState === rowId ? null : rowId));\n    };\n\n    const handleAdd = () => {\n        if (newRow) {\n            setNewRow(null);\n        } else {\n            setNewRow(createEmptyRow());\n        }\n    };\n\n    const newRowElement = newRow ? (\n        <tr>\n            {Object.keys(newRow)\n                .filter((key) => key !== 'id')\n                .map((key) => (\n                    <td key={key}>\n                        {customInputs && customInputs[key] ? (\n                            customInputs[key](\n                                newRow && newRow[key] || '',\n                                (value) => handleNewRowChange(key, value),\n                            )\n                        ) : (\n                            <TextInput\n                                value={newRow && newRow[key] || ''}\n                                onChange={(event) =>\n                                    handleNewRowChange(key, event.currentTarget.value)}\n                            />\n                        )}\n                    </td>\n                ))}\n            <td>\n                <Button onClick={handleSaveNewRow} bg={'#4E70EA'}>Save</Button>\n            </td>\n        </tr>\n    ) : null;\n\n    const rows = data.map((item) => {\n        const selected = selection.includes(item.id);\n        return (\n            <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n                <td>\n                    <Checkbox\n                        checked={selection.includes(item.id)}\n                        onChange={() => toggleRow(item.id)}\n                        transitionDuration={0}\n                    />\n                </td>\n                {Object.keys(item)\n                    .filter(item => item != 'id')\n                    .map((key) =>\n                        editRow === item.id && customInputs && customInputs[key ] ? (\n                            <td key={key}>\n                                {customInputs[key ](\n                                    tempEditData && tempEditData[key ] || '',\n                                    (value) => handleEditChange(item.id, key , value),\n                                )}\n                            </td>\n                        ) : editRow === item.id ? (\n                            <td key={key}>\n                                <TextInput\n                                    value={tempEditData && tempEditData[key ] || ''}\n                                    onChange={(event) =>\n                                        handleEditChange(item.id, key , event.currentTarget.value)}\n                                />\n                            </td>\n                        ) : (\n                            <td key={key}>{item[key ]}</td>\n                        ),\n                    )}\n                <td>\n                    {editRow === item.id ? (\n                        <>\n                            <ActionIcon onClick={() => handleEditSave(item.id)} color='green' variant='subtle' size={'sm'}>\n                                <IconCheck />\n                            </ActionIcon>\n                            <ActionIcon onClick={() => handleDiscard(item.id)} color='red' variant='subtle' size={'sm'}>\n                                <IconX />\n                            </ActionIcon>\n                        </>\n                    ) : (\n                        <ActionIcon onClick={() => handleEdit(item.id)} color='#4E70EA' variant='subtle' size={'sm'}>\n                            <IconEdit color='#4E70EA' />\n                        </ActionIcon>\n                    )}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <>\n            <Group position='apart'>\n                <Box mb={5}>\n                    <Text fw={700}>{title || ''}</Text>\n                </Box>\n                <Box mb={5}>\n                    <Group>\n                        <Group onClick={handleDelete} style={{ cursor: 'pointer' }} >\n                            <ActionIcon color='red' variant='subtle' size={'sm'}>\n                                <IconTrash />\n                            </ActionIcon>\n                            <Text ml={-18} color='red' size={'sm'}>Delete</Text>\n                        </Group>\n                        <Group onClick={handleAdd} style={{ cursor: 'pointer' }}>\n                            <ActionIcon color='blue' variant='subtle' size={'sm'}>\n                                <IconPlus color='#4E70EA' />\n                            </ActionIcon>\n                            <Text ml={-18} color='#4E70EA' size={'sm'}>Add More</Text>\n                        </Group>\n                    </Group>\n                </Box>\n            </Group>\n            <ScrollArea style={{ maxHeight: \"100%\",fontSize:\"10px\" }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Checkbox\n                                    checked={selection.length === data.length && data.length > 0}\n                                    onChange={toggleAll}\n                                    transitionDuration={0}\n                                />\n                            </th>\n                            {headerElements}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                        {newRowElement}\n                    </tbody>\n                </Table>\n            </ScrollArea>\n        </>\n    )\n};","import { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Occupation'\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        type: 'Property Dealer',\n        industry: 'Business',\n        to: '2005',\n        from: '2009',\n        incomeBracket: '₹7,00,000 - ₹15,00,000',\n    },\n    {\n        id: '2',\n        type: 'Stock Exchange',\n        industry: 'Finance',\n        to: '2008',\n        from: 'Present',\n        incomeBracket: '₹15,00,000 - ₹30,00,000',\n    },\n];\n\nconst headerData = ['Type', 'Industry', 'To', 'From', 'Income Bracket'];\n\nconst createEmptyRow = () => ({\n    id: '',\n    type: '',\n    industry: '',\n    to: '',\n    from: '',\n    incomeBracket: '',\n});\n\nexport function Occupation() {\n    return <EditableTable title={title} initialData={initialData} headerData={headerData} createEmptyRow={createEmptyRow} />;\n}","import React from 'react';\nimport { EditableTable } from '../EditableTable/EditableTable';\n\nconst title = 'Family Details';\n\n\n\nconst initialData = [\n    {\n        id: '1',\n        name: 'Sushma Sharma',\n        gender: 'Female',\n        relationship: 'Spouse',\n        phone: '+91 834273824',\n        email: 'sushmasharma123@email.com',\n    },\n    {\n        id: '2',\n        name: 'Anand Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '+91 873624782',\n        email: 'anandsharma123@email.com',\n    },\n    {\n        id: '3',\n        name: 'Sarthak Sharma',\n        gender: 'Male',\n        relationship: 'Son',\n        phone: '-',\n        email: '-',\n    },\n];\n\nconst headerData = ['Name', 'Gender', 'Relationship', 'Phone No.', 'Email Address', '', ''];\n\nconst createEmptyRow = () => ({\n    id: '',\n    name: '',\n    gender: '',\n    relationship: '',\n    phone: '',\n    email: '',\n\n});\n\n\nexport function FamilyDetails() {\n    return (\n        <EditableTable\n            title={title}\n            initialData={initialData}\n            headerData={headerData}\n            createEmptyRow={createEmptyRow}\n            rowData={createEmptyRow()}\n        />\n    );\n}","import { EditableTable } from '../EditableTable/EditableTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCustomerServicesHistory } from '../../redux/customerSlice';\nimport { Loader } from '@mantine/core';\n\nconst title = 'Activity';\n\nexport function Activity() {\n  const { customerDetails, customerServiceHistory } = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCustomerServicesHistory(customerDetails.id));\n  }, [customerDetails]);\n\n  const headerData = [\n    'Ticket ID',\n    'Order ID',\n    'Source of Booking',\n    'Ticket Type',\n    'Ticket Date',\n    'Action',\n    'TAT',\n    'Name',\n    'SubType',\n  ];\n\n  const createEmptyRow = () => ({\n    ticket_id: '',\n    order_id: '',\n    source_of_booking: '',\n    ticket_type: '',\n    ticket_date: '',\n    action: '',\n    tat: '',\n    name: '',\n    subType: '',\n  });\n\n  const initialData = customerServiceHistory.map((historyItem) => ({\n    ticket_id: historyItem.ticket_id,\n    order_id: historyItem.order_id,\n    source_of_booking: historyItem.source_of_booking,\n    ticket_type: historyItem.ticket_type,\n    ticket_date: historyItem.ticket_date,\n    action: historyItem.action,\n    tat: historyItem.tat,\n    name: historyItem.service.name,\n    subType: historyItem.service.subType,\n  }));\n\n  return (\n    <>\n      {Array.isArray(initialData) && initialData.length > 0 ? (\n        <EditableTable\n          title={title}\n          initialData={initialData}\n          headerData={headerData}\n          createEmptyRow={createEmptyRow}\n        />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n","//@ts-nocheck\nimport { Text, Textarea } from '@mantine/core'\nimport React from 'react'\n\nconst Remarks = () => {\n    return (\n        <>\n            <Textarea\n                label={<Text fw={700}>Remarks</Text>}\n                radius=\"md\"\n                variant='filled'\n            />\n        </>\n    )\n}\n\nexport default Remarks","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport { useDisclosure } from \"@mantine/hooks\";\nimport { Modal, Group, Button } from \"@mantine/core\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport { getCustomerRemarks } from \"../../redux/customerSlice\"; // replace 'path_to_your' with the actual path\n\nconst RemarkListings = () => {\n  const dispatch = useDispatch();\n  const customerRemarks = useSelector(\n    (state) => state.customer.customerRemarks,\n  );\n  const remarksStatus = useSelector((state) => state.customer.remarksStatus);\n  const currentCustomerId = useSelector(\n    (state) => state.customer.customerDetails.id,\n  ); // Assuming 'id' is the field in customerDetails for the customer's ID\n\n  const [opened, { open, close }] = useDisclosure(false);\n  const [selectedRemark, setSelectedRemark] = useState(null);\n\n  useEffect(() => {\n    if (currentCustomerId) {\n      dispatch(getCustomerRemarks(currentCustomerId));\n    }\n  }, [dispatch, currentCustomerId]);\n\n  // Define columns for StyledTable\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"agentName\",\n        header: \"Agent Name\",\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Date\",\n      },\n      {\n        accessorKey: \"time\",\n        header: \"Time\",\n      },\n      {\n        accessorKey: \"remark\",\n        header: \"Remark\",\n      },\n    ],\n    [],\n  );\n\n  const handleRowClick = (remark) => {\n    setSelectedRemark(remark);\n    open();\n  };\n\n  return (\n    <>\n      <Box>\n        {remarksStatus === \"success\" ? (\n          <StyledTable\n            columns={columns}\n            data={customerRemarks}\n            onRowClick={handleRowClick}\n          />\n        ) : remarksStatus === \"loading\" ? (\n          <p>Loading...</p>\n        ) : (\n          <p>Failed to load remarks.</p>\n        )}\n      </Box>\n\n      <Modal opened={opened} onClose={close} title=\"Remark Details\" centered>\n        {selectedRemark && (\n          <div>\n            <p>\n              <strong>Agent Name:</strong> {selectedRemark.agentName}\n            </p>\n            <p>\n              <strong>Date:</strong> {selectedRemark.date}\n            </p>\n            <p>\n              <strong>Time:</strong> {selectedRemark.time}\n            </p>\n            <p>\n              <strong>Remark:</strong> {selectedRemark.remark}\n            </p>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default RemarkListings;\n","import { useState, useEffect } from \"react\";\nimport {\n  useMantineTheme,\n  Card,\n  LoadingOverlay,\n  Box,\n  Grid,\n} from \"@mantine/core\";\nimport { useLocation } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\n// import KeywordsEntry from '../KeywordsEntry/KeywordsEntry';\n// import Interests from '../Interests/Interests';\nimport DashboardNavbar from \"./DashboardNavbar\";\nimport Profiling from \"../../components/Profiling/Profiling\";\nimport PersonalInformation from \"../../components/PersonalInformation/PersonalInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport KeywordsEntry from \"../../components/KeywordsEntry/KeywordsEntry\";\nimport { Notification } from \"@mantine/core\";\nimport { sleep } from \"../../utils/sleep\";\nimport { updateKeywords } from \"../../redux/keywordSlice\";\nimport Interests from \"../../components/Interests/Interests\";\nimport { Occupation } from \"../../components/Occupation/Occupation\";\nimport { FamilyDetails } from \"../../components/FamilyDetails/FamilyDetails\";\nimport { Activity } from \"../../components/Activity/Activity\";\nimport Remarks from \"../../components/AgentPages/Remarks\";\nimport RemarkListings from \"../../components/Remarks/RemarkListings\";\n\nconst Dashboard = () => {\n  const { status, customerDetails } = useSelector((state) => state.customer);\n  const { updateKeywordsStatus } = useSelector((state) => state.keyword);\n  const [submitKeywords, setSubmitKeywords] = useState(false);\n  const [routesClicked, setRoutesClicked] = useState(\"\");\n  const [keywordValues, setKeywordValues] = useState([]);\n  const [showNotification, setNotification] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n\n  const [selectedCustomer, setSelectedCustomer] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let customer;\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     setTimeout(() => {\n  //         if (location?.state?.customer) {\n  //             customer = location.state.customer\n  //             setSelectedCustomer(customer)\n  //             setIsLoading(false)\n  //         }\n  //     }, 2000)\n  // }, [])\n  const theme = useMantineTheme();\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    setRoutesClicked((prev) => [...prev, location.pathname]);\n  }, [location]);\n\n  function updateKeywordValuesParent(keywords) {\n    setKeywordValues(keywords);\n  }\n\n  const handleSubmitKeywords = () => {\n\n    const payload = {\n      customerId: customerDetails.id,\n      keywordsPayload: keywordValues,\n    };\n    setNotification(true);\n    sleep(5000).then((data) => setNotification(false));\n    dispatch(updateKeywords(payload));\n\n\n  }\n\n  // useEffect(() => {\n  //   if (\n  //     routesClicked.at(-2) &&\n  //     routesClicked.at(-2) === \"/dashboard/keywords\"\n  //   ) {\n  //     const updateKeywordPayload = {\n  //       customerId: customerDetails.id,\n  //       keywordsPayload: keywordValues,\n  //     };\n\n  //     setNotification(true);\n  //     sleep(5000).then((data) => setNotification(false));\n\n  //     dispatch(updateKeywords(updateKeywordPayload));\n  //   }\n  // }, [routesClicked, dispatch]);\n\n  if (status == \"loading\") {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <Box>\n        <Grid>\n          <Grid.Col span={3}>\n            <Box>\n              <DashboardNavbar />\n            </Box>\n          </Grid.Col>\n\n          <Grid.Col span={9}>\n            <Card shadow={\"lg\"} radius={\"md\"}>\n              <Routes>\n                <Route>\n                  <Route\n                    index\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route\n                    path=\"/personalInformation\"\n                    element={\n                      <PersonalInformation selectedCustomer={customerDetails} />\n                    }\n                  />\n                  <Route path=\"/profiling\" element={<Profiling />} />\n                  <Route\n                    path=\"/keywords\"\n                    element={\n                      <KeywordsEntry\n                        submitKeywords={submitKeywords}\n                        updateKeywordValuesParent={updateKeywordValuesParent}\n                        handleSubmitKeywords={handleSubmitKeywords}\n                      />\n                    }\n                  />\n\n                  <Route path=\"/interests\" element={<Interests />} />\n                  <Route path=\"/remarks\" element={<RemarkListings />} />\n                  <Route path=\"/occupation\" element={<Occupation />} />\n                  <Route path=\"/familydetails\" element={<FamilyDetails />} />\n                  <Route path=\"/activity\" element={<Activity />} />\n                </Route>\n              </Routes>\n            </Card>\n            {showNotification && (\n              <Notification\n                loading\n                title=\"Syncing keywords\"\n                withCloseButton={true}\n                style={{ backgroundColor: \"red !important\" }}\n              >\n                <p style={{ color: \"red\" }}>\n                  Uploading latest keywords data onto server\n                </p>\n              </Notification>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default Dashboard;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nconst initialState = {\n  status: \"idle\",\n  isLoggedIn: false,\n  user: {},\n  profile: {},\n  userStatus: \"idle\",\n  users: [],\n};\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signin\", userData);\n    return data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (userData) => {\n    const { data } = await axios.post(\"/auth/signup\", userData);\n    return data;\n  }\n);\n\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\n  const { data } = await axios.get(\"/api/profile/\" + id);\n  return data;\n});\n\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\n  const { data } = await axios.get(\"/users/all\");\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"auth/addUser\", async (userData) => {\n  try {\n    const { data } = await axios.post(\"/users/create\", userData);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\n\n\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuth: (state, action) => {\n      state.isLoggedIn = action.payload.isLoggedIn;\n    },\n    logout: (state, action) => {\n      localStorage.clear();\n      state.isLoggedIn = false;\n      axios.defaults.headers.common[\"authorization\"] = null;\n      window.location.reload()\n    },\n    setAuth: (state, action) => {\n      const storage = JSON.parse(localStorage.getItem(\"login\"));\n      if (Object.keys(storage).length > 0) {\n        const { email, _id } = storage\n        state.user.email = email;\n        state.user._id = _id;\n        state.status = \"success\";\n        state.isLoggedIn = true;\n      } else {\n        state.isLoggedIn = false;\n      }\n    },\n  },\n  extraReducers: {\n    [loginUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [registerUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const { access_token } = action.payload;\n      const { email, sub } = parseJwt(access_token);\n      const _id = sub\n      const token = access_token\n\n\n      localStorage.setItem(\n        \"login\",\n        JSON.stringify({ token, email, _id, isLoggedIn: true })\n      );\n      state.user.email = email;\n      state.user._id = _id;\n      state.status = \"success\";\n      state.isLoggedIn = true;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.isLoggedIn = false;\n    },\n\n    [getProfile.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.profile = action.payload.profile;\n    },\n    [getProfile.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n    [getUsers.pending]: (state, action) => {\n      state.userStatus = \"loading\";\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.userStatus = \"success\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.userStatus = \"failed\";\n    },\n    [addUser.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.users = [...state.users, action.payload];\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n\n  },\n});\n\nexport default authSlice.reducer;\nexport const { setAuth, logout } = authSlice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  rolesPermissionsStatus: \"idle\",\n  rolesPermissions: [],\n  updateRolesStatus: \"idle\",\n  createRolesStatus: \"idle\",\n  createPermissionStatus: \"idle\",\n  getAllRolesStatus: \"idle\",\n  getAllPermissionsStatus: \"idle\",\n  permissionsByRoleStatus: \"idle\",\n  createRolesPermissionMappingStatus: \"idle\",\n  getAllRolesPermissionsMappingsByUserStatus: \"idle\",\n  deactivateMappingStatus: \"idle\",\n  roles: [],\n  permissions: [],\n  userRoles: [],\n  userPermissions: [],\n  permissionsByRole: []\n};\n\nexport const getAllRolesPermissionsMappings = createAsyncThunk(\n  \"rolesPermissions/getAllRolesPermissionsMappings\",\n  async () => {\n    const { data } = await axios.get(\"/user-role-permission-mappings\");\n    return data;\n  }\n);\n\nexport const updateRolesIntoPermission = createAsyncThunk(\n  \"rolesPermissions/updateRolesIntoPermission\",\n  async ({ permissionId, roleIds }) => {\n    const { data } = await axios.patch(`/permissions/update_roles/${permissionId}`, {\n      roleIds: roleIds,\n    });\n    return data;\n  }\n);\n\nexport const createRoles = createAsyncThunk(\n  \"rolesPermissions/createRoles\",\n  async ({ name }) => {\n    const { data } = await axios.post(\"/roles\", {\n      name: name,\n    });\n    return data;\n  }\n);\n\nexport const createPermission = createAsyncThunk(\n  \"rolesPermissions/createPermission\",\n  async (payload) => {\n    const { data } = await axios.post(\"/permissions\", payload);\n    return data;\n  }\n);\n\nexport const createRolesPermissionMapping = createAsyncThunk(\n  \"rolesPermissions/createPermissionRolesMapping\",\n  async (payload) => {\n    const { data } = await axios.post(\"/user-role-permission-mappings\", payload);\n    return data;\n  }\n);\n\nexport const getAllRoles = createAsyncThunk(\"rolesPermissions/getAllRoles\", async () => {\n  const { data } = await axios.get(\"/roles\");\n  return data;\n});\n\nexport const getAllPermissions = createAsyncThunk(\n  \"rolesPermissions/getAllPermissions\",\n  async () => {\n    const { data } = await axios.get(\"/permissions\");\n    return data;\n  }\n);\n\n\nexport const getAllPermissionsByRole = createAsyncThunk(\n  \"permissions/byRoleId\",\n  async (roleid) => {\n    const { data } = await axios.get(\"/permissions/roles/\" + roleid)\n    return data\n  }\n)\n\nexport const getAllRolesPermissionsMappingsByUser = createAsyncThunk(\n  \"rolesPermissions/byUserId\",\n  async (userId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/users/\" + userId)\n    return data\n  }\n)\n\nexport const deactivateMapping = createAsyncThunk(\n  \"rolesPermissions/deactivate\",\n  async (mappingId) => {\n    const { data } = await axios.get(\"/user-role-permission-mappings/deactivate/\" + mappingId)\n    return data\n  }\n)\n\nexport const rolesPermissionSlice = createSlice({\n  name: \"rolesPermission\",\n  initialState,\n  reducers: {\n    getUserRolesPermissionsByMapping: (state, action) => {\n      state.userRoles = []\n      state.userPermissions = []\n      state.rolesPermissions.map(e => {\n        if (e.userId === action.payload) {\n          if (e.role) state.userRoles.push(e.role)\n          if (e.permission) state.userPermissions.push(e.permission)\n        }\n      })\n    },\n    clearUserPermissions: (state) => {\n      state.userPermissions = [];\n      state.userRole = []\n      state.rolesPermissions = []\n    },\n  },\n  extraReducers: {\n    [getAllRolesPermissionsMappings.pending]: (state, action) => {\n      state.rolesPermissionsStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappings.fulfilled]: (state, action) => {\n      state.rolesPermissionsStatus = \"success\";\n      state.rolesPermissions = action.payload;\n    },\n    [getAllRolesPermissionsMappings.rejected]: (state, action) => {\n      state.rolesPermissionsStatus = \"failed\";\n    },\n    [updateRolesIntoPermission.pending]: (state, action) => {\n      state.updateRolesStatus = \"loading\";\n    },\n    [updateRolesIntoPermission.fulfilled]: (state, action) => {\n      state.updateRolesStatus = \"success\";\n    },\n    [updateRolesIntoPermission.rejected]: (state, action) => {\n      state.updateRolesStatus = \"failed\";\n    },\n    [createRoles.pending]: (state, action) => {\n      state.createRolesStatus = \"loading\";\n    },\n    [createRoles.fulfilled]: (state, action) => {\n      state.createRolesStatus = \"success\";\n    },\n    [createRoles.rejected]: (state, action) => {\n      state.createRolesStatus = \"failed\";\n    },\n    [createPermission.pending]: (state, action) => {\n      state.createPermissionStatus = \"loading\";\n    },\n    [createPermission.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\";\n      state.permissions = [...state.permissions, action.payload]\n    },\n    [createPermission.rejected]: (state, action) => {\n      state.createPermissionStatus = \"failed\";\n    },\n    [getAllRoles.pending]: (state, action) => {\n      state.getAllRolesStatus = \"loading\";\n    },\n    [getAllRoles.fulfilled]: (state, action) => {\n      state.getAllRolesStatus = \"success\";\n      state.roles = action.payload;\n    },\n    [getAllRoles.rejected]: (state, action) => {\n      state.getAllRolesStatus = \"failed\";\n    },\n    [getAllPermissions.pending]: (state, action) => {\n      state.getAllPermissionsStatus = \"loading\";\n    },\n    [getAllPermissions.fulfilled]: (state, action) => {\n      state.getAllPermissionsStatus = \"success\";\n      state.permissions = action.payload;\n    },\n    [getAllPermissions.rejected]: (state, action) => {\n      state.getAllPermissionsStatus = \"failed\";\n    },\n    [getAllPermissionsByRole.pending]: (state, action) => {\n      state.permissionsByRoleStatus = \"loading\";\n    },\n    [getAllPermissionsByRole.fulfilled]: (state, action) => {\n      state.permissionsByRoleStatus = \"success\";\n      state.permissionsByRole = action.payload;\n    },\n    [getAllPermissionsByRole.rejected]: (state, action) => {\n      state.permissionsByRoleStatus = \"failed\";\n    },\n    [createRolesPermissionMapping.pending]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"loading\";\n    },\n    [createRolesPermissionMapping.fulfilled]: (state, action) => {\n      state.createPermissionStatus = \"success\"\n      state.rolesPermissions = [...state.rolesPermissions, action.payload]\n\n    },\n    [createRolesPermissionMapping.rejected]: (state, action) => {\n      state.createRolesPermissionMappingStatus = \"failed\";\n    },\n    [getAllRolesPermissionsMappingsByUser.pending]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"loading\";\n    },\n    [getAllRolesPermissionsMappingsByUser.fulfilled]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"success\"\n      console.log(action.payload);\n      action.payload.map(e => {\n        if (e.role) state.userRoles.push(e.role)\n        if (e.permission) state.userPermissions.push(e.permission)\n      })\n\n    },\n    [getAllRolesPermissionsMappingsByUser.rejected]: (state, action) => {\n      state.getAllRolesPermissionsMappingsByUserStatus = \"failed\";\n    },\n\n    [deactivateMapping.pending]: (state, action) => {\n      state.deactivateMappingStatus = \"loading\";\n    },\n    [deactivateMapping.fulfilled]: (state, action) => {\n      state.deactivateMappingStatus = \"success\";\n    },\n    [deactivateMapping.rejected]: (state, action) => {\n      state.deactivateMappingStatus = \"failed\";\n    },\n\n  },\n});\n\nexport const { getUserRolesPermissionsByMapping, clearUserPermissions } = rolesPermissionSlice.actions;\n\n\nexport default rolesPermissionSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRowData = createAsyncThunk(\n    'campaignManagement/fetchRowData',\n    async (_, { getState }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n        const responses = [];\n        let commonCustomerIDs = null; // To keep track of common customer IDs across rows\n\n        for (const rowKey of Object.keys(state.rows)) {\n            const row = state.rows[rowKey];\n            if (!row.first || !row.second || !row.third) {\n                throw new Error(\"Row has empty/default values. Fetching aborted.\");\n            }\n\n            const body = {\n                information_type: row.first.toLowerCase().split(' ').join('_'),\n                category: row.second.toLowerCase().split(' ').join('_'),\n                value: row.third.toLowerCase().split(' ').join('_')\n            };\n\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            const data = await response.json();\n            const customerIDsForThisRow = data.map(customer => customer.id);\n\n            if (commonCustomerIDs === null) {\n                commonCustomerIDs = new Set(customerIDsForThisRow);\n            } else {\n                commonCustomerIDs = new Set([...commonCustomerIDs].filter(id => customerIDsForThisRow.includes(id)));\n            }\n\n            responses.push({\n                rowKey,\n                figures: commonCustomerIDs.size,\n                customerIDs: [...commonCustomerIDs]\n            });\n        }\n        return responses;\n    }\n);\n\nexport const fetchFiguresForRow = createAsyncThunk(\n    'campaignManagement/fetchFiguresForRow',\n    async (rowId, { getState }) => {\n        const state = getState().campaignManagement;\n        const row = state.rows[rowId];\n        if (!row || !row.first || !row.second || !row.third) {\n            throw new Error(\"Row data is missing or incomplete. Fetching aborted.\");\n        }\n\n        const endpoint = `${process.env.REACT_APP_API_URL}/customers/search_customers_by_attr`;\n\n        const body = {\n            information_type: row.first.toLowerCase().split(' ').join('_'),\n            category: row.second.toLowerCase().split(' ').join('_'),\n            value: row.third.toLowerCase().split(' ').join('_')\n        };\n\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        });\n\n        const data = await response.json();\n        const customerIDsForThisRow = data.map(customer => customer.id);\n\n        // Retrieve customer IDs from all preceding rows\n        let commonCustomerIDs = customerIDsForThisRow;\n        for (const otherRowId of Object.keys(state.rows)) {\n            if (Number(otherRowId) < Number(rowId)) {\n                const otherRow = state.rows[otherRowId];\n                commonCustomerIDs = commonCustomerIDs.filter(id => otherRow.customerIDs.includes(id));\n            }\n        }\n\n        return { rowId, figures: commonCustomerIDs.length, customerIDs: commonCustomerIDs };\n    }\n);\n\nexport const createCampaign = createAsyncThunk(\n    'campaignManagement/createCampaign',\n    async (_, { getState, rejectWithValue }) => {\n        const state = getState().campaignManagement;\n        const endpoint = `${process.env.REACT_APP_API_URL}/campaign`;\n\n        const body = {\n            name: state.eventName,\n            eventBased: true,\n            triggerTime: state.tabData.Email.timelineState.recurrence.recurrenceTime,\n            type: \"EMAIL\",\n            recurrenceType: state.tabData.Email.timelineState.recurrence.type.toUpperCase(),\n            start: state.tabData.Email.timelineState.startDate,\n            end: state.tabData.Email.timelineState.endDate,\n            templateText: state.tabData.Email.content,\n            customerIDs: state.allCustomerIDs\n        };\n\n        console.log('Publish body', body)\n\n        try {\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            console.log('response', response)\n\n            if (!response.ok) {\n                throw new Error('Failed to create campaign');\n            }\n\n            return response.json();\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst initialState = {\n    isModalOpen: false,\n    dropdownData: {\n        \"Personal Information\": {\n            \"Age\": [\"25-30\", \"31-35\"],\n            \"Gender\": [\"Male\", \"Female\"],\n            \"Marital Status\": [\"Single\", \"Married\"],\n            \"Location\": [\"Delhi\", \"Mumbai\"],\n        },\n        \"Interests\": {},\n        \"Occupation\": '',\n        \"Activity\": '',\n        \"Family Details\": '',\n        \"Financial Information\": '',\n        \"Insurance Details\": '',\n        \"Vehicle\": '',\n        \"Health\": '',\n    },\n    rows: {\n        [Date.now().toString()]: {\n            first: \"\",\n            second: \"\",\n            third: \"\",\n            figures: null,\n            customerIDs: []\n        }\n    },\n    allCustomerIDs: [],\n    selectedCombinations: [],\n    eventName: \"\",\n    eventDate: null,\n    step: 1,\n    activeTab: 'Email',\n    startDate: null,\n    endDate: null,\n    tabData: {\n        Email: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 500\n        },\n        SMS: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 160\n        },\n        Notification: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 250\n        },\n        Whatsapp: {\n            content: '',\n            timelineState: {},\n            fileName: null,\n            file: null,\n            characterCount: 0,\n            charLimit: 2000\n        }\n    },\n    radarData: [\n        { count: 120, subject: 'EZ-Auto' },\n        { count: 98, subject: 'Cyberior' },\n        { count: 86, subject: 'Homecare' },\n        { count: 99, subject: 'E-Portal 2.0' },\n        { count: 85, subject: 'EZ-Travel' },\n    ],\n    downloadDataStatus: null,\n    error: null,\n    rowIdsArray: [],\n    loadingStates: {},\n    errors: {},\n};\n\nconst campaignManagementSlice = createSlice({\n    name: \"campaignManagement\",\n    initialState,\n    reducers: {\n        toggleModal: (state, action) => {\n            state.isModalOpen = action.payload;\n        },\n        updateDropdownData: (state, action) => {\n            state.dropdownData = action.payload;\n        },\n        updateRows: (state, action) => {\n            state.rows = action.payload;\n            state.rowIdsArray = [];\n            state.allCustomerIDs = [...new Set(Object.values(state.rows).filter(row => row.customerIDs && row.customerIDs.length).flatMap(row => row.customerIDs))];\n        },\n        updateSelectedCombinations: (state, action) => {\n            state.selectedCombinations = action.payload;\n        },\n        setCampaignName: (state, action) => {\n            state.campaignName = action.payload;\n        },\n        setEventName: (state, action) => {\n            state.eventName = action.payload;\n        },\n        setEventDate: (state, action) => {\n            state.eventDate = action.payload;\n        },\n        setStep: (state, action) => {\n            state.step = action.payload;\n        },\n        setStartDate: (state, action) => {\n            state.startDate = action.payload;\n        },\n        setEndDate: (state, action) => {\n            state.endDate = action.payload;\n            state.eventDate = action.payload;\n        },\n        setActiveTab: (state, action) => {\n            state.activeTab = action.payload;\n        },\n        updateTabData: (state, action) => {\n            state.tabData = action.payload;\n        },\n        setRadarData: (state, action) => {\n            state.radarData = action.payload;\n        },\n        resetModal: (state) => {\n            state.step = initialState.step;\n            state.campaignName = initialState.campaignName;\n            state.eventName = initialState.eventName;\n            state.activeTab = initialState.activeTab;\n            state.tabData = initialState.tabData;\n            state.eventDate = initialState.eventDate\n        },\n    },\n    extraReducers: {\n        [fetchRowData.pending]: (state) => {\n            state.downloadDataStatus = 'loading';\n        },\n        [fetchRowData.fulfilled]: (state, action) => {\n            state.downloadDataStatus = 'success';\n\n            action.payload.forEach(item => {\n                state.rows[item.rowKey].figures = item.figures;\n                state.rows[item.rowKey].customerIDs = item.customerIDs;\n            });\n\n            state.rowIdsArray = [...new Set([...state.rowIdsArray, ...action.payload.map(item => item.rowKey)])];\n\n            const lastRowId = Math.max(...state.rowIdsArray.map(Number));\n            state.allCustomerIDs = [...state.rows[lastRowId].customerIDs];\n        },\n        [fetchRowData.rejected]: (state, action) => {\n            state.downloadDataStatus = 'failed';\n            state.error = action.error.message;\n        },\n        [fetchFiguresForRow.pending]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'loading';\n            state.errors[rowId] = null;\n        },\n        [fetchFiguresForRow.fulfilled]: (state, action) => {\n            const { rowId, figures, customerIDs } = action.payload;\n            state.rows[rowId].figures = figures;\n            state.rows[rowId].customerIDs = customerIDs;\n            state.loadingStates[rowId] = 'loaded';\n\n            const lastRowId = Math.max(...Object.keys(state.rows).map(Number));\n            if (Number(rowId) === lastRowId) {\n                state.allCustomerIDs = [...customerIDs];\n            }\n        },\n        [fetchFiguresForRow.rejected]: (state, action) => {\n            const rowId = action.meta.arg;\n            state.loadingStates[rowId] = 'error';\n            state.errors[rowId] = action.error.message;\n        }\n    }\n});\n\nexport const {\n    toggleModal,\n    updateDropdownData,\n    updateRows,\n    updateSelectedCombinations,\n    setCampaignName,\n    setEventName,\n    setEventDate,\n    setStep,\n    setStartDate,\n    setEndDate,\n    setActiveTab,\n    updateTabData,\n    setRadarData,\n    resetModal,\n} = campaignManagementSlice.actions;\n\nexport const selectRadarData = (state) => state.campaignManagement.radarData;\n\nexport default campaignManagementSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchData = createAsyncThunk(\"campaign/fetchData\", async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/campaign/reports/all`,\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  const data = await response.json();\n  return data;\n});\n\nexport const fetchSources = createAsyncThunk(\n  \"campaign/fetchSources\",\n  async () => {\n    const response = {\n      sources: [],\n    };\n    return response.sources;\n  },\n);\n\nexport const fetchCampaignNames = createAsyncThunk(\n  \"campaign/fetchCampaignNames\",\n  async () => {\n    const response = {\n      campaignNames: [],\n    };\n    return response.campaignNames;\n  },\n);\n\nconst initialState = {\n  data: [],\n  sources: [\"Homecare\", \"Cyberior\", \"EZ-Auto\", \"EZ-Travel\", \"E-Portal 2.0\"],\n  campaignNames: [\"Campaign 1\", \"Campaign 2\", \"Campaign 3\"],\n  selectedCampaign: \"All\",\n  status: \"idle\",\n  error: null,\n};\n\nconst campaignSlice = createSlice({\n  name: \"campaign\",\n  initialState,\n  reducers: {\n    selectCampaign: (state, action) => {\n      state.selectedCampaign = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload.map((item) => ({\n          name: item.campaignName,\n          delivered: item.totalSent,\n          interested: item.success,\n          failure: item.failed,\n          converted: 0,\n        }));\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      })\n      .addCase(fetchSources.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.sources = action.payload;\n        }\n      })\n      .addCase(fetchCampaignNames.fulfilled, (state, action) => {\n        if (action.payload && action.payload.length > 0) {\n          state.campaignNames = action.payload;\n        }\n      });\n  },\n});\n\nexport const { selectCampaign } = campaignSlice.actions;\n\nexport default campaignSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/profile-type-customer-mapping/groupByAll`;\n\nexport const fetchProfileData = createAsyncThunk(\n  \"profileDataCard/fetchProfileData\",\n  async (requestBody, { getState }) => {\n    console.log(\"Entered from dispatch\", requestBody);\n    const { profileTypeDemoStats } = getState().profileDataCard;\n    console.log(\"profileTypeDemoStats\", profileTypeDemoStats);\n\n    if (\n      requestBody.profileType &&\n      requestBody.demographic &&\n      profileTypeDemoStats[requestBody.profileType] &&\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic]\n    ) {\n      return {};\n    }\n\n    const response = await axios.post(API_URL, requestBody);\n    console.log(\"Response \", response);\n\n    if (requestBody.profileType && requestBody.demographic) {\n      const demographicData = response.data[requestBody.demographic];\n      return {\n        profileType: requestBody.profileType,\n        demographic: requestBody.demographic,\n        data: demographicData,\n        requestBody,\n      };\n    }\n\n    const transformedData = response.data.profiles.map((profile) => {\n      const displayName =\n        initialState.displayAndColorMappings[profile.profileType].displayName ||\n        profile.profileType;\n      return {\n        name: `${displayName}`,\n        value: profile.count,\n        color:\n          initialState.displayAndColorMappings[profile.profileType].color ||\n          \"#DE896599\",\n        src: `${displayName}`,\n      };\n    });\n\n    const totalCount = transformedData.reduce(\n      (sum, item) => sum + item.value,\n      0,\n    );\n\n    return {\n      transformedData,\n      totalCount,\n      requestBody,\n    };\n  },\n);\n\nconst initialState = {\n  hoveredItem: null,\n  data: [],\n  totalCount: 0,\n  status: \"idle\",\n  error: null,\n  profileTypeDemoStats: {},\n  requestBody: null,\n  displayAndColorMappings: {\n    food: { displayName: \"Foodie\", color: \"#DE896599\" },\n    sports: { displayName: \"Sports Fan\", color: \"#ff990099\" },\n    travel: { displayName: \"Avid Traveller\", color: \"#2745D999\" },\n    music: { displayName: \"Musicophile\", color: \"#E54B4B99\" },\n    fitness: { displayName: \"Fitness Freak\", color: \"#80008099\" },\n    automobile: { displayName: \"Auto Lover\", color: \"#00ff0099\" },\n    gadget: { displayName: \"Gadgets Freaks\", color: \"#56C3A699\" },\n    technology: { displayName: \"Techie\", color: \"#66003399\" },\n  },\n};\n\nconst profileDataCardSlice = createSlice({\n  name: \"profileDataCard\",\n  initialState,\n  reducers: {\n    setHoveredItem: (state, action) => {\n      state.hoveredItem = action.payload;\n    },\n    clearHoveredItem: (state) => {\n      state.hoveredItem = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // console.log(\"profileDataCard:\\n\", action.payload);\n\n        if (action.payload.transformedData) {\n          state.data = action.payload.transformedData;\n          state.totalCount = action.payload.totalCount;\n        }\n\n        if (action.payload.profileType && action.payload.demographic) {\n          if (!state.profileTypeDemoStats[action.payload.profileType]) {\n            state.profileTypeDemoStats[action.payload.profileType] = {};\n          }\n          state.profileTypeDemoStats[action.payload.profileType][\n            action.payload.demographic\n          ] = action.payload.data;\n        }\n\n        state.requestBody = action.payload.requestBody;\n      })\n      .addCase(fetchProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setHoveredItem, clearHoveredItem } =\n  profileDataCardSlice.actions;\n\nexport const selectHoveredItem = (state) => state.profileDataCard.hoveredItem;\nexport const selectProfileData = (state) => state.profileDataCard.data;\nexport const selectRequestBody = (state) => state.profileDataCard.requestBody;\nexport const selectProfileTypeDemoStats = (state) =>\n  state.profileDataCard.profileTypeDemoStats;\n\nexport default profileDataCardSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchCustomerProfileData = createAsyncThunk(\n  \"customerProfileTool/fetchCustomerProfileData\",\n  async (source) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`);\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      customers: item.count,\n      profiles: 0,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst customerProfileToolSlice = createSlice({\n  name: \"customerProfileTool\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCustomerProfileData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCustomerProfileData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchCustomerProfileData.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default customerProfileToolSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_ENDPOINT = `${process.env.REACT_APP_API_URL}/customers/count/monthly`;\n\n// Async action for fetching customer profile data\nexport const fetchProfileCount = createAsyncThunk(\n  \"profileCount/fetchProfileCount\",\n  async (source) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/customers/count/monthly/${source}`,\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch customer data\");\n    }\n\n    const data = await response.json();\n\n    console.log(\"month api\", data);\n\n    return data.map((item) => ({\n      name: item.month,\n      // customers: item.count,\n      // profiles: 0,\n      // Temporary change\n      customers: 0,\n      profiles: item.count,\n    }));\n  },\n);\n\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst profileCountSlice = createSlice({\n  name: \"profileCount\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProfileCount.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProfileCount.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.data = action.payload;\n      })\n      .addCase(fetchProfileCount.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default profileCountSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport customerSlice from \"./customerSlice\";\nimport keywordSlice from \"./keywordSlice\";\nimport rolesPermissionSlice from \"./rolesPermissionSlice\";\nimport campaignManagementReducer from \"./campaignManagementSlice\";\nimport campaignReducer from \"./campaignSlice\";\nimport profileDataCardSlice from \"./profileDataCardSlice\";\nimport customerProfileSlice from \"./customerProfileSlice\";\nimport profileAnalysisSlice from \"./profileAnalysisSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    customer: customerSlice,\n    keyword: keywordSlice,\n    rolePermission: rolesPermissionSlice,\n    campaignManagement: campaignManagementReducer,\n    campaign: campaignReducer,\n    profileDataCard: profileDataCardSlice,\n    customerProfileTool: customerProfileSlice,\n    profileCount: profileAnalysisSlice,\n  },\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\n\nexport default function PrivateRoute({ path, ...props }) {\n  // console.log(path,props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  if (isLoggedIn) {\n    return <Route path={path} {...props} />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/login.fb9a0a6a.png\";","export default __webpack_public_path__ + \"static/media/eaLogo.f8ac5978.png\";","import ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n\nconst Recaptcha = ({ setCaptchaStatus }) => {\n  const handleCaptchaChange = (value) => {\n    console.log(\"Captcha value:\", value);\n    if (value) setCaptchaStatus(true);\n  };\n\n  return (\n    <div>\n      <ReCAPTCHA sitekey={TEST_SITE_KEY} onChange={handleCaptchaChange} />\n    </div>\n  );\n};\n\nexport default Recaptcha;\n","import { useMantineTheme, TextInput, PasswordInput } from \"@mantine/core\";\n\nconst StyledPasswordInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    visibilityToggle: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <PasswordInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledPasswordInput;\n","import { useMantineTheme, TextInput } from \"@mantine/core\";\n\nconst StyledTextInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TextInput styles={{ ...defaultStyles, ...props.styles }} {...props} />\n  );\n};\n\nexport default StyledTextInput;\n","import { useMantineTheme, Button } from \"@mantine/core\";\n\nconst StyledButton = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      width: \"100%\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Button styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledButton;\n","import {\n  Title,\n  Text,\n  Group,\n  Center,\n  Box,\n  Flex,\n  Stack,\n  BackgroundImage,\n  Card,\n  Image,\n  Grid,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport loginImage from \"./assets/login.png\";\nimport eaLogo from \"./assets/eaLogo.png\";\nimport { loginUser, getUsers } from \"../../redux/authSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllRolesPermissionsMappingsByUser } from \"../../redux/rolesPermissionSlice\";\nimport Recaptcha from \"./Recaptcha\";\nimport StyledPasswordInput from \"../../StyledComponents/StyledPasswordInput\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { status, isLoggedIn, user } = useSelector((state) => state.auth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n  };\n\n  // useEffect(() => {\n  //     if(status === \"success\" && isLoggedIn){\n  //         dispatch(getAllRolesPermissionsMappings())\n  //     }\n  // },[status,isLoggedIn])\n\n  useEffect(() => {\n    if (status === \"success\" && isLoggedIn) {\n      dispatch(getAllRolesPermissionsMappingsByUser(user._id));\n      dispatch(getUsers());\n      navigate(\"/\");\n    }\n  }, [status, navigate]);\n\n  return (\n    <>\n      <Box\n        h={\"100vh\"}\n        sx={{\n          backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n        }}\n      >\n        <Grid pt={\"8%\"} grow>\n          <Grid.Col span={6}>\n            <Center>\n              <Box>\n                <BackgroundImage\n                  style={{ width: \"500px\", height: \"550px\" }}\n                  src={loginImage}\n                  radius={\"md\"}\n                >\n                  <Stack p={\"5%\"} h={\"100%\"} justify={\"end\"}>\n                    <Text c={\"white\"}>\n                      <Flex justify={\"end\"}>\n                        <Title\n                          variant={\"gradient\"}\n                          gradient={{ from: \"#0d5ff9\", to: \"#F3F6FF\", deg: 45 }}\n                        >\n                          Customer Profiling\n                        </Title>\n                      </Flex>\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. */}\n                      {/* Morbi auctor sagittis nunc nec sollicitudin. Duis ultrices */}\n                      {/* tristique ligula ac suscipit. */}\n                    </Text>\n                    {/* <StyledButton w={\"30%\"}> */}\n                    {/*   Read More */}\n                    {/*   <IconArrowRight /> */}\n                    {/* </StyledButton> */}\n                  </Stack>\n                </BackgroundImage>\n              </Box>\n            </Center>\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Box>\n              <Center>\n                <Stack w={\"80%\"} justify={\"center\"} align={\"stretch\"}>\n                  <Box>\n                    <Center>\n                      <Image\n                        width={150}\n                        height={128}\n                        src={eaLogo}\n                        bg={\"#F2F2F2\"}\n                      />\n                    </Center>\n                  </Box>\n                  <Card shadow={\"lg\"} radius={\"md\"}>\n                    <Stack>\n                      <StyledTextInput\n                        label=\"Email\"\n                        placeholder=\"you@ea.in\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <StyledPasswordInput\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <Group position=\"apart\">\n                        {/* <Anchor>\n                                                onClick={(event) => event.preventDefault()}\n                                                href=\"#\"\n                                                size=\"sm\"\n\n                                                Forgot password?\n                                            </Anchor> */}\n                        <Text size={\"sm\"} c={\"#0d5ff9\"}>\n                          Forgot Password\n                        </Text>\n                      </Group>\n                      <Recaptcha setCaptchaStatus={setCaptchaStatus} />\n\n                      <StyledButton\n                        type=\"submit\"\n                        disabled={!captchaStatus}\n                        onClick={handleSubmit}\n                      >\n                        {status === \"loading\" ? <>Signing in</> : <>Sign in</>}\n                      </StyledButton>\n\n                      {status === \"failed\" && (\n                        <Text style={{ color: \"red\" }}>\n                          Invalid credentials !\n                        </Text>\n                      )}\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Center>\n            </Box>\n          </Grid.Col>\n        </Grid>\n      </Box>\n    </>\n    // <div style={{ backgroundColor: '#f1f3f5', minHeight: '1000px', marginTop: '-40px' }}>\n    // </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","import AvidTraveler from './Avid Traveler.png';\nimport FitnessFreak from './Fitness Freak.png';\nimport Foodie from './Foodie.png';\nimport SportsFan from './Sports Fan.png';\nimport Techie from './Techie.png';\nimport AddProfile from './AddProfile.png';\n\nexport default {\n    'Avid Traveler': AvidTraveler,\n    'Fitness Freak': FitnessFreak,\n    'Foodie': Foodie,\n    'Sports Fan': SportsFan,\n    'Techie': Techie,\n    'AddProfile': AddProfile,\n}","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport assets from './assets';\nimport './BouncingAvatar.css'\nimport { Center, Stack, Text } from '@mantine/core';\n\ninterface BouncingAvatarProps {\n    shouldBounce: boolean;\n    onClick: () => void;\n}\n\nconst BouncingAvatar: React.FC<BouncingAvatarProps> = ({ shouldBounce, onClick }) => {\n    const [animation, setAnimation] = useState('');\n\n    useEffect(() => {\n        if (shouldBounce) {\n            setAnimation('bounce 1s ease 3');\n        } else {\n            setAnimation('');\n        }\n    }, [shouldBounce]);\n\n    return (\n        <>\n            <Stack>\n                <Center>\n                    <div\n                        style={{\n                            cursor: 'pointer',\n                            animation,\n                            width: '100px',\n                            height: '100px',\n                            borderRadius: '50%',\n                            backgroundImage: `url(${assets.AddProfile})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                        onClick={onClick}\n                    />\n                </Center>\n                <Center>\n                    <Text fw={700} size={'sm'} mt={-10}>Add Profile Details</Text>\n                </Center>\n            </Stack>\n        </>\n    );\n};\n\nexport default BouncingAvatar;","export default {\n    \"625888\": \"64898d22d5fb0269864e8a28\",\n    \"1234561236\": \"6489b89ca22035a008b7186e\",\n    \"9493486611\": \"6489b89da22035a008b71872\",\n    \"63252\": \"6489b8a0a22035a008b71877\",\n    \"9632389602\": \"6489b8a0a22035a008b7187b\",\n    \"6232522\": \"6489b8a2a22035a008b71881\",\n    \"5222200\": \"6489b8a3a22035a008b71884\",\n    \"8801214640\": \"6489b8a6a22035a008b7188c\",\n    \"9831015310\": \"6489b8b3a22035a008b718a1\",\n    \"9818403793\": \"6489b8b4a22035a008b718a4\",\n    \"8141405397\": \"6489b8b4a22035a008b718a7\",\n    \"212114\": \"6489b8b5a22035a008b718aa\",\n    \"9844521636\": \"6489b8b6a22035a008b718af\",\n    \"7978341669\": \"6489b8b8a22035a008b718b4\",\n    \"6378564387\": \"6489b8b8a22035a008b718b7\",\n    \"1212121313\": \"6489b8b9a22035a008b718bb\",\n    \"9748248996\": \"6489b8bba22035a008b718bf\",\n    \"1234561238\": \"6489b8bba22035a008b718c2\",\n    \"12022224\": \"6489b8bca22035a008b718c5\",\n};","//@ts-nocheck\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    TextInput,\n    ActionIcon,\n    useMantineTheme,\n    Center,\n    Stack,\n} from '@mantine/core';\nimport { IconUser, IconX } from '@tabler/icons-react';\nimport BouncingAvatar from './BouncingAvatar';\nimport axios from 'axios';\nimport mobileIdMap from './mobileIdMap'\n\ninterface SimulateCallProps { }\n\nconst SimulateCall: React.FC<SimulateCallProps> = () => {\n    const theme = useMantineTheme();\n    const [showIcon, setShowIcon] = useState(false);\n    const [showIframe, setShowIframe] = useState(false);\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    const [mobileNumber, setMobileNumber] = useState('');\n    const [isValidMobileNumber, setIsValidMobileNumber] = useState(false);\n    const [mobileNumberError, setMobileNumberError] = useState('');\n    const [iframeSrc, setIframeSrc] = useState('');\n\n    useEffect(() => {\n        const handleMessage = (event: MessageEvent) => {\n            if (event.data === 'closeIframe') {\n                setShowIframe(false);\n            }\n        };\n\n        window.addEventListener('message', handleMessage);\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n    const handleSimulateCall = async () => {\n        if (isValidMobileNumber) {\n            const customerId = mobileIdMap[mobileNumber];\n            if (customerId) {\n                try {\n                    const responseProfile = await axios.get(`${process.env.REACT_APP_API_URL}/customers/${customerId}`);\n                    const responseCategories = await axios.get(`${process.env.REACT_APP_API_URL}/profile_mapping/${customerId}`);\n                    const responseCompletion = await axios.get(`${process.env.REACT_APP_API_URL}/profile/${customerId}`);\n                    console.log('profile response', responseProfile)\n                    const details = {\n                        name: responseProfile.data.customer_details.personal_details.full_name || '-',\n                        email: responseProfile.data.customer_details.email || '-',\n                        mobileNo: responseProfile.data.customer_details.mobile || '-',\n                        source: responseProfile.data.customer_details.source || '-',\n                        city: responseProfile.data.customer_details.personal_details.location || '-',\n                        customerId: customerId\n                    }\n\n                    console.log('details', details)\n                    console.log('response Categories data', responseCategories)\n\n                    if (responseProfile.data && responseCategories.data && responseCompletion.data) {\n                        setIframeSrc(\n                            `/agent?${new URLSearchParams({\n                                ...details,\n                                profileCompletion: responseCompletion.data.completionPercentage.toString(),\n                                categories: JSON.stringify(responseCategories.data.categories),\n                                profilingTypes: 'Foodie',\n                            })}`\n                        );\n                    } else {\n                        throw new Error(\"Failed to get updated profile details\");\n                    }\n\n                    setShowIcon(true);\n                } catch (error) {\n                    console.error('Failed to fetch updated profile details:', error);\n                }\n            }\n        } else {\n            setShowIcon(false);\n        }\n    };\n\n    const handleEndCall = () => {\n        setShowIcon(false);\n    };\n\n    const validateMobileNumber = (value: string) => {\n        const isValid = /^([6-9]{1}\\d{9})$/.test(value);\n        setIsValidMobileNumber(true);\n        setMobileNumberError(isValid ? '' : 'Please enter a valid mobile number');\n    };\n\n    const handleMobileNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setMobileNumber(value);\n        validateMobileNumber(value);\n    };\n\n    const toggleIframe = () => {\n        setShowIframe((prevState) => !prevState);\n    };\n\n    return (\n        <div>\n            <Center>\n                <Stack>\n                    <TextInput\n                        label=\"Mobile Number\"\n                        value={mobileNumber}\n                        onChange={handleMobileNumberChange}\n                        required\n                        error={mobileNumberError}\n                    />\n                    <Button onClick={handleSimulateCall} disabled={!isValidMobileNumber}>\n                        Simulate Call\n                    </Button>\n                    <Button onClick={handleEndCall}>End Call</Button>\n                </Stack>\n            </Center>\n            {showIcon && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        bottom: theme.spacing.xs,\n                        right: theme.spacing.xs,\n                        zIndex: 1000,\n                    }}\n                >\n                    <BouncingAvatar shouldBounce={showIcon} onClick={toggleIframe} />\n                </div>\n            )}\n\n            {showIframe && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        zIndex: 999,\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '1rem',\n                            right: '1rem',\n                            zIndex: 1001,\n                        }}\n                    >\n                        <ActionIcon onClick={toggleIframe} size=\"xl\" c=\"white\">\n                            <IconX size={24} />\n                        </ActionIcon>\n                    </div>\n                    <iframe\n                        ref={iframeRef}\n                        src={iframeSrc}\n                        title=\"Sample iFrame\"\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            width: '60%',\n                            height: '75%',\n                            transform: 'translate(-50%, -50%)',\n                            border: 'none',\n                            borderRadius: theme.radius.md,\n                        }}\n                        allowFullScreen\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SimulateCall;","//@ts-nocheck\nimport { Box, Text, TextInput, Col, Grid } from '@mantine/core'\nimport React from 'react'\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n}\n\ninterface ProfileCardProps {\n    details: ProfileDetails;\n    onDetailChange?: (key: keyof ProfileDetails, value: string) => void;\n    editable?: boolean;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ details, onDetailChange, editable }) => {\n    return (\n        <Box>\n            {Object.entries(details).filter(([key, value]) => key != 'customerId').map(([key, value]) => (\n                <Grid key={key} gutter=\"5\" justify=\"start\" align=\"center\">\n                    <Col span={3}>\n                        <Text fw={550} size={12}>{key.replace(/^\\w/, c => c.toUpperCase())}</Text>\n                    </Col>\n                    <Col span={1}>\n                        <Text>:</Text>\n                    </Col>\n                    <Col span={8}>\n                        {editable && key !== 'mobileNo' ? (\n                            <TextInput\n                                size='12'\n                                sx={{\n                                    input: {\n                                        backgroundColor: '#F1F5F9',\n                                        border: 0\n                                    },\n                                }}\n                                fz={'sm'}\n                                c={'dimmed'}\n                                value={value}\n                                onChange={(event) => onDetailChange && onDetailChange(key as keyof ProfileDetails, event.currentTarget.value)}\n                            />\n                        ) : (\n                            <Text fz={'sm'} c='dimmed'>{value}</Text>\n                        )}\n                    </Col>\n                </Grid>\n            ))}\n        </Box>\n    );\n};\n\nexport default ProfileCard;","//@ts-nocheck\nimport { Center, RingProgress, Stack, Text } from '@mantine/core'\nimport React from 'react'\n\nconst PercentageCompleted = ({ percentage }: { percentage: number }) => {\n    return (\n        <div>\n            <Stack>\n                <Text fw={550} size={15}>Profile Completion</Text>\n                <Center mb={20}>\n                    <RingProgress\n                        size={70}\n                        thickness={5}\n                        sections={[{ value: percentage, color: (percentage > 75 ? '#1D9B25' : percentage > 60 ? '#CFA400' : '#D85972') }]}\n                        label={\n                            <Text color=\"\" weight={20} align=\"center\" size=\"xs\">\n                                {percentage}%\n                            </Text>\n                        }\n                    />\n                </Center>\n            </Stack>\n        </div>\n    )\n}\n\nexport default PercentageCompleted","//@ts-nocheck\nimport React from 'react';\nimport { Group, Text, Avatar, Center } from '@mantine/core';\nimport assets from './assets';\n\ntype AssetKeys = keyof typeof assets;\n\ninterface ProfilingInterestsProps {\n    profilingInterests: AssetKeys[];\n}\n\nconst ProfilingInterests: React.FC<ProfilingInterestsProps> = ({ profilingInterests }) => {\n    const ICON_SIZE = 80;\n\n    return (\n        <Group position=\"center\">\n            {profilingInterests.map((interest) => {\n                if (interest) {\n                    const url = assets[interest];\n\n                    return (\n                        <div key={interest}>\n                            <Avatar\n                                size={ICON_SIZE}\n                                radius={ICON_SIZE}\n                                src={url}\n                            />\n                            <Center>\n                                <Text fw={550} size={15}>{interest}</Text>\n                            </Center>\n                        </div>\n                    );\n                }\n            })}\n        </Group>\n    );\n};\n\nexport default ProfilingInterests;","//@ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { ActionIcon, Badge, Flex, MultiSelect, MultiSelectValueProps, rem, Text, TextInput } from '@mantine/core';\n// import keywordOptions from '../KeywordsEntry/keywordOptions'\nimport { IconX } from '@tabler/icons-react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport default function KeywordsEntry({ setKeywordsAdded, customerId }: { setKeywordsAdded: (keywordsSelect: string[]) => void, customerId: string }) {\n    // const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>(keywordOptions)\n    const [keywordList, setKeywordList] = useState<{ label: string, value: string }[]>([])\n    const [keywordsSelected, setKeywordsSelected] = useState([]) // initialize it as an empty array\n    const inputRef = useRef(null); // create a ref to the input element\n\n    const handleChange = (change: any) => {\n        setKeywordsSelected(change)\n    }\n\n    const value = ({ label, onRemove, ...others }: MultiSelectValueProps) => {\n        const removeButton = (\n            <ActionIcon onMouseDown={onRemove} size=\"xs\" color=\"blue\" radius=\"xl\" variant=\"transparent\">\n                <IconX size={rem(10)} />\n            </ActionIcon>\n        );\n        return <div {...others}>\n            <Badge key={label} size=\"sm\" variant=\"outline\" rightSection={removeButton}>\n                {label}\n            </Badge>\n        </div>\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/keywords`)\n            .then(async response => {\n                const customerKeywordsData = await axios.get(`${process.env.REACT_APP_API_URL}/keywords/customer/${customerId}`)\n                console.log('customer Keywords Data', customerKeywordsData)\n                const keywordsDifference = _.differenceWith(response.data.data, customerKeywordsData.data.data, _.isEqual);\n                const newData = keywordsDifference.map(({ id, category, value }) => {\n                    return {\n                        value: id,\n                        label: `${value} [${category}]`,\n                    }\n                })\n                setKeywordList(newData)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Automatically focus the input field every time keywordsSelected changes\n        inputRef.current?.focus();\n        setKeywordsAdded(keywordsSelected)\n    }, [keywordsSelected]);\n\n    const MultiSelectComponent = () => (\n        <MultiSelect\n            hoverOnSearchChange\n            variant='filled'\n            radius={'md'}\n            label={<Text fw={700}>{`Keywords (${keywordsSelected.length})`}</Text>}\n            value={keywordsSelected}\n            data={keywordList}\n            searchable\n            creatable\n            getCreateLabel={(query) => `+ Create ${query}`}\n            onChange={handleChange}\n            placeholder={\"Enter customer's keywords\"}\n            clearable\n            filter={(value, selected, item) => {\n                // if (!selected && item.label?.toLowerCase().startsWith(value.toLowerCase().trim())) {\n                //     return true\n                // }\n                // else return false\n                return !selected\n            }\n            }\n            onCreate={(query) => {\n                const item = { value: query, label: query };\n                setKeywordList((current: any) => [...current, item]);\n                return item;\n            }}\n            styles={{\n                input: { minHeight: '7rem' },\n            }}\n            valueComponent={value}\n            transitionProps={{ duration: 150, transition: 'pop-top-left', timingFunction: 'ease' }}\n            ref={inputRef} // pass the ref to the MultiSelect component\n        />\n    )\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around' }}>\n                <MultiSelectComponent />\n            </div>\n        </>\n    );\n}","//@ts-nocheck\nimport { Flex, Group, ScrollArea, Stack, Text, Loader } from '@mantine/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Questionnaire.css';\n\ninterface SelectedAnswers {\n    [questionId: number]: number[];\n}\n\ninterface Answer {\n    id: number;\n    text: string;\n}\n\ninterface SelectedQuestions {\n    id: number;\n    question: string;\n    answers: Answer[];\n    type: 'single' | 'multiple';\n    level: number;\n    category: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface QuestionnaireProps {\n    categories: Categories,\n    setQuestionsHistory: (questions: SelectedQuestions[]) => void\n}\n\nconst Questionnaire: React.FC<QuestionnaireProps> = ({ categories, setQuestionsHistory }) => {\n    const [selectedAnswers, setSelectedAnswers] = useState<SelectedAnswers>({});\n    const [selectedQuestions, setSelectedQuestions] = useState<SelectedQuestions[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleAnswerChange = (questionId: number, answerId: number, isMultiple: boolean) => {\n        setSelectedAnswers(prevState => {\n            if (isMultiple) {\n                if (!prevState[questionId]) {\n                    return { ...prevState, [questionId]: [answerId] };\n                } else if (prevState[questionId].includes(answerId)) {\n                    return { ...prevState, [questionId]: prevState[questionId].filter(id => id !== answerId) };\n                } else {\n                    return { ...prevState, [questionId]: [...prevState[questionId], answerId] };\n                }\n            } else {\n                return { ...prevState, [questionId]: [answerId] };\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchQuestions = async () => {\n            const categoriesKeys = Object.keys(categories);\n            const randomCategories = [];\n            for (let i = 0; i < 3; i++) {\n                const randomIndex = Math.floor(Math.random() * categoriesKeys.length);\n                const randomCategoryKey = categoriesKeys[randomIndex];\n                const randomCategoryItems = categories[randomCategoryKey];\n                randomCategories.push(randomCategoryItems);\n                categoriesKeys.splice(randomIndex, 1);\n            }\n\n            const fetchedQuestions: SelectedQuestions[] = [];\n            for (let categoryItems of randomCategories) {\n                const bodyInputParts = [];\n                for (let item of categoryItems) {\n                    bodyInputParts.push(`key: ${item.key}, level: ${item.level}`);\n                }\n\n                const body = { \"input\": bodyInputParts.join(\", \") };\n                const response = await axios.post(`${process.env.REACT_APP_API_URL}/process`, body, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                const result = response.data.result;\n                let questionText\n                let questionLevel\n                let questionAnswers\n                try {\n                    questionText = result.split(': ')[2].split(', level')[0];\n                    questionLevel = parseInt(result.split(', level: ')[1].split(', Answers')[0]);\n                    questionAnswers = result.split('Answers: ')[1].split(', ');\n                }\n                catch {\n                    console.error('Failed to get a question ')\n                    questionText = \"Test Question\"\n                    questionLevel = 2\n                    questionAnswers = [\"Test Answer 1\", \"Test Answer 2\", \"Test Answer 3\", \"None\"]\n                }\n                questionAnswers.push('None')\n\n                fetchedQuestions.push({\n                    id: fetchedQuestions.length + 1,\n                    question: questionText,\n                    answers: questionAnswers.map((text, idx) => ({ id: idx + 1, text })),\n                    type: 'multiple',\n                    level: questionLevel,\n                    category: categoryItems[0].key, // assuming the first key is the main category\n                });\n            }\n\n            setSelectedQuestions(fetchedQuestions);\n            setQuestionsHistory(fetchedQuestions);\n            setIsLoading(false);\n        };\n\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        const updatedQuestions = selectedQuestions.map(question => ({\n            ...question,\n            selectedAnswers: selectedAnswers[question.id] || []\n        }));\n\n        setQuestionsHistory(updatedQuestions);\n    }, [selectedAnswers])\n\n    if (isLoading) {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Loader color='red' variant='bars' />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Stack spacing={'xs'} >\n                <ScrollArea.Autosize mah={220} maw={400} mx=\"auto\">\n                    {selectedQuestions.map((question, index) => (\n                        <div key={question.id}>\n                            <Text pt={15} fz={'sm'} c='dimmed'>{`Q${index + 1}: ${question.question}`}</Text>\n                            <Group spacing={1}>\n                                {question.answers.map(answer => (\n                                    <label key={answer.id}>\n                                        <Group spacing={4}>\n                                            <input\n                                                type={'checkbox'}\n                                                checked={selectedAnswers[question.id]?.includes(answer.id) || false}\n                                                onChange={() => handleAnswerChange(question.id, answer.id, question.type === 'multiple')}\n                                            />\n                                            <Text fz={'sm'} mr={5} c='dimmed'>{answer.text}</Text>\n                                        </Group>\n                                    </label>\n                                ))}\n                            </Group>\n                        </div>\n                    ))}\n                </ScrollArea.Autosize>\n            </Stack>\n        </div>\n    );\n};\n\nexport default Questionnaire;","//@ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { ActionIcon, Button, Flex, Paper, Modal, Text, Box, Group, Center, Divider } from '@mantine/core';\nimport { IconMaximize, IconX } from '@tabler/icons-react';\nimport { useQueryParams } from '../common/useQueryParams';\nimport ProfileCard from './ProfileCard';\nimport PercentageCompleted from './PercentageCompleted';\nimport ProfilingInterests from './ProfilingInterests';\nimport KeywordsEntry from './KeywordsEntry';\nimport Remarks from './Remarks';\nimport Questionnaire from './Questionnaire';\nimport { notifications } from '@mantine/notifications';\nimport { IconCheck } from '@tabler/icons-react';\nimport axios, { AxiosError } from 'axios';\n\ninterface ProfileDetails {\n    name: string;\n    email: string;\n    mobileNo: string;\n    source: string;\n    city: string;\n    customerId: string;\n}\n\ninterface Category {\n    key: string;\n    level: number;\n}\n\ninterface Categories {\n    sports: Category[];\n    food: Category[];\n    travel: Category[];\n    music: Category[];\n    fitness: Category[];\n    automobile: Category[];\n    gadget: Category[];\n    technology: Category[];\n}\n\ninterface AgentProfile {\n    details: ProfileDetails;\n    categories: Categories;\n    profileCompletion: number;\n    profilingTypes: string[];\n}\n\nconst initialProfileDetails: ProfileDetails = {\n    name: '',\n    email: '',\n    mobileNo: '',\n    source: '',\n    city: '',\n    customerId: '',\n};\n\nconst AgentEntry = () => {\n    const { name, email, source, city, mobileNo, customerId, categories, profileCompletion, profilingTypes = \"\" } = useQueryParams();\n    const [currentProfile, setCurrentProfile] = useState<ProfileDetails>({ name, email, mobileNo, source, city, customerId });\n    const [percentageCompleted, setPercentageCompleted] = useState<number>(parseInt(profileCompletion, 10));\n    const [profilingInterests, setProfilingInterests] = useState<string[]>(profilingTypes.split(','));\n    // const [categoryObject, setCategoryObject] = useState<Categories>(JSON.parse(categories));\n    const [categoryObject, setCategoryObject] = useState<Categories>(categories ? JSON.parse(categories) : {/* default value */ });\n    const [profileList, setProfileList] = useState<AgentProfile[]>([{ details: currentProfile, categories: categoryObject, profileCompletion: percentageCompleted, profilingTypes: profilingInterests }]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isFullScreen, setFullScreen] = useState(false);\n    const [questionHistory, setQuestionHistory] = useState<SelectedQuestions[]>([]);\n    const [keywordsAdded, setKeywordsAdded] = useState<string[]>([]);\n\n    useEffect(() => {\n        const profile = profileList.find(profile => profile.details.mobileNo === mobileNo);\n        if (profile) {\n            setCurrentProfile(profile.details);\n            setPercentageCompleted(profile.profileCompletion)\n            setProfilingInterests(profile.profilingTypes)\n        } else {\n            setCurrentProfile({ ...initialProfileDetails, mobileNo });\n            setPercentageCompleted(0)\n        }\n    }, [mobileNo, profileList]);\n\n    useEffect(() => {\n        console.log('questionHistory', questionHistory);\n        console.log('categories in AgentEntry', categories)\n    }, [questionHistory]);\n\n    const handleProfileChange = (key: keyof ProfileDetails, value: string) => {\n        setCurrentProfile((prevProfile) => ({ ...prevProfile, [key]: value }));\n    };\n\n    const errorNotification = (error: AxiosError) => notifications.show({\n        id: 'submit-error',\n        withCloseButton: true,\n        onClose: () => console.log('unmounted'),\n        onOpen: () => console.log('mounted'),\n        autoClose: 5000,\n        title: error.message,\n        message: 'There seems to be a problem with the network',\n        color: 'red',\n        icon: <IconX />,\n        className: 'my-notification-class',\n        loading: false,\n    });\n\n    const successNotification = () => {\n        notifications.show({\n            id: 'submit-success',\n            withCloseButton: true,\n            onClose: () => console.log('unmounted'),\n            onOpen: () => console.log('mounted'),\n            autoClose: 5000,\n            title: 'Success',\n            message: 'Profile has been submitted successfully',\n            color: 'teal',\n            icon: <IconCheck />,\n            className: 'my-notification-class',\n            loading: false,\n        });\n    };\n\n    //Submit the keywords and questionHistory\n    const handleProfileSubmit = async () => {\n        // try {\n        //     if (keywordsAdded.length > 0) {\n\n        //         // Making keywords API friendly and submitting one at a time\n        //         const keywordsPayloadBody = {\n        //             customerId,\n        //             keywordsPayload: keywordsAdded\n        //         }\n        //         const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}keywords/update/many`, {\n        //             method: \"POST\",\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\",\n        //             },\n        //             body: JSON.stringify(keywordsPayloadBody),\n        //         });\n        //         if (!response.ok) {\n        //             console.error(\"Error updating keyword:\", response.statusText);\n        //             return;\n        //         }\n        //         console.log(\"Keywords updated successfully!\");\n        //     }\n        // }\n        // catch (e) {\n        //     console.log('Failed to submit keywords!')\n        // }\n        // finally {\n        try {\n            const url = `${process.env.REACT_APP_API_URL}/question/process`\n            const body = {\n                customerId,\n                keywords: keywordsAdded,\n                history: questionHistory\n            }\n            console.log('body =>', body)\n            console.dir(body)\n            // setting timeout for atlas\n            await axios.post(url, body)\n                .then(console.log)\n                .then(successNotification)\n                .then(() => setProfileList(prevProfileList => [...prevProfileList, { details: currentProfile, categories: categoryObject, profileCompletion: 0, profilingTypes: [] }]))\n                .then(() => setTimeout(() => {\n                    window.parent.postMessage('closeIframe', '*');\n                }, 2000))\n                .catch(errorNotification)\n                .catch(console.log)\n        }\n        catch {\n            errorNotification(new AxiosError('Failed to submit questionHistory!'))\n        }\n        // }\n    };\n\n    const handleClose = (submit: boolean) => {\n        handleProfileSubmit();\n    };\n\n    const handleIconXClick = () => {\n        handleProfileSubmit();\n    };\n\n    const toggleFullscreen = () => {\n        if (!isFullScreen) {\n            document.documentElement.requestFullscreen();\n            setFullScreen(true);\n        } else {\n            document.exitFullscreen();\n            setFullScreen(false);\n        }\n    };\n\n    const profileExists = profileList.some(profile => profile.details.mobileNo === mobileNo);\n\n    return (\n        <Paper p={10} >\n            <Box >\n                <Group position='apart'>\n                    <Box></Box>\n                    <Center>\n                        <Text fw={550}>Customer</Text>\n                    </Center>\n                    <Flex justify=\"flex-end\" direction=\"column\" style={{ marginBottom: '10px' }}>\n                        <ActionIcon onClick={handleProfileSubmit}>\n                            <IconX size={15} />\n                        </ActionIcon>\n                        <ActionIcon onClick={toggleFullscreen}>\n                            <IconMaximize size={15} />\n                        </ActionIcon>\n                    </Flex>\n                </Group>\n                <Divider size={'xs'} />\n            </Box>\n\n            <Modal\n                opened={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm action\"\n                size=\"xs\"\n                transitionProps={{ transition: 'fade', duration: 600, timingFunction: 'linear' }}\n            >\n                <Text>Do you want to submit the changes?</Text>\n                <Button onClick={() => handleClose(true)}>Submit</Button>\n                <Button onClick={() => handleClose(false)}>Discard</Button>\n            </Modal>\n\n            <Paper pl={10} pr={10} radius={'md'} mt={5} bg={'#f1f3f5'}>\n                <Group position='apart' grow>\n                    <ProfileCard\n                        details={currentProfile}\n                        onDetailChange={handleProfileChange}\n                        editable={!profileExists}\n                    />\n                    <Center>\n                        <PercentageCompleted percentage={percentageCompleted} />\n                    </Center>\n                    <ProfilingInterests profilingInterests={profilingInterests} />\n                </Group>\n            </Paper>\n\n            <Group position='apart' grow>\n                <Box pt={10}>\n                    <KeywordsEntry setKeywordsAdded={setKeywordsAdded} customerId={customerId} />\n                    <Remarks />\n                </Box>\n                <Box>\n                    <Questionnaire categories={categoryObject} setQuestionsHistory={setQuestionHistory} />\n                </Box>\n            </Group>\n\n            <Divider my=\"md\" size={'xs'} />\n            <Flex justify={'flex-end'}>\n                <Button bg={'#EF3E42'} onClick={handleProfileSubmit}>Submit</Button>\n            </Flex>\n        </Paper>\n    );\n};\n\nexport default AgentEntry;","// @ts-nocheck\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n\n    const params: Record<string, string> = {};\n    for (const [key, value] of searchParams.entries()) {\n        params[key] = value;\n    }\n\n    return params;\n}","import { ActionIcon, useMantineColorScheme } from \"@mantine/core\";\nimport { IconSun, IconMoonStars } from \"@tabler/icons-react\";\nimport React from \"react\";\n\nexport default function LightDarkButton() {\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <ActionIcon\n      variant=\"subtle\"\n      c={dark ? \"yellow\" : \"white\"}\n      onClick={() => toggleColorScheme()}\n      title=\"Toggle color scheme\"\n    >\n      {dark ? <IconSun size=\"1.1rem\" /> : <IconMoonStars size=\"1.1rem\" />}\n    </ActionIcon>\n  );\n}\n","import React from 'react'\nimport { Modal, Text, Select, Button } from \"@mantine/core\"; // Import the necessary components from Mantine\n\nconst AssignPermissionModal = ({\n    isModalOpen,\n    handleModalClose,\n    selectedUserRoleName,\n    selectedUser,\n    setSelectedUser,\n    permissions,\n    selectedPermission,\n    setSelectedPermission,\n    rolesPermissions,\n    handleAssignPermission,\n    users,\n    selectedRole\n}) => {\n    return (\n        <> <Modal\n            opened={isModalOpen}\n            onClose={handleModalClose}\n            title=\"Assign permissions\"\n            size=\"lg\"\n            style={{ content: { maxHeight: '80vh' } }}\n\n        >\n            <Text fz=\"xl\">Select user below assigning new permission</Text>\n            {selectedUserRoleName && <Text> ROLE : {selectedUserRoleName}</Text>}\n            <br /><br />\n            <Select\n                label=\"Select user\"\n                placeholder=\"Pick one\"\n                data={users.map((user) => ({\n                    value: user.id,\n                    label: user.agentName || user.email,\n                }))}\n                value={selectedUser}\n                onChange={setSelectedUser}\n\n\n            />\n\n\n            {Array.isArray(permissions) && permissions.length > 0 ? (\n                <Select\n                    label=\"Select permission\"\n                    placeholder=\"Pick one\"\n                    disabled={selectedRole === null}\n                    data={permissions?.map((permission) => ({\n                        value: permission.id,\n                        label: permission.name,\n                        disabled: rolesPermissions.some(rolesPermission => (rolesPermission.permissionId === permission.id && rolesPermission.userId === selectedUser))\n                    }))}\n                    value={selectedPermission}\n                    onChange={setSelectedPermission}\n                    dropdownComponent=\"div\"\n                />\n            ) : (<Text>Loading permissions</Text>)}\n\n\n            <br />\n\n            <Button\n                variant=\"gradient\" gradient={{ from: 'indigo', to: 'red' }}\n                className=\"mt-4\"\n                onClick={handleAssignPermission}\n                disabled={selectedRole === null || selectedPermission === null || selectedRole === null}\n            >\n                Assign\n            </Button>\n\n        </Modal></>\n    )\n}\n\nexport default AssignPermissionModal","import React, { useState } from \"react\";\nimport { ScrollArea, Table, Title, Button } from \"@mantine/core\";\nimport { ActionIcon } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\n\nconst PermissionRoleMappings = ({ useStyles, initialData, title }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = initialData.map((row) => (\n    <tr key={row.id}>\n      <td>{row.rolename}</td>\n      <td>{row.permissionname}</td>\n      <td>{row.username}</td>\n      <td>\n        <Button color=\"teal\" size=\"xs\" compact>\n          {row.isactive}\n        </Button>\n      </td>\n      <td>{row.created_at}</td>\n      <td>\n        <ActionIcon variant=\"light\">\n          <IconSettings size=\"1rem\" />\n        </ActionIcon>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <ScrollArea\n        h={600}\n        onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n      >\n        <Table miw={700} striped withBorder highlightOnHover withColumnBorders>\n          <thead\n            className={cx(classes.header, { [classes.scrolled]: scrolled })}\n          >\n            <tr>\n              <th>Role Name</th>\n              <th>Permission Name</th>\n              <th>User Email</th>\n              <th>Status</th>\n              <th>Created At</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </>\n  );\n};\n\nexport default PermissionRoleMappings;\n","export default __webpack_public_path__ + \"static/media/logo.6dbf63a8.svg\";","import React from 'react';\nimport {\n    IconGitPullRequest,\n    IconAlertCircle,\n    IconMessages,\n    IconDatabase,\n} from '@tabler/icons-react';\nimport { IconUsersGroup, IconSettings, IconSquare } from '@tabler/icons-react';\nimport { ThemeIcon, UnstyledButton, Group, Text, Button } from '@mantine/core';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction MainLink({ icon, color, label, link }) {\n    return (\n\n        <NavLink to={link}>\n            <UnstyledButton sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: theme.spacing.xs,\n                borderRadius: theme.radius.sm,\n\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n\n                '&:active': {\n                    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n                },\n            })}>\n\n                <Group>\n                    <ThemeIcon color={color} variant=\"light\">\n                        {icon}\n                    </ThemeIcon>\n\n                    <Text size=\"sm\">{label}</Text>\n                </Group>\n\n            </UnstyledButton>\n\n        </NavLink>\n    );\n}\n\nconst data = [\n    { icon: <IconDatabase size=\"1rem\" />, color: 'grape', label: 'Roles vs Permission', link: \"rolesvspermissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'green', label: 'Permission vs Users', link: \"permissionrolemappings\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'Permissions', link: \"permissions\" },\n    { icon: <IconDatabase size=\"1rem\" />, color: 'teal', label: 'User Permissions', link: \"userpermissions\" },\n];\n\nexport function MainLinks({ onLinkSelect }) {\n    const links = data.map((link) => <MainLink onClick={() => (onLinkSelect(link))} {...link} key={link.label} />);\n    return <div>{links}</div>;\n}","import { ActionIcon, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nconst RolesVsPermissions = ({ initialData, title }) => {\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Permissions\",\n      accessorKey: \"permissions\",\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          console.log(`Clicked action for ID: ${row.original.id}`);\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={initialData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      />\n    </>\n  );\n};\n\nexport default RolesVsPermissions;\n","import { ActionIcon, Flex, Title } from \"@mantine/core\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\n\nfunction Permissions({ initialData, title }) {\n  const permissionsData = initialData.map((row) => ({\n    id: row.id,\n    name: row.name,\n    isactive: row.isactive,\n    created_at: row.created_at,\n  }));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <StyledButton w={80} c=\"teal\" size=\"xs\" compact>\n          {value}\n        </StyledButton>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    // {\n    //   header: \"Action\",\n    //   accessorKey: \"action\",\n    //   Cell: () => {\n    //     const handleActionClick = () => {\n    //       console.log(\"Icon in the Action column clicked!\");\n    //     };\n    //\n    //     return (\n    //       <ActionIcon variant=\"light\" onClick={handleActionClick}>\n    //         <IconSettings size=\"1rem\" />\n    //       </ActionIcon>\n    //     );\n    //   },\n    // },\n  ];\n\n  return (\n    <>\n      <Title style={{ padding: \"10px\" }} order={4} color=\"#0d5ff9\">\n        {title}\n      </Title>\n      <StyledTable\n        columns={columns}\n        data={permissionsData}\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n      // topProps={() => (\n      //   <Flex>\n      //     <StyledButton\n      //       compact\n      //       onClick={() => {\n      //         console.log(\"Create Permission clicked!\");\n      //       }}\n      //     >\n      //       Create Permission\n      //     </StyledButton>\n      //   </Flex>\n      // )}\n      />\n    </>\n  );\n}\n\nexport default Permissions;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\n\nconst StyledDateInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <DateInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"DD MMM YYYY\"}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon>\n          <IconCalendar color={\"#0d5ff9\"} />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledDateInput;\n","import { Select, Text, ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\n\nconst StyledSelect = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    item: {\n      \"&\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n      },\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n      \"&[data-selected]\": {\n        \"&, &:hover\": {\n          backgroundColor:\n            theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff999\",\n          color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n        },\n      },\n    },\n  };\n\n  return (\n    <Select\n      {...props}\n      withinPortal\n      transitionProps={{\n        transition: \"scale-y\",\n        duration: 500,\n        timingFunction: \"ease\",\n      }}\n      styles={{ ...defaultStyles, ...props.styles }}\n      rightSection={\n        props.rightSection || (\n          <ActionIcon c=\"#0d5ff9\" size={\"sm\"}>\n            <IconChevronDown />\n          </ActionIcon>\n        )\n      }\n    />\n  );\n};\n\nexport default StyledSelect;\n","import React from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\n\nconst AddUserModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleAddUser,\n  userDetails,\n  setUserDetails,\n  rolesData,\n}) => {\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Create User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        value={userDetails.mobile}\n        withAsterisk\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //   backgroundColor: !(\n        //     !userDetails.firstname ||\n        //     !userDetails.lastname ||\n        //     !userDetails.email ||\n        //     !userDetails.role\n        //   )\n        //     ? \"#4E70EA\"\n        //     : \"grey\",\n        // }}\n        onClick={handleAddUser}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Submit\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n          id: data.id,\n          permission: data.permission.name,\n          isactive: data.isActive ? \"active\" : \"disabled\",\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n        <tr key={row.id}>\n          <td>\n            {row.permission ? (\n              row.permission\n            ) : (\n              <Select\n                label=\"Permission\"\n                placeholder=\"Select Permission\"\n                data={userPermissionsOptions}\n                value={selectedPermission}\n                onChange={(value) => setSelectedPermission(value)}\n                withAsterisk\n                required\n              />\n            )}\n          </td>\n          <td>\n            <Switch\n              onClick={() => deactivateMappingOnClick(row.id)}\n              checked={row.isactive == \"active\"}\n              color=\"teal\"\n              onLabel=\"ACTIVE\"\n              offLabel=\"DISABLE\"\n            />\n          </td>\n          <td>{row.created_at}</td>\n        </tr>\n      ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"auto\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col>\n          {/* <Grid.Col span={4}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col> */}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n  Box,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllRolesPermissionsMappings,\n  getAllPermissions,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { getUsers, addUser } from \"../../redux/authSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport AddUserModal from \"./AddUserModal\";\nimport UserActionModal from \"./UserActionModal\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserPermissions = ({ initialData }) => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#0d5ff9\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n\n  const rows = Array.isArray(initialData)\n    ? initialData.map((row) => (\n      <tr key={row.id}>\n        <td>{row.email}</td>\n        <td>{row.role}</td>\n        <td>{row.permissions}</td>\n        <td>\n          <Button color=\"teal\" size=\"xs\" compact>\n            {row.isactive}\n          </Button>\n        </td>\n        <td>{row.created_at}</td>\n        <td onClick={() => handleUserActionModal(row)}>\n          <ActionIcon variant=\"light\">\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        </td>\n      </tr>\n    ))\n    : [];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n      showNotification(\"added user successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell padding=\"md\">\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              padding: \"50px\",\n              marginTop: \"-80px\",\n            }}\n          >\n            <div style={{ display: \"flex\" }}>\n              <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n                <div style={{ padding: \"10px\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"20px\",\n                      marginTop: \"-65px\",\n                    }}\n                  >\n                    <span style={{ padding: \"10px\" }}>\n                      <Title pl={5}>Users Permisssions</Title>\n                    </span>\n                    <span>\n                      <Container>\n                        <Center>\n                          <Flex mt={5}>\n                            <Button\n                              className=\"mt-4\"\n                              onClick={handleAddUserModal}\n                              style={{\n                                backgroundColor: \"black\",\n                                fontColor: \"white\",\n                              }}\n                            >\n                              + Create User\n                            </Button>\n\n                            <AddUserModal\n                              isModalOpen={isAddUserModalOpen}\n                              handleAddUser={handleAddUser}\n                              handleModalClose={handleModalClose}\n                              userDetails={userDetails}\n                              setUserDetails={setUserDetails}\n                              rolesData={rolesData}\n                            />\n                          </Flex>\n                        </Center>\n                      </Container>\n                    </span>\n                  </div>\n                  <div>\n                    {isUserActionModalOpen && (\n                      <UserActionModal\n                        isModalOpen={isUserActionModalOpen}\n                        handleModalClose={handleModalClose}\n                        curr_user={curr_user}\n                        userRolesPermissions={userRolesPermissions}\n                        userPermissionsOptions={userPermissionsOptions}\n                        classes={classes}\n                        cx={cx}\n                      />\n                    )}\n\n                    <ScrollArea\n                      h={600}\n                      onScrollPositionChange={({ y }) => setScrolled(y !== 0)}\n                    >\n                      <Table\n                        miw={700}\n                        withBorder\n                        highlightOnHover\n                        withColumnBorders\n                      >\n                        <thead\n                          className={cx(classes.header, {\n                            [classes.scrolled]: scrolled,\n                          })}\n                        >\n                          <tr>\n                            <th>\n                              <Text color=\"white\">Email</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Role</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Permissions</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Status</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Created At</Text>\n                            </th>\n                            <th>\n                              <Text color=\"white\">Action</Text>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                      </Table>\n                    </ScrollArea>\n                  </div>\n                </div>\n              </span>\n            </div>\n          </Box>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default UserPermissions;\n","import {\n  Modal,\n  Navbar,\n  AppShell,\n  MultiSelect,\n  Button,\n  ActionIcon,\n  Center,\n  Container,\n  Flex,\n  Group,\n  Header,\n  LoadingOverlay,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Title,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconAccessible,\n  IconAdjustmentsHorizontal,\n  IconAnalyze,\n  IconArrowAutofitUp,\n  IconArrowBadgeDown,\n  IconArrowBadgeUp,\n  IconBlade,\n  IconChevronLeft,\n  IconChevronRight,\n  IconLayoutAlignBottom,\n  IconSearch,\n  IconSettings,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../../components/LightDarkButton\";\nimport {\n  getCustomers,\n  getCustomersProfileCompleteness,\n} from \"../../redux/customerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport {\n  getAllRolesPermissionsMappings,\n  getUserRolesPermissionsByMapping,\n  getAllPermissionsByRole,\n  getAllPermissions,\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappingsByUser,\n  getAllRoles,\n} from \"../../redux/rolesPermissionSlice\";\nimport { Table } from \"@mantine/core\";\nimport { createStyles, ScrollArea, rem } from \"@mantine/core\";\nimport { Select } from \"@mantine/core\";\nimport { getUsers } from \"../../redux/authSlice\";\nimport CustomNavbar from \"../../components/CustomNavbar/CustomNavbar\";\nimport AssignPermissionModal from \"./AssignPermissionModal\";\nimport PermissionRoleMappings from \"./PermissionRoleMapping\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport { MainLinks } from \"./_mainLink\";\nimport RolesVsPermissions from \"./RolesVsPermissions\";\nimport { useLocation } from \"react-router-dom\";\nimport CreatePermissionModal from \"./CreatePermissionModal\";\nimport Permissions from \"./Permissions\";\nimport { createPermission } from \"../../redux/rolesPermissionSlice\";\nimport UserPermissions from \"./UserPermissions\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nconst Acl = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#c2c2c2\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${\n          theme.colorScheme === \"dark\"\n            ? theme.colors.dark[3]\n            : theme.colors.gray[2]\n        }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.sm,\n    },\n  }));\n\n  const [isAssignPermissionModalOpen, setIsAssignPermissionModalOpen] =\n    useState(false);\n  const [isCreatePermissionModalOpen, setCreatePermissionModalOpen] =\n    useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n  const [selectedUserRoleName, setSelectedUserRoleName] = useState(null);\n  const [permissionName, setPermissionName] = useState(\"\");\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    permissionsByRole,\n    permissionsByRoleStatus,\n    permissions,\n    roles,\n  } = useSelector((state) => state.rolePermission);\n  const { user, users } = useSelector((state) => state.auth);\n\n  const userPermissionsDict = {};\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users.map((user) => user.id);\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== null) {\n      const userBySelectedId = users.find((x) => x.id === selectedUser);\n      if (userBySelectedId.role) {\n        setSelectedRole(userBySelectedId.role.id);\n        setSelectedUserRoleName(userBySelectedId.role.name);\n      }\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedRole !== null) {\n      dispatch(getAllPermissionsByRole(selectedRole));\n    }\n    setSelectedPermission(null);\n  }, [selectedRole]);\n\n  const rolesPermissionsMapping_initialData = rolesPermissions.map((data) => ({\n    id: data.id,\n    rolename: data.role.name,\n    permissionname: data.permission.name,\n    username: data.user.email,\n    isactive: data.isActive ? \"active\" : \"inactive\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const users_initialData =\n    Object.keys(userPermissionsDict).length > 0 &&\n    users.map((data) => ({\n      id: data.id,\n      email: data.email,\n      isactive: \"active\",\n      role: data.role.name,\n      permissions: userPermissionsDict[data.id].join(\" / \"),\n      created_at: formatDate(data.created_at),\n    }));\n\n  const userPermissionsInitialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n          id: data.id,\n          roleId: data.roleId,\n          email: data.email,\n          isactive: \"active\",\n          role: data.role.name,\n          permissions: userPermissionsDict[data.id].join(\" / \"),\n          created_at: formatDate(data.created_at),\n        }))\n      : [];\n\n  users.map((d) => {\n    console.log(userPermissionsDict[d.id]);\n  });\n\n  const roles_initialData = roles.map((data) => ({\n    id: data.id,\n    name: data.name,\n    permissions: data.defaultPermissions\n      .map((permission) => permission.name)\n      .join(\" / \"),\n    created_at: formatDate(data.created_at),\n  }));\n\n  const permissions_initialData = permissions.map((data) => ({\n    id: data.id,\n    name: data.name,\n    isactive: \"active\",\n    created_at: formatDate(data.created_at),\n  }));\n\n  const handleAddRoleClick = () => {\n    setIsAssignPermissionModalOpen(true);\n  };\n\n  const handleAddPermissionModal = () => {\n    setCreatePermissionModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    if (isAssignPermissionModalOpen) {\n      setIsAssignPermissionModalOpen(false);\n      setSelectedUser(null);\n      setSelectedRole(null);\n      setSelectedPermission(null);\n    }\n    if (isCreatePermissionModalOpen) {\n      setCreatePermissionModalOpen(false);\n    }\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: selectedRole,\n        permissionId: selectedPermission,\n        userId: selectedUser,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    handleModalClose();\n  };\n\n  const handleCreatePermission = () => {\n    dispatch(\n      createPermission({\n        name: permissionName,\n      }),\n    );\n    dispatch(getAllPermissions());\n    handleModalClose();\n  };\n\n  if (rolesPermissionsStatus === \"loading\" || !users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        loaderProps={{\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <AppShell\n          padding=\"md\"\n          // header={<MainHeader />}\n        >\n          <div style={{ display: \"flex\" }}>\n            {/* <span>\n                            <CustomNavbar />\n                        </span> */}\n\n            <span style={{ flexGrow: \"1\", width: \"100px\" }}>\n              <div style={{ padding: \"10px\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"20px\",\n                    marginTop: \"-65px\",\n                  }}\n                >\n                  {/* <span> */}\n                  {/*   <Title pl={5}>ACL</Title> */}\n                  {/* </span> */}\n                  <span>\n                    <Container>\n                      <Center>\n                        <Flex mt={5}>\n                          {location.pathname ===\n                            \"/acl/permissionrolemappings\" && (\n                            <>\n                              <Button\n                                className=\"mt-4\"\n                                onClick={handleAddRoleClick}\n                                compact\n                              >\n                                Assign permissions\n                              </Button>\n\n                              <AssignPermissionModal\n                                isModalOpen={isAssignPermissionModalOpen}\n                                handleModalClose={handleModalClose}\n                                selectedUserRoleName={selectedUserRoleName}\n                                selectedUser={selectedUser}\n                                setSelectedUser={setSelectedUser}\n                                permissions={permissions}\n                                selectedPermission={selectedPermission}\n                                setSelectedPermission={setSelectedPermission}\n                                rolesPermissions={rolesPermissions}\n                                handleAssignPermission={handleAssignPermission}\n                                users={users}\n                                selectedRole={selectedRole}\n                              />\n                            </>\n                          )}\n\n                          {/* {location.pathname === \"/acl/permissions\" && ( */}\n                          {/*     <> */}\n                          {/*         <Button */}\n                          {/*             className=\"mt-4\" */}\n                          {/*             onClick={handleAddPermissionModal} */}\n                          {/*             compact */}\n                          {/*         > */}\n                          {/*             Create permissions */}\n                          {/*         </Button> */}\n                          {/**/}\n                          {/*         <CreatePermissionModal */}\n                          {/*             isModalOpen={isCreatePermissionModalOpen} */}\n                          {/*             handleCreatePermission={handleCreatePermission} */}\n                          {/*             handleModalClose={handleModalClose} */}\n                          {/*             permissionName={permissionName} */}\n                          {/*             setPermissionName={setPermissionName} */}\n                          {/*         /> */}\n                          {/*     </> */}\n                          {/* )} */}\n                        </Flex>\n                      </Center>\n                    </Container>\n                  </span>\n                </div>\n                <div>\n                  <Routes>\n                    <Route>\n                      <Route index element={<>Default page</>} />\n                      <Route\n                        path=\"/permissionrolemappings\"\n                        element={\n                          <PermissionRoleMappings\n                            title={\"acl/permissions vs users\"}\n                            useStyles={useStyles}\n                            initialData={rolesPermissionsMapping_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/rolesvspermissions\"\n                        element={\n                          <RolesVsPermissions\n                            title={\"acl/roles vs permissions\"}\n                            useStyles={useStyles}\n                            initialData={roles_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/permissions\"\n                        element={\n                          <Permissions\n                            title={\"acl/all permissions\"}\n                            useStyles={useStyles}\n                            initialData={permissions_initialData}\n                          />\n                        }\n                      />\n                      <Route\n                        path=\"/userpermissions\"\n                        element={\n                          <UserPermissions\n                            initialData={userPermissionsInitialData}\n                          />\n                        }\n                      />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n            </span>\n          </div>\n        </AppShell>\n      </>\n    );\n  }\n};\n\nexport default Acl;\n","import { ActionIcon, Center, Container, Flex, Group, Header, LoadingOverlay, Navbar, Space, Stack, Text, TextInput, Title } from \"@mantine/core\"\nimport { Icon3dCubeSphere, IconAccessible, IconAdjustmentsHorizontal, IconAnalyze, IconArrowAutofitUp, IconArrowBadgeDown, IconArrowBadgeUp, IconBlade, IconChevronLeft, IconChevronRight, IconLayoutAlignBottom, IconSearch, IconSettings } from \"@tabler/icons-react\"\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { Link } from \"react-router-dom\";\nimport { showNotification } from \"@mantine/notifications\";\n\n\n\nconst PermissionDenied = () => {\n\n    showNotification({\n        type: 'warning',\n        title: `Permission Denied!!`,\n        message: `You do not have access to this page. Please contact the admin`,\n    });\n    return (\n        <>\n            <Center>\n                <Text fz=\"xl\" fw={700}>Permission Denied :(</Text>\n            </Center>\n        </>\n    )\n\n}\n\nexport default PermissionDenied;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFiguresForRow } from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Loader, Select } from \"@mantine/core\";\nimport {\n  IconChevronDown,\n  IconExclamationMark,\n  IconRefresh,\n  IconTrash,\n  IconX,\n} from \"@tabler/icons-react\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst DropdownRow = ({\n  row,\n  rowId,\n  handleDropdownChange,\n  dropdownData,\n  selectedCombinations,\n  deleteRow,\n}) => {\n  const figures = row.figures;\n  const secondDropdownOptions = row.first\n    ? Object.keys(dropdownData[row.first])\n    : [];\n\n  const thirdDropdownOptions = row.second\n    ? dropdownData[row.first][row.second].filter((option) => {\n      const currentCombination = {\n        first: row.first,\n        second: row.second,\n        third: row.first === \"Interests\" ? option.value : option,\n      };\n\n      const isSelectedCombination = selectedCombinations.some(\n        (selected) =>\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      const isSelectedInCurrentRow = selectedCombinations.some(\n        (selected) =>\n          selected.rowId === rowId &&\n          selected.first === currentCombination.first &&\n          selected.second === currentCombination.second &&\n          (row.first === \"Interests\"\n            ? selected.third.value\n            : selected.third) === currentCombination.third,\n      );\n\n      return !isSelectedCombination || isSelectedInCurrentRow;\n    })\n    : [];\n\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state) => state.campaignManagement.loadingStates[rowId],\n  );\n  const error = useSelector((state) => state.campaignManagement.errors[rowId]);\n\n  const handleRefresh = () => {\n    dispatch(fetchFiguresForRow(rowId));\n  };\n\n  const handleThirdDropdownChange = (value) => {\n    handleDropdownChange(rowId, \"third\", value);\n\n    dispatch(fetchFiguresForRow(rowId, value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={Object.keys(dropdownData).map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.first}\n            placeholder=\"Select Information Type\"\n            onChange={(value) => handleDropdownChange(rowId, \"first\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={secondDropdownOptions.map((option) => ({\n              value: option,\n              label: typeof option === \"string\" ? option : null,\n            }))}\n            searchable\n            value={row.second}\n            placeholder=\"Select Category\"\n            onChange={(value) => handleDropdownChange(rowId, \"second\", value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"mb-4 col-6 col-lg-12\">\n          <StyledSelect\n            data={thirdDropdownOptions.map((option) =>\n              typeof option === \"string\"\n                ? { value: option, label: option }\n                : option,\n            )}\n            searchable\n            value={row.third}\n            placeholder=\"Select Sub-category\"\n            onChange={handleThirdDropdownChange}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-1\">\n        <ActionIcon\n          onClick={() => deleteRow(rowId)}\n          color=\"red\"\n          variant=\"subtle\"\n          size={\"sm\"}\n        >\n          <IconTrash />\n        </ActionIcon>\n      </div>\n      <div className=\"col-12 col-lg-2\">\n        {loadingState === \"loading\" && <Loader type={\"dots\"} color=\"#0d5ff9\" />}\n        {loadingState === \"error\" && (\n          <Flex>\n            <ActionIcon c={\"red\"}>\n              <IconExclamationMark />\n            </ActionIcon>\n            <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n              <IconRefresh />\n            </ActionIcon>\n          </Flex>\n        )}\n        {loadingState !== \"loading\" && loadingState !== \"error\" && (\n          <>\n            <Flex>\n              <ActionIcon>{figures !== null ? figures : \"-\"}</ActionIcon>\n              <ActionIcon c={\"#0d5ff9\"} onClick={handleRefresh}>\n                <IconRefresh />\n              </ActionIcon>\n            </Flex>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DropdownRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRadarData } from \"../../../../redux/campaignManagementSlice\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst RadarLinear = () => {\n  const radarData = useSelector(selectRadarData);\n\n  const updatedData = radarData.map((item) => ({\n    ...item,\n    subject: `${item.subject} \\n ${item.count}`,\n  }));\n\n  const CustomizedAxisTick = (props) => {\n    const { x, y, payload } = props;\n    const text = payload.value.split(\"\\n\");\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        {/* // {text.map((value, index) => ( */}\n        {text\n          .filter((_, index) => index === 0)\n          .map((value, index) => (\n            <text\n              key={index}\n              x={0}\n              y={index * 5}\n              dy={index === 0 ? -5 : 5}\n              textAnchor=\"middle\"\n              fill=\"#666\"\n            >\n              {value}\n            </text>\n          ))}\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={updatedData}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" tick={<CustomizedAxisTick />} />\n        <Radar\n          name=\"Customer Campaign\"\n          dataKey=\"count\"\n          stroke=\"#0d5ff9\"\n          fill=\"#0d5ff9\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default RadarLinear;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEventName,\n  setEventDate,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { ActionIcon, Flex, Group, Stack, Text, TextInput } from \"@mantine/core\";\nimport DatePicker from \"react-datepicker\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const eventName = useSelector((state) => state.campaignManagement.eventName);\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  return (\n    <>\n      <div className=\"\" style={{ minHeight: \"100px\" }}>\n        <Flex justify={\"space-around\"}>\n          <Stack>\n            <StyledTextInput\n              label={\"Event Name\"}\n              id=\"eventName\"\n              w={400}\n              name=\"eventName\"\n              placeholder=\"Event Name\"\n              type=\"text\"\n              value={eventName}\n              onChange={(evt) =>\n                dispatch(setEventName(evt.currentTarget.value))\n              }\n            />\n          </Stack>\n          <Stack>\n            {/* <DatePicker\n                            className='form-control  form-floating date-icon'\n                            dateFormat=\"yyyy/MM/dd\"\n                            style={{ zIndex: 1000 }}\n                            selected={eventDate}\n                            onChange={(date) => {\n                                console.log(\"Selected Date:\", date);\n                                dispatch(setEventDate(date));\n                            }}\n                            minDate={new Date()}\n                        /> */}\n            {/* <DatePickerInput */}\n            {/*   label=\"Event Date\" */}\n            {/*   value={eventDate} */}\n            {/*   popoverProps={{ withinPortal: true }} */}\n            {/*   rightSection={ */}\n            {/*     <ActionIcon variant=\"subtle\"> */}\n            {/*       <IconCalendar size=\"1.1rem\" stroke={1.5} /> */}\n            {/*     </ActionIcon> */}\n            {/*   } */}\n            <StyledDateInput\n              label=\"Event Date\"\n              value={eventDate}\n              onChange={(date) => {\n                console.log(\"Selected Date:\", date);\n                dispatch(setEventDate(date));\n              }}\n              minDate={new Date()}\n              w={200}\n            />\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n\nexport default Step1;\n","import { ActionIcon, Text } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledDateInput from \"../../../../../StyledComponents/StyledDateInput\";\n\nfunction CustomDate({ setSelectedDate }) {\n  return (\n    <StyledDateInput\n      label={\"Date\"}\n      placeholder={\"Select Date\"}\n      onChange={(e) => setSelectedDate(e)}\n      mx=\"auto\"\n      maw={400}\n    />\n  );\n}\n\nexport default CustomDate;\n","import { ActionIcon, useMantineTheme } from \"@mantine/core\";\nimport { TimeInput } from \"@mantine/dates\";\nimport { IconClock } from \"@tabler/icons-react\";\n\nconst StyledTimeInput = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    rightSection: { pointerEvents: \"none\", color: \"#0d5ff9\" },\n    label: {\n      color: \"#0d5ff999\",\n    },\n    dropdown: {\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n    calendarHeader: {\n      backgroundColor: \"#F3F6FF\",\n    },\n    day: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    monthList: {\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    weekday: {\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    calendarHeaderLevel: {\n      backgroundColor: \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundColor:\n          theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#0d5ff9\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n      },\n    },\n    calendarHeaderControlIcon: {\n      color: \"#0d5ff9\",\n    },\n    input: {\n      cursor: \"pointer\",\n      border: \"none\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"black\",\n    },\n  };\n\n  return (\n    <TimeInput\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      valueFormat={\"HH:MM\"}\n      onClick={(e) => e.target.showPicker()}\n      popoverProps={{ withinPortal: true }}\n      rightSection={\n        <ActionIcon c=\"#0d5ff9\">\n          <IconClock />\n        </ActionIcon>\n      }\n    />\n  );\n};\n\nexport default StyledTimeInput;\n","import StyledTimeInput from \"../../../../../StyledComponents/StyledTimeInput\";\n\nfunction CustomTime({ setSelectedTime, timeSelected }) {\n  return (\n    <StyledTimeInput\n      value={timeSelected ? timeSelected : \"\"}\n      label={\"Time\"}\n      onChange={(e) => setSelectedTime(e.target.value)}\n    />\n  );\n}\n\nexport default CustomTime;\n","import moment from 'moment'\n\nexport function formatDateTime(itemDate, itemTime) {\n    const combinedDateTime = `${moment(itemDate).format('YYYY-MM-DD')} ${itemTime}`;\n    return moment(combinedDateTime).format('DD-MMM-YYYY | hh:mm A');\n}","import { useMantineTheme, Button, Badge } from \"@mantine/core\";\n\nconst StyledBadge = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    root: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        backgroundImage:\n          theme.colorScheme === \"dark\"\n            ? theme.colors.teal[9]\n            : \"radial-gradient(#FFFFFF 1% ,#F3F6FF)\",\n        color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n        border: \"1px solid #0d5ff9\",\n      },\n    },\n  };\n\n  return <Badge styles={{ ...defaultStyles, ...props.styles }} {...props} />;\n};\n\nexport default StyledBadge;\n","import { useMantineTheme, Button, Badge, Checkbox } from \"@mantine/core\";\n\nconst StyledCheckBox = (props) => {\n  const theme = useMantineTheme();\n\n  const defaultStyles = {\n    input: {\n      cursor: \"pointer\",\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.teal[9] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n      \"&:hover\": {\n        border: \"2px solid #0d5ff9\",\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n      },\n    },\n  };\n\n  return (\n    <Checkbox\n      styles={{ ...defaultStyles, ...props.styles }}\n      {...props}\n      size={25}\n      radius=\"xl\"\n      color={\"grape\"}\n    />\n  );\n};\n\nexport default StyledCheckBox;\n","import {\n  ActionIcon,\n  Badge,\n  Box,\n  Button,\n  Card,\n  Divider,\n  Flex,\n  Stack,\n  rem,\n  Group,\n  Text,\n  Checkbox,\n  Grid,\n  Center,\n} from \"@mantine/core\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEventDate } from \"../../../../redux/campaignManagementSlice\";\nimport CustomDate from \"./CustomTimelineComponents/CustomDate\";\nimport CustomTime from \"./CustomTimelineComponents/CustomTime\";\nimport { IconChevronDown, IconPlus, IconX } from \"@tabler/icons-react\";\nimport { formatDateTime } from \"./CustomTimelineComponents/DateFormatter\";\nimport StyledDateInput from \"../../../../StyledComponents/StyledDateInput\";\nimport StyledBadge from \"../../../../StyledComponents/StyledBadge\";\nimport StyledCheckBox from \"../../../../StyledComponents/StyledCheckBox\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../../StyledComponents/StyledSelect\";\n\nconst Timeline = ({ initialState, onUpdate, onApplyForAll }) => {\n  const dispatch = useDispatch();\n  const eventDate = useSelector((state) => state.campaignManagement.eventDate);\n\n  const defaultStartDate = new Date();\n\n  const defaultResults = {\n    startDate: defaultStartDate,\n    endDate: null,\n    recurrence: {\n      type: \"\",\n      recurrenceTime: \"\",\n      dailyFrequency: 1,\n      weeklyDays: [],\n      monthlyDay: \"\",\n      monthlyFrequency: \"\",\n      monthlyWeekday: \"\",\n      customDateTimes: [],\n    },\n  };\n\n  const [startDate, setStartDate] = useState(\n    initialState.startDate || defaultStartDate,\n  );\n  const [results, setResults] = useState(\n    initialState.recurrence ? initialState : defaultResults,\n  );\n  console.log(\"results\", results);\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n  const monthlyFrequencies = [\"first\", \"second\", \"third\", \"fourth\"];\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [customDateTimes, setCustomDateTimes] = useState(\n    results.recurrence.customDateTimes || [],\n  );\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [recurrenceTime, setRecurrenceTime] = useState(\n    results.recurrence.recurrenceTime || \"\",\n  );\n\n  const addCustomDate = () => {\n    if (selectedDate && selectedTime) {\n      const newCustomDateTime = { date: selectedDate, time: selectedTime };\n      setCustomDateTimes([...customDateTimes, newCustomDateTime]);\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          customDateTimes: [\n            ...prevState.recurrence.customDateTimes,\n            newCustomDateTime,\n          ],\n        },\n      }));\n      setSelectedDate(null);\n      setSelectedTime(null);\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recurrenceTime) {\n      setResults((prevState) => ({\n        ...prevState,\n        recurrence: {\n          ...prevState.recurrence,\n          recurrenceTime: recurrenceTime,\n        },\n      }));\n    }\n  }, [recurrenceTime]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      addCustomDate();\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    onUpdate(results);\n  }, [results]);\n\n  const handleDateChange = (field, date) => {\n    setResults((prevState) => ({\n      ...prevState,\n      [field]: date,\n    }));\n\n    if (field === \"startDate\") {\n      setStartDate(date);\n    } else if (field === \"endDate\") {\n      dispatch(setEventDate(date));\n    }\n  };\n\n  const removeCustomDate = (indexToRemove) => {\n    const updatedCustomDateTimes = customDateTimes.filter(\n      (_, index) => index !== indexToRemove,\n    );\n    setCustomDateTimes(updatedCustomDateTimes);\n\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        customDateTimes: updatedCustomDateTimes,\n      },\n    }));\n  };\n\n  const handleRecurrenceChange = (field, value) => {\n    setResults((prevState) => ({\n      ...prevState,\n      recurrence: {\n        ...prevState.recurrence,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleDailyFrequencyChange = (value) => {\n    let updatedValue = value !== \"Everyday\" ? parseInt(value, 10) : \"Everyday\";\n    handleRecurrenceChange(\"dailyFrequency\", updatedValue);\n  };\n\n  const handleWeeklyDaysChange = (day) => {\n    const updatedDays = results.recurrence.weeklyDays.includes(day)\n      ? results.recurrence.weeklyDays.filter((d) => d !== day)\n      : [...results.recurrence.weeklyDays, day];\n\n    handleRecurrenceChange(\"weeklyDays\", updatedDays);\n  };\n\n  const handleMonthlyDayAndFrequencyChange = (field, value) => {\n    handleRecurrenceChange(field, parseInt(value, 10));\n  };\n\n  return (\n    <div>\n      <Divider c=\"#0d5ff9\" mb={10} />\n      <Stack>\n        <Stack>\n          <Flex justify={\"space-between\"}>\n            <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n              Timeline\n            </Text>\n            <StyledBadge onClick={() => onApplyForAll(results)}>\n              Apply For All\n            </StyledBadge>\n          </Flex>\n\n          <Group grow>\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={startDate} */}\n                {/*   onChange={(date) => handleDateChange(\"startDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"Start Date\"}\n                  value={startDate}\n                  onChange={(date) => handleDateChange(\"startDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-lg-6\">\n              <div className=\"mb-40\">\n                {/* <DatePicker */}\n                {/*   className=\"form-control  inputs-control form-floating date-icon\" */}\n                {/*   dateFormat=\"yyyy/MM/dd\" */}\n                {/*   selected={eventDate} */}\n                {/*   onChange={(date) => handleDateChange(\"endDate\", date)} */}\n                {/*   minDate={new Date()} */}\n                {/* /> */}\n                <StyledDateInput\n                  label={\"End Date\"}\n                  value={eventDate}\n                  onChange={(date) => handleDateChange(\"endDate\", date)}\n                  minDate={new Date()}\n                />\n              </div>\n            </div>\n          </Group>\n        </Stack>\n        <Text size=\"lg\" fw={\"normal\"} c=\"#0d5ff9\">\n          {\" \"}\n          Recurrence{\" \"}\n        </Text>\n        <Grid grow>\n          <Grid.Col span={3}>\n            <Stack>\n              <StyledCheckBox\n                label={\"Daily\"}\n                checked={results.recurrence.type === \"Daily\"}\n                value=\"Daily\"\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Weekly\"}\n                value=\"Weekly\"\n                checked={results.recurrence.type === \"Weekly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Monthly\"}\n                value=\"Monthly\"\n                checked={results.recurrence.type === \"Monthly\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n              <StyledCheckBox\n                label={\"Custom\"}\n                value=\"Custom\"\n                checked={results.recurrence.type === \"Custom\"}\n                onChange={(e) => handleRecurrenceChange(\"type\", e.target.value)}\n              />\n            </Stack>\n          </Grid.Col>\n          {/* This */}\n          <Grid.Col span={9}>\n            {results.recurrence.type === \"Daily\" && (\n              <Stack>\n                <Group>\n                  <StyledCheckBox\n                    value=\"EveryNDays\"\n                    checked={results.recurrence.dailyFrequency === \"EveryNDays\"}\n                    onChange={() =>\n                      handleRecurrenceChange(\"dailyFrequency\", \"EveryNDays\")\n                    }\n                  />\n                  Every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    value={results.recurrence.dailyFrequency}\n                    onChange={(e) => handleDailyFrequencyChange(e.target.value)}\n                  />\n                  day(s)\n                </Group>\n                <StyledCheckBox\n                  label={\"Everyday\"}\n                  value=\"Everyday\"\n                  checked={results.recurrence.dailyFrequency === \"Everyday\"}\n                  onChange={() =>\n                    handleRecurrenceChange(\"dailyFrequency\", \"Everyday\")\n                  }\n                />\n              </Stack>\n            )}\n\n            <Grid grow>\n              {results.recurrence.type === \"Weekly\" &&\n                weekDays.map((day) => (\n                  <Grid.Col span={4}>\n                    <StyledCheckBox\n                      label={day}\n                      value={day}\n                      checked={results.recurrence.weeklyDays.includes(day)}\n                      onChange={() => handleWeeklyDaysChange(day)}\n                    />\n                  </Grid.Col>\n                ))}\n            </Grid>\n\n            {results.recurrence.type === \"Monthly\" && (\n              //\n              <Box>\n                <Group grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption1\" */}\n                  {/* /> */}\n                  Day{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyDay\",\n                        e.target.value,\n                      )\n                    }\n                  />\n                  of every{\" \"}\n                  <StyledTextInput\n                    w={50}\n                    type=\"number\"\n                    min=\"1\"\n                    onChange={(e) =>\n                      handleMonthlyDayAndFrequencyChange(\n                        \"monthlyFrequency\",\n                        e.target.value,\n                      )\n                    }\n                  />{\" \"}\n                  month(s)\n                </Group>\n                {/**/}\n                <Group spacing={1} grow>\n                  {/* TODO Fix */}\n                  <StyledCheckBox />\n                  {/* <input */}\n                  {/*   className=\"form-check-input check-recu\" */}\n                  {/*   type=\"radio\" */}\n                  {/*   name=\"monthlyOption\" */}\n                  {/*   id=\"monthlyOption2\" */}\n                  {/* /> */}\n                  Day\n                  <StyledTextInput type=\"number\" />\n                  of every\n                  <StyledSelect\n                    miw={\"23%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyFrequency\", e)\n                    }\n                    data={monthlyFrequencies}\n                  />\n                  <StyledSelect\n                    miw={\"31%\"}\n                    onChange={(e) =>\n                      handleRecurrenceChange(\"monthlyWeekday\", e)\n                    }\n                    data={weekDays}\n                  />{\" \"}\n                  of every month(s)\n                </Group>\n              </Box>\n            )}\n            {results.recurrence.type !== \"Custom\" &&\n              (results.recurrence.type === \"Daily\" ||\n                results.recurrence.type === \"Weekly\" ||\n                results.recurrence.type === \"Monthly\") && (\n                <Center>\n                  <Box w={100}>\n                    <CustomTime\n                      setSelectedTime={setRecurrenceTime}\n                      timeSelected={recurrenceTime}\n                    />\n                  </Box>\n                </Center>\n              )}\n            {results.recurrence.type === \"Custom\" && (\n              <div>\n                <Flex wrap={\"wrap\"}>\n                  <Flex mr={5} wrap={\"wrap\"}>\n                    {customDateTimes.map((item, index) => (\n                      <StyledBadge\n                        rightSection={\n                          <ActionIcon\n                            size=\"xs\"\n                            c=\"#0d5ff9\"\n                            radius=\"xl\"\n                            variant=\"transparent\"\n                            onClick={() => removeCustomDate(index)} // Add this onClick event here\n                          >\n                            <IconX size={rem(10)} />\n                          </ActionIcon>\n                        }\n                        size=\"lg\"\n                        mr={5}\n                        mb={5}\n                        key={index}\n                      >\n                        {formatDateTime(item.date, item.time)}\n                      </StyledBadge>\n                    ))}\n                  </Flex>\n                  <Stack>\n                    <Badge\n                      bg={\"white\"}\n                      c={\"gray\"}\n                      styles={{\n                        root: { borderWidth: \"1px\", borderColor: \"gray\" },\n                      }}\n                      leftSection={\n                        <ActionIcon size={rem(20)}>\n                          <IconPlus />\n                        </ActionIcon>\n                      }\n                      rightSection={\n                        <ActionIcon>\n                          <IconChevronDown />\n                        </ActionIcon>\n                      }\n                      onClick={() => setShowDropdown(!showDropdown)}\n                    >\n                      Add More\n                    </Badge>\n                    {showDropdown && (\n                      <Box>\n                        <Box shadow=\"lg\" w={200}>\n                          <CustomDate setSelectedDate={setSelectedDate} />\n                          <CustomTime\n                            setSelectedTime={setSelectedTime}\n                            timeSelected={selectedTime}\n                          />\n                        </Box>\n                      </Box>\n                    )}\n                  </Stack>\n                </Flex>\n              </div>\n            )}\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateTabData } from '../../../../redux/campaignManagementSlice';\nimport { Text } from '@mantine/core';\n\nconst FileUploader = () => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector(state => state.campaignManagement.activeTab);\n    const tabData = useSelector(state => state.campaignManagement.tabData);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file && file.type === \"text/plain\") {\n            const fileContent = await file.text();\n\n            const updatedTabData = {\n                ...tabData,\n                [activeTab]: {\n                    ...tabData[activeTab],\n                    content: fileContent,\n                    file,\n                    fileName: file.name\n                }\n            };\n            dispatch(updateTabData(updatedTabData));\n        } else {\n            alert(\"Please select a valid .txt file\");\n        }\n    };\n\n    return (\n        <div className=\"mb-15\">\n            {tabData[activeTab]?.fileName && (\n                <Text variant='text' fw={'bold'} fz={'xs'}>\n                    {tabData[activeTab].fileName}\n                </Text>\n            )}\n            <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        </div>\n    );\n};\n\nexport default FileUploader;","import { RichTextEditor, Link } from \"@mantine/tiptap\";\nimport { useEditor } from \"@tiptap/react\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Superscript from \"@tiptap/extension-superscript\";\nimport SubScript from \"@tiptap/extension-subscript\";\nimport { useEffect } from \"react\";\nimport DOMPurify from \"dompurify\";\nimport { Box } from \"@mantine/core\";\nimport StyledTextInput from \"../../../../StyledComponents/StyledTextInput\";\n\nconst WysiwygEditor = ({ initialContent, onChange, readOnly, activeTab }) => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Link,\n      Superscript,\n      SubScript,\n      Highlight,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n    ],\n    content: initialContent.content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n  });\n\n  useEffect(() => {\n    console.log(activeTab);\n  }, [activeTab]);\n\n  useEffect(() => {\n    // editor?.setOptions({ content: initialContent })\n    const sanitizedContent = DOMPurify.sanitize(initialContent.content);\n    editor?.commands.insertContent(sanitizedContent);\n    console.log(\"Effect\");\n  }, [initialContent.file]);\n\n  return (\n    <RichTextEditor\n      editor={editor}\n      readOnly={readOnly}\n      styles={{\n        root: {\n          border: \"none\",\n          position: \"relative\",\n        },\n        control: {\n          backgroundColor: \"transparent\",\n          border: \"none\",\n        },\n        controlsGroup: {\n          position: \"relative\",\n          height: 10,\n        },\n        content: {\n          backgroundColor: \"transparent\",\n          overflow: \"auto\",\n          maxHeight: \"210px\",\n        },\n        toolbar: {\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <RichTextEditor.Toolbar sticky stickyOffset={60}>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Bold />\n          <RichTextEditor.Italic />\n          <RichTextEditor.Underline />\n          <RichTextEditor.Strikethrough />\n          <RichTextEditor.ClearFormatting />\n          <RichTextEditor.Highlight />\n          <RichTextEditor.Code />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.H1 />\n          <RichTextEditor.H2 />\n          <RichTextEditor.H3 />\n          <RichTextEditor.H4 />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Blockquote />\n          <RichTextEditor.Hr />\n          <RichTextEditor.BulletList />\n          <RichTextEditor.OrderedList />\n          <RichTextEditor.Subscript />\n          <RichTextEditor.Superscript />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.Link />\n          <RichTextEditor.Unlink />\n        </RichTextEditor.ControlsGroup>\n\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.AlignLeft />\n          <RichTextEditor.AlignCenter />\n          <RichTextEditor.AlignJustify />\n          <RichTextEditor.AlignRight />\n        </RichTextEditor.ControlsGroup>\n        {activeTab === \"Email\" ? (\n          <Box>\n            <StyledTextInput w={500} placeholder={\"Subject\"} />\n          </Box>\n        ) : null}\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n};\n\nexport default WysiwygEditor;\n","import \"./Whatsapp.css\";\nimport eaLogo from \"../../../Login/assets/eaLogo.png\";\nimport { ActionIcon, Flex, rem } from \"@mantine/core\";\nimport {\n  IconArrowAutofitLeft,\n  IconArrowLeft,\n  IconPhone,\n  IconSend,\n  IconSendOff,\n  IconVideo,\n} from \"@tabler/icons-react\";\n\nexport const Whatsapp = ({ previewStyles, sanitizedContent }) => {\n  return (\n    <div className=\"europ-assistance\">\n      <div className=\"frame\">\n        <div className=\"be-a-part-of-IPL-wrapper\">\n          <p\n            className=\"be-a-part-of-IPL\"\n            dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n          />\n        </div>\n        <div className=\"group\">\n          <div className=\"overlap-group\">\n            <div className=\"div\">Book now</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"overlap\">\n        <div className=\"text-wrapper-2\">Europ Assistance India</div>\n        {/* <img className=\"arrow\" alt=\"Arrow\" src=\"arrow-3.svg\" /> */}\n        <ActionIcon size={rem(13)} mt={17} c={\"white\"}>\n          <IconArrowLeft />\n        </ActionIcon>\n        <div className=\"img-wrapper\">\n          <img className=\"img\" alt=\"Img\" src={eaLogo} />\n        </div>\n        <div className=\"div-wrapper\">\n          <div className=\"text-wrapper-3\">7:01 PM</div>\n        </div>\n        <div className=\"group-2\">\n          {/* <div className=\"heroicons-outline\" alt=\"Heroicons outline\" />\n                    <div className=\"eva-video-fill\" alt=\"Eva video fill\" /> */}\n          <Flex ml={10} mt={-1}>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconVideo />\n            </ActionIcon>\n            <ActionIcon size={rem(13)} c={\"white\"}>\n              <IconPhone />\n            </ActionIcon>\n          </Flex>\n          <div className=\"three-dots\">\n            <div className=\"ellipse\" />\n            <div className=\"ellipse-2\" />\n            <div className=\"ellipse-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"group-3\">\n        <div className=\"overlap-2\">\n          {/* <img className=\"ic-baseline-attach\" alt=\"Ic baseline attach\" src=\"ic-baseline-attach-file.svg\" />\n                    <img className=\"bx-bxs-camera\" alt=\"Bx bxs camera\" src=\"bx-bxs-camera.svg\" />\n                    <img className=\"gg-smile-mouth-open\" alt=\"Gg smile mouth open\" src=\"gg-smile-mouth-open.svg\" /> */}\n          <div className=\"text-wrapper-4\">Type a message</div>\n        </div>\n        <div className=\"imagevector-wrapper\">\n          {/* <img className=\"imagevector\" alt=\"Imagevector\" src=\"image2vector-17-1.svg\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import DOMPurify from \"dompurify\";\nimport './Step2.css'\nimport { Whatsapp } from \"./Whatsapp\";\nimport { Box, Center, Transition, Button } from \"@mantine/core\";\nimport { useState } from 'react';\n\nconst Preview = ({ content, tab }) => {\n    const sanitizedContent = DOMPurify.sanitize(content);\n\n    const previewStyles = {\n        overflow: 'auto',\n        maxHeight: '100%',\n    };\n\n    switch (tab) {\n        case 'Email':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'SMS':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Notification':\n            return (\n                <div style={previewStyles} dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n            );\n\n        case 'Whatsapp':\n            return (\n                <>\n                    <Box style={previewStyles}>\n                        <Center >\n                            <div style={{ zoom: '200%' }}>\n                                <Whatsapp previewStyles={previewStyles} sanitizedContent={sanitizedContent} />\n                            </div>\n                        </Center>\n                    </Box>\n                </>\n            );\n\n        default:\n            return null;\n    }\n};\n\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\";\nimport Timeline from \"./Timeline\";\nimport FileUploader from \"./FileUploader\";\nimport {\n  setActiveTab,\n  updateTabData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { useState } from \"react\";\nimport { Box, Button, Flex, Text } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport WysiwygEditor from \"./WysiwygEditor\";\nimport Preview from \"./Preview\";\nimport \"./Step2.css\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\n\nconst Step2 = () => {\n  const dispatch = useDispatch();\n  const activeTab = useSelector((state) => state.campaignManagement.activeTab);\n  const tabData = useSelector((state) => state.campaignManagement.tabData);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const enterPreviewMode = () => {\n    setPreviewMode(true);\n  };\n\n  const exitPreviewMode = () => {\n    setPreviewMode(false);\n  };\n\n  const handleTextInputWysiwyg = (content) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        content: content,\n        characterCount: content.length,\n      },\n    };\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleTimelineUpdate = (newState) => {\n    const updatedTabData = {\n      ...tabData,\n      [activeTab]: {\n        ...tabData[activeTab],\n        timelineState: newState,\n      },\n    };\n    console.log(\"updatedTabData\", updateTabData);\n    dispatch(updateTabData(updatedTabData));\n  };\n\n  const handleApplyForAll = (currentTimelineState) => {\n    const updatedTabData = { ...tabData };\n    [\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].forEach((tab) => {\n      updatedTabData[tab] = {\n        ...tabData[tab],\n        timelineState: currentTimelineState,\n      };\n    });\n    dispatch(updateTabData(updatedTabData));\n    showNotification({\n      type: \"default\",\n      title: \"Timelines applied\",\n      message: \"Timelines have been added for all modes\",\n    });\n  };\n\n  return (\n    <>\n      {previewMode && <div className=\"overlay\"></div>}\n      <div className={`modal-body modal-pad`}>\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"dis-block nav-pills me-3\"\n                id=\"v-pills-tab\"\n                role=\"tablist\"\n                aria-orientation=\"vertical\"\n              >\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) =>\n                  previewMode ? (\n                    <Box ml={-15}>\n                      <Button\n                        className=\"preview-container\"\n                        key={tab}\n                        onClick={() => dispatch(setActiveTab(tab))}\n                        c={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                        bg={activeTab === tab ? \"white\" : \"#0d5ff9\"}\n                        sx={{\n                          \"&:hover\": {\n                            backgroundColor: \"white\",\n                            color: \"#524EE1\",\n                          },\n                        }}\n                        size=\"lg\"\n                        fullWidth\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Text size={\"xs\"}>{tab}</Text>\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      className=\"preview-container\"\n                      key={tab}\n                      onClick={() => dispatch(setActiveTab(tab))}\n                      c={activeTab === tab ? \"#white\" : \"#0d5ff9\"}\n                      bg={activeTab === tab ? \"#0d5ff9\" : \"white\"}\n                      sx={{\n                        \"&:hover\": {\n                          backgroundColor: \"#F3F6FF\",\n                          color: \"#0d5ff9\",\n                        },\n                      }}\n                      mr={-5}\n                      size=\"lg\"\n                      fullWidth\n                      style={{ marginBottom: \"10px\" }}\n                    >\n                      <Text size={\"xs\"}>{tab}</Text>\n                    </Button>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"preview-container tab-content tab-content-bg\">\n                {[\"Email\", \"SMS\", \"Notification\", \"Whatsapp\"].map((tab) => (\n                  <div\n                    key={tab}\n                    className={` tab-pane fade ${activeTab === tab ? \"show active\" : \"\"\n                      }`}\n                    id={`v-pills-${tab}`}\n                    role=\"tabpanel\"\n                  >\n                    <Box>\n                      {previewMode ? (\n                        <Box h={250}>\n                          <Preview content={tabData[tab]?.content} tab={tab} />\n                        </Box>\n                      ) : (\n                        <Box h={290} mt={-40}>\n                          <WysiwygEditor\n                            key={activeTab}\n                            activeTab={activeTab}\n                            initialContent={tabData[tab]}\n                            onChange={handleTextInputWysiwyg}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                    <Flex direction={\"row-reverse\"} mt={20}>\n                      <div className=\"character-count\">\n                        {tabData[activeTab].characterCount}/\n                        {tabData[activeTab].charLimit}\n                      </div>\n                      {!previewMode && (\n                        <Box ml={5}>\n                          {tabData[activeTab].characterCount >\n                            tabData[activeTab].charLimit && (\n                              <div className=\"character-limit-error\">\n                                Character limit exceeded!\n                              </div>\n                            )}\n                        </Box>\n                      )}\n                    </Flex>\n                    <Box mt={\"-4%\"}>\n                      {!previewMode ? (\n                        <StyledButton w={120} onClick={enterPreviewMode}>\n                          Preview\n                        </StyledButton>\n                      ) : (\n                        <StyledButton w={120} onClick={exitPreviewMode}>\n                          OK\n                        </StyledButton>\n                      )}\n                    </Box>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <Box className={`${!previewMode ? \"tab-preview-container\" : \"\"}`}>\n            {!previewMode && (\n              <>\n                <Flex direction={\"row-reverse\"} mr={-100} mt={-20}>\n                  <FileUploader key={activeTab} />\n                </Flex>\n                <Timeline\n                  key={activeTab}\n                  onUpdate={handleTimelineUpdate}\n                  onApplyForAll={handleApplyForAll}\n                  initialState={tabData[activeTab]?.timelineState || {}}\n                />\n              </>\n            )}\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n","import { Button, Center, Modal } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCampaign,\n  setEventName,\n  setStep,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport StyledButton from \"../../../../StyledComponents/StyledButton\";\nimport \"./CampaignModal.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst CampaignModal = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen, eventName, step } = useSelector(\n    (state) => state.campaignManagement,\n  );\n  const campaignManagementState = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePublish = () => {\n    dispatch(createCampaign()).then((res) => {\n      if (createCampaign.fulfilled.match(res)) {\n        showNotification({\n          type: \"default\",\n          title: `Campaign Published`,\n          message: `The campaign has been published successfully`,\n          color: \"green\",\n        });\n        dispatch(toggleModal(false));\n      } else {\n        showNotification({\n          type: \"error\",\n          title: `Campaign Failed`,\n          message: res.error.message,\n          color: \"red\",\n        });\n        setLoading(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    showNotification({\n      type: \"default\",\n      title: `Campaign ${campaignManagementState.eventName} has been Cancelled`,\n      message: `Click Run campaign to run the campaign again`,\n    });\n    dispatch(toggleModal(false));\n  };\n\n  const handleNext = () => {\n    if (!eventName.trim()) {\n      showNotification({\n        type: \"warning\",\n        title: `Please provide an event name`,\n        message: `Event name is required to proceed.`,\n      });\n    } else {\n      dispatch(setStep(2));\n    }\n  };\n\n  const handlePublishConfirmation = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmedPublish = () => {\n    setLoading(true);\n    // setShowConfirmation(false);\n    handlePublish();\n  };\n\n  return (\n    <>\n      <Modal\n        opened={isModalOpen}\n        withCloseButton={false}\n        closeOnClickOutside={false}\n        size={\"xl\"}\n        styles={{ content: { overflow: \"visible\" } }}\n      >\n        <div className=\"modal-header modal-header-wrap\">\n          <div className=\"modeltitle\">\n            <h1>{step === 1 ? \"Create a new Campaign\" : \"Preview Campaign\"}</h1>\n            <h2>Step: {step}/2</h2>\n            {step === 2 && (\n              <IconArrowLeft\n                cursor={\"pointer\"}\n                onClick={() => dispatch(setStep(1))}\n              />\n            )}\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={handleClose}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Step1\n              eventName={eventName}\n              setEventName={(event) => dispatch(setEventName(event))}\n            />\n          ) : (\n            <div>\n              <Step2 />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {step === 1 ? (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handleNext}>\n                Next\n              </StyledButton>\n            </Center>\n          ) : (\n            <Center>\n              <StyledButton w={\"30%\"} onClick={handlePublishConfirmation}>\n                Publish\n              </StyledButton>\n            </Center>\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        opened={showConfirmation}\n        withCloseButton={true}\n        onClose={() => setShowConfirmation(false)}\n        title=\"Confirm Campaign Publish\"\n        size={\"md\"}\n      >\n        <p>Are you sure you want to publish this campaign?</p>\n        <Center>\n          <StyledButton onClick={handleConfirmedPublish} disabled={loading}>\n            {loading ? \"Publishing...\" : \"Yes, Publish\"}\n          </StyledButton>\n          <StyledButton\n            variant=\"outline\"\n            onClick={() => setShowConfirmation(false)}\n          >\n            No, Go back\n          </StyledButton>\n        </Center>\n      </Modal>\n    </>\n  );\n};\n\nexport default CampaignModal;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport CampaignModal from \"./CampaignModal\";\nimport {\n  resetModal,\n  fetchRowData,\n  toggleModal,\n} from \"../../../../redux/campaignManagementSlice\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst ButtonGroup = () => {\n  const dispatch = useDispatch();\n  const downloadDataStatus = useSelector(\n    (state) => state.campaignManagement.downloadDataStatus,\n  );\n  const isModalOpen = useSelector(\n    (state) => state.campaignManagement.isModalOpen,\n  );\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  ); // <-- Add this line\n\n  const handleOpenModal = () => {\n    if (allCustomerIDs.length === 0) {\n      showNotification({\n        title: `Error!`,\n        message: `No customers have been selected. Please ensure atleast one customer`,\n        color: \"red\",\n      });\n      return;\n    }\n    dispatch(toggleModal(true));\n    dispatch(resetModal());\n    showNotification({\n      title: `Success!`,\n      message: `Campaign initiated against customers in pool.`,\n      color: \"green\",\n    });\n  };\n\n  const handleDownloadData = () => {\n    dispatch(fetchRowData());\n    if (downloadDataStatus === \"loading\") {\n      showNotification({\n        title: `Fetching Datasets`,\n        message: `Please wait while the data is being fetched`,\n        color: \"blue\",\n      });\n    } else if (downloadDataStatus === \"success\") {\n      showNotification({\n        title: `Success!`,\n        message: `Data fetched successfully!`,\n        color: \"green\",\n      });\n    } else if (downloadDataStatus === \"failed\") {\n      showNotification({\n        title: `Error!`,\n        message: `Failed to fetch data. Please try again.`,\n        color: \"red\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className=\"btn runcamp\" onClick={handleOpenModal}>\n        Run Campaign\n      </button>\n      {isModalOpen && (\n        <CampaignModal\n          isOpen={isModalOpen}\n          closeModal={() => toggleModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setRadarData,\n  selectRadarData,\n} from \"../../../../redux/campaignManagementSlice\";\nimport RadarLinear from \"./RadarLinear\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { Box, Card } from \"@mantine/core\";\n\nconst Demographic = () => {\n  const dispatch = useDispatch();\n  const radarData = useSelector(selectRadarData);\n  const allCustomerIDs = useSelector(\n    (state) => state.campaignManagement.allCustomerIDs,\n  );\n\n  const totalCount = radarData.reduce((acc, curr) => acc + curr.count, 0);\n\n  const handleDownload = () => {\n    const baseTotal = 18247000;\n    const randomAdjustment = Math.floor(Math.random() * 2000001) - 1000000;\n    const desiredTotal = baseTotal + randomAdjustment;\n\n    let randomizedData = radarData.map((item) => {\n      let randomCount = Math.floor(Math.random() * desiredTotal * 0.25);\n      return { ...item, count: randomCount };\n    });\n\n    // Adjusting the values to ensure the total is close to the desired value\n    const currentTotal = randomizedData.reduce(\n      (acc, curr) => acc + curr.count,\n      0,\n    );\n    const difference = desiredTotal - currentTotal;\n    if (difference !== 0) {\n      randomizedData[0].count += difference;\n    }\n\n    dispatch(setRadarData(randomizedData));\n  };\n\n  return (\n    <div className=\"col-12 col-lg-4\">\n      <Card shadow=\"lg\" radius=\"md\" bg=\"#F3F6FF\">\n        <div className=\"dem-title mb-4\">\n          <h1>Total Demographic</h1>\n        </div>\n        <Box h={200} w={350}>\n          <RadarLinear />\n        </Box>\n        <div className=\"row mt-2\">\n          <div className=\"col-12 col-lg-12 text-center mb-2\">\n            <span className=\"total-numb pe-2\">\n              {/* {totalCount.toLocaleString('en-IN')} */}\n            </span>\n            <span className=\"total-users\">\n              {allCustomerIDs.length} Users matching your criteria\n            </span>\n          </div>\n          {/* <div className='col-12 col-lg-6 web-mb-20'>\n                        <button type='button' className='btn datebtn' onClick={handleDownload}>Download Data</button>\n\n                    </div>\n                    <div className='col-12 col-lg-6'>\n                        <button type='button' className='btn runcamp'>Run Campaing</button>\n\n                    </div> */}\n          <ButtonGroup />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Demographic;\n","import {\n  ActionIcon,\n  Box,\n  Flex,\n  Select,\n  Text,\n  Title,\n  Loader,\n  Group,\n} from \"@mantine/core\";\nimport { IconArrowRight, IconChevronDown } from \"@tabler/icons-react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  fetchData,\n  fetchSources,\n  fetchCampaignNames,\n  selectCampaign,\n} from \"../../redux/campaignSlice\";\nimport { Link } from \"react-router-dom\";\n\nconst BarStackedView = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector((state) => state.campaign.data);\n  const sources = useSelector((state) => state.campaign.sources);\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n  const status = useSelector((state) => state.campaign.status);\n  const error = useSelector((state) => state.campaign.error);\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchData());\n      dispatch(fetchSources());\n      dispatch(fetchCampaignNames());\n    }\n  }, [status, dispatch]);\n\n  if (status === \"loading\") {\n    return (\n      <Loader\n        c=\"5c00f2\"\n        style={{ margin: \"0 auto\", display: \"block\" }}\n        size={50}\n      />\n    );\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <>\n      <Box p={30}>\n        <Flex justify={\"space-between\"}>\n          <Title c={\"#0d5ff9\"}>Campaigns</Title>\n          <Link to={\"/campaign\"}>\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n          </Link>\n        </Flex>\n        <Box>\n          <Flex>\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Campaign(s)</Text>}\n              data={[\"All\", ...campaignNames]}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n              onChange={(value) => dispatch(selectCampaign(value))}\n            />\n            <Select\n              maw={320}\n              mx=\"auto\"\n              label={<Text c={\"dimmed\"}>Source(s)</Text>}\n              data={sources}\n              transitionProps={{\n                transition: \"pop-top-left\",\n                duration: 80,\n                timingFunction: \"ease\",\n              }}\n              withinPortal\n              rightSection={\n                <ActionIcon>\n                  <IconChevronDown />\n                </ActionIcon>\n              }\n            />\n          </Flex>\n        </Box>\n        <Box h={500} w={\"100%\"}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              maxBarSize={60}\n            >\n              <CartesianGrid\n                strokeLinecap=\"3\"\n                horizontalCoordinatesGenerator={(props) =>\n                  props.height > 250 ? [75, 150, 225] : [100, 200]\n                }\n                vertical={false}\n              />\n              <XAxis dataKey=\"name\" />\n              <YAxis\n                label={{\n                  value: \"No. of Customers\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                  offset: -4,\n                }}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar\n                dataKey=\"delivered\"\n                stackId=\"a\"\n                fill=\"#5C7DF2\"\n                stroke=\"#5C7DF2\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                stackId=\"a\"\n                dataKey=\"failure\"\n                stroke=\"#F73164\"\n                strokeWidth={2.36}\n                fill=\"#F73164\"\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"interested\"\n                stackId=\"a\"\n                fill=\"#F78C31\"\n                stroke=\"#F78C31\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              />\n              <Bar\n                dataKey=\"converted\"\n                stackId=\"a\"\n                fill=\"#4BCA74\"\n                stroke=\"#4BCA74\"\n                strokeWidth={2.36}\n                fillOpacity={0.7}\n              >\n                <LabelList position={\"top\"} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BarStackedView;\n","import { Box } from \"@mantine/core\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#DE8965\", \"#D85972\", \"#2745D9\", \"#1D9825\"];\n\nconst RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\nconst CustomPieChart = () => {\n  return (\n    <Box h={200} w={200}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={300}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            // label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomPieChart;\n","import { ActionIcon, Box, Center, Select, Stack, Text } from \"@mantine/core\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Label,\n  LabelList,\n  Legend,\n} from \"recharts\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\n\nconst renderCustomizedLabel = (props) => {\n  const { content, ...rest } = props;\n  return <Label {...rest} fontSize=\"12\" fill=\"#FFFFFF\" fontWeight=\"Bold\" />;\n};\n\nconst VerticalBarChart = () => {\n  const data = [\n    {\n      name: \"SMS\",\n      Delivered: 250,\n      Interested: 120,\n      Converted: 75,\n      Failure: 55,\n    },\n    {\n      name: \"Email\",\n      Delivered: 180,\n      Interested: 90,\n      Converted: 40,\n      Failure: 20,\n    },\n    {\n      name: \"Notification\",\n      Delivered: 230,\n      Interested: 110,\n      Converted: 50,\n      Failure: 30,\n    },\n    {\n      name: \"Whatsapp\",\n      Delivered: 275,\n      Interested: 135,\n      Converted: 85,\n      Failure: 60,\n    },\n  ];\n\n  const campaignNames = useSelector((state) => state.campaign.campaignNames);\n\n  return (\n    <Stack>\n      <Box>\n        <StyledSelect\n          maw={320}\n          label={\"Campaign(s)\"}\n          data={[\"All\", ...campaignNames]}\n        />\n      </Box>\n      <Center>\n        <Box h={400} w={820} p={20}>\n          <ResponsiveContainer height={\"100%\"} width={\"100%\"}>\n            <BarChart layout=\"vertical\" data={data} barSize={30}>\n              <XAxis\n                label={{ value: \"Campaigns\", offset: 0 }}\n                type=\"number\"\n                height={55}\n              />\n              <YAxis\n                label={{\n                  value: \"Communications\",\n                  angle: -90,\n                  position: \"left\",\n                  offset: \"-15\",\n                }}\n                type=\"category\"\n                dataKey=\"name\"\n                width={150}\n              />\n              <Tooltip />\n              <Legend\n                iconType=\"circle\"\n                verticalAlign=\"top\"\n                align=\"right\"\n                offset={-10}\n              />\n              <Bar dataKey=\"Delivered\" fill=\"#BB5DE4\" stackId=\"a\" />\n              <Bar dataKey=\"Failure\" fill=\"#0D96F9\" stackId=\"a\" />\n              <Bar dataKey=\"Interested\" fill=\"#1D9B25\" stackId=\"a\" />\n              <Bar dataKey=\"Converted\" fill=\"#D85972\" stackId=\"a\">\n                <LabelList position=\"right\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Box>\n      </Center>\n    </Stack>\n  );\n};\n\nexport default VerticalBarChart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Center,\n  Flex,\n  Group,\n  ActionIcon,\n  Text,\n  Stack,\n  rem,\n  Tooltip,\n} from \"@mantine/core\";\nimport {\n  IconBounceLeft,\n  IconCalendar,\n  IconClick,\n  IconClock,\n  IconCone,\n  IconCreditCard,\n  IconSearch,\n  IconView360,\n} from \"@tabler/icons-react\";\n\nconst data = [\n  {\n    color: \"green\",\n    text: \"No. of Clicks\",\n    percentage: \"85%\",\n    icon: IconClick,\n    label:\n      \"Number of times that a customer has clicked any othe marketing campaign links\",\n  },\n  {\n    color: \"orange\",\n    text: \"No. of Bookings\",\n    percentage: \"70%\",\n    icon: IconCalendar,\n    label: \"Number of Bookings created\",\n  },\n  {\n    color: \"purple\",\n    text: \"No. of Payments\",\n    percentage: \"85%\",\n    icon: IconCreditCard,\n    label: \"Number of Bookings that followed through with complete payments\",\n  },\n  {\n    color: \"pink\",\n    text: \"Conversion Rate\",\n    percentage: \"91%\",\n    icon: IconCone,\n    label: \"Percentage of payments to bookings\",\n  },\n  {\n    color: \"teal\",\n    text: \"Bounce Rate\",\n    percentage: \"13%\",\n    icon: IconBounceLeft,\n    label:\n      \"All the attempts through out all the campaigns that resulted in a failure\",\n  },\n];\n\nconst TopPanelCards = () => {\n  const [visibleTooltip, setVisibleTooltip] = useState(false);\n\n  return (\n    <>\n      {data.map((item, index) => (\n        <Box\n          key={index}\n          onMouseEnter={() => setVisibleTooltip(index)}\n          onMouseLeave={() => setVisibleTooltip(false)}\n        >\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundImage: \"radial-gradient(#FFFFFF 50% ,#F3F6FF)\",\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease\",\n              \":hover\": {\n                transform: \"scale(1.05)\",\n              },\n            }}\n            radius={\"md\"}\n            shadow=\"md\"\n          >\n            <Center>\n              <Flex>\n                <Group noWrap>\n                  <Tooltip\n                    key={`Tooltip-${index}`}\n                    label={item.label}\n                    color={\"EBDFFF\"}\n                    withArrow\n                    opened={visibleTooltip === index}\n                  >\n                    <ActionIcon size={rem(70)} c={item.color}>\n                      <item.icon size={rem(70)} />\n                    </ActionIcon>\n                  </Tooltip>\n                  <Stack justify={\"start\"}>\n                    <Text>{item.text}</Text>\n                    <Text c={item.color}>{item.percentage}</Text>\n                  </Stack>\n                </Group>\n              </Flex>\n            </Center>\n          </Card>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default TopPanelCards;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Title,\n} from \"@mantine/core\";\nimport { IconTableExport } from \"@tabler/icons-react\";\nimport CustomPieChart from \"./PieChart\";\nimport VerticalBarChart from \"./VerticalBarChart\";\nimport TopPanelCards from \"./TopPanelCards\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport RadialChart from \"./RadialChart\";\n\nconst BoardStats = () => {\n  return (\n    <>\n      <Stack>\n        {/* <Title>Campaign</Title> */}\n        {/* Pannel 1 */}\n        <Card shadow=\"lg\" radius={\"lg\"}>\n          <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n            <Text fw={\"bold\"}>General</Text>\n          </Flex>\n          <SimpleGrid cols={5}>\n            <TopPanelCards />\n          </SimpleGrid>\n        </Card>\n        {/* Pannel 1 End */}\n        {/* Mid Pannel Left Start */}\n        <Grid>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}>\n              <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                <Text fw={\"bold\"}>Overview</Text>\n                <Center>\n                  <ActionIcon c={\"#0d5ff9\"}>\n                    <IconTableExport />\n                  </ActionIcon>\n                  <Text fw={\"bold\"}>Export</Text>\n                </Center>\n              </Flex>\n              <Stack>\n                <Group grow>\n                  <Card sx={{ border: \"1px solid\", borderColor: \"#F3F6FF\" }}>\n                    <Stack>\n                      <Group spacing={\"xs\"}>\n                        <Title size={\"md\"}>Total</Title>\n                        <Title size={\"md\"} c={\"#0d5ff9\"}>\n                          16,954\n                        </Title>\n                      </Group>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#DE8965\"} fw={\"bold\"}>\n                          • SMS\n                        </Text>\n                        <Text>1244</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#D85972\"} fw={\"bold\"}>\n                          • Email\n                        </Text>\n                        <Text>242</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#2745D9\"} fw={\"bold\"}>\n                          • Notification\n                        </Text>\n                        <Text>2345</Text>\n                      </Flex>\n                      <Flex justify={\"space-between\"}>\n                        <Text c={\"#1D9825\"} fw={\"bold\"}>\n                          • Whatsapp\n                        </Text>\n                        <Text>13123</Text>\n                      </Flex>\n                    </Stack>\n                  </Card>\n                  <Box>\n                    <CustomPieChart />\n                  </Box>\n                </Group>\n                <Stack>\n                  <StyledSelect\n                    label={\"Category\"}\n                    placeholder=\"Demographic\"\n                    data={[\"Demographic\"]}\n                  />\n                  <StyledSelect\n                    label={\"Sub-Category(s)\"}\n                    placeholder=\"Age\"\n                    data={[\"Age\"]}\n                  />\n                  <StyledSelect\n                    label={\"Status\"}\n                    placeholder=\"All\"\n                    data={[\"All\"]}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            {/* </Grid.Col> */}\n            {/* <Grid.Col span={6}> */}\n            {/* <Card shadow=\"lg\" radius={\"lg\"} h={\"100%\"}> */}\n            {/*   <Flex c={\"#0d5ff9\"} justify={\"space-between\"}> */}\n            {/*     <Text fw={\"bold\"}>Customers vs Profiles</Text> */}\n            {/*     <Center> */}\n            {/*       <ActionIcon c={\"#0d5ff9\"}> */}\n            {/*         <IconTableExport /> */}\n            {/*       </ActionIcon> */}\n            {/*       <Text fw={\"bold\"}>Export</Text> */}\n            {/*     </Center> */}\n            {/*   </Flex> */}\n            {/*   <RadialChart /> */}\n            {/* </Card> */}\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Card shadow=\"lg\" radius={\"lg\"}>\n              <Stack>\n                <Flex c={\"#0d5ff9\"} justify={\"space-between\"}>\n                  <Text fw={\"bold\"}>Communications</Text>\n                  <Center>\n                    <ActionIcon c={\"#0d5ff9\"}>\n                      <IconTableExport />\n                    </ActionIcon>\n                    <Text fw={\"bold\"}>Export</Text>\n                  </Center>\n                </Flex>\n                <Box>\n                  <VerticalBarChart />\n                </Box>\n              </Stack>\n            </Card>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nexport default BoardStats;\n","import React, { useEffect } from \"react\";\nimport DropdownRow from \"./DropdownRow\";\nimport \"../../_customer-Profile.scss\";\nimport \"../../scss/_variables.scss\";\nimport \"../../scss/_mixins.scss\";\nimport \"../../scss/_card.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getKeywords } from \"../../../../redux/keywordSlice\";\nimport { IconPlus } from \"@tabler/icons-react\";\nimport { ActionIcon, Box, Card, Flex, Group, Text } from \"@mantine/core\";\nimport {\n  toggleModal,\n  updateDropdownData,\n  updateRows,\n  updateSelectedCombinations,\n} from \"../../../../redux/campaignManagementSlice\";\nimport Demographic from \"./Demographic\";\nimport BarStackedView from \"../../../HomeDashBoard/BarStackedCampaign\";\nimport BoardStats from \"../../../HomeDashBoard/BoardStats\";\n\nconst Analysis = () => {\n  const dispatch = useDispatch();\n\n  const { isModalOpen, dropdownData, rows, selectedCombinations } = useSelector(\n    (state) => state.campaignManagement,\n  );\n\n  useEffect(() => {\n    dispatch(getKeywords());\n  }, [dispatch]);\n\n  const keywords = useSelector((state) => state.keyword.keywords);\n  console.log(keywords, keywords);\n  const keywordsStatus = useSelector((state) => state.keyword.keywordsStatus);\n\n  if (keywordsStatus === \"loading\") {\n    console.log(\"loading...\");\n  }\n\n  if (keywordsStatus === \"failed\") {\n    console.log(\"Error getting keywords\");\n  }\n\n  useEffect(() => {\n    if (keywordsStatus === \"success\") {\n      let updatedDropdownData = { ...dropdownData.Interests };\n\n      keywords.forEach((keyword) => {\n        const updatedCategory = updatedDropdownData[keyword.category]\n          ? [\n            ...updatedDropdownData[keyword.category],\n            { label: keyword.value, value: keyword.id },\n          ]\n          : [{ label: keyword.value, value: keyword.id }];\n\n        updatedDropdownData = {\n          ...updatedDropdownData,\n          [keyword.category]: updatedCategory,\n        };\n      });\n\n      const finalDropdownData = {\n        ...dropdownData,\n        Interests: updatedDropdownData,\n      };\n\n      dispatch(updateDropdownData(finalDropdownData));\n    }\n  }, [keywordsStatus, keywords]);\n\n  const handleDropdownChange = (rowId, dropdown, value) => {\n    const updatedRows = { ...rows };\n    updatedRows[rowId] = {\n      ...updatedRows[rowId],\n      [dropdown]: value,\n    };\n\n    let updatedCombinations = [...selectedCombinations];\n\n    if (dropdown === \"first\") {\n      updatedRows[rowId].second = \"\";\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"second\") {\n      updatedRows[rowId].third = \"\";\n    } else if (dropdown === \"third\") {\n      let thirdValue;\n      if (updatedRows[rowId].first === \"Interests\") {\n        thirdValue = dropdownData[updatedRows[rowId].first][\n          updatedRows[rowId].second\n        ].find((opt) => opt.value === value);\n      } else {\n        thirdValue = value;\n      }\n\n      updatedCombinations = updatedCombinations.filter(\n        (combination) => combination.rowId !== rowId,\n      );\n\n      updatedCombinations.push({\n        rowId,\n        first: updatedRows[rowId].first,\n        second: updatedRows[rowId].second,\n        third: thirdValue,\n      });\n    }\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedCombinations));\n  };\n\n  const addRow = () => {\n    const newRow = {\n      [Date.now().toString()]: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n      },\n    };\n    dispatch(updateRows({ ...rows, ...newRow }));\n  };\n\n  const deleteRow = (rowId) => {\n    const updatedRows = { ...rows };\n    delete updatedRows[rowId];\n\n    const updatedSelectedCombinations = selectedCombinations.filter(\n      (combination) => combination.rowId !== rowId,\n    );\n\n    dispatch(updateRows(updatedRows));\n    dispatch(updateSelectedCombinations(updatedSelectedCombinations));\n  };\n\n  const handleModalToggle = (status) => {\n    dispatch(toggleModal(status));\n  };\n\n  return (\n    <>\n      <BoardStats />\n      <Card mt={20} shadow={\"lg\"} radius=\"md\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Data Analysis\n            </Text>\n            <div\n              className=\"row\"\n              style={{ maxHeight: \"250px\", overflowY: \"scroll\" }}\n            >\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Information Type</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <div className=\"select-title mb-3\">\n                  <h1>Select Sub-category</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-1\">\n                <div className=\"select-title mb-3\">\n                  <h1>Delete</h1>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-2\">\n                <div className=\"select-title mb-3\">\n                  <h1>Figures</h1>\n                </div>\n              </div>\n              {Object.entries(rows).map(([rowId, rowData]) => (\n                <DropdownRow\n                  key={rowId}\n                  row={rowData}\n                  rowId={rowId}\n                  handleDropdownChange={handleDropdownChange}\n                  dropdownData={dropdownData}\n                  selectedCombinations={selectedCombinations}\n                  deleteRow={deleteRow}\n                />\n              ))}\n              <Flex justify={\"end\"}>\n                <div className=\"pl-90\">\n                  <Group onClick={addRow} style={{ cursor: \"pointer\" }}>\n                    <ActionIcon color=\"#0d5ff9\" variant=\"subtle\" size={\"sm\"}>\n                      <IconPlus color=\"#0d5ff9\" />\n                    </ActionIcon>\n                    <Text ml={-18} color=\"#0d5ff9\" size={\"sm\"}>\n                      Add More\n                    </Text>\n                  </Group>\n                </div>\n              </Flex>\n            </div>\n            {/* <ButtonGroup\n                                isModalOpen={isModalOpen}\n                                setIsModalOpen={handleModalToggle}\n                            /> */}\n          </div>\n          <Demographic />\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default Analysis;\n","export default __webpack_public_path__ + \"static/media/eaLogoRotate.0d85ab0c.svg\";","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  NavLink,\n  UnstyledButton,\n  Group,\n  Avatar,\n  Box,\n  Text,\n  rem,\n  Card,\n  Navbar,\n  Menu,\n  Stack,\n  Flex,\n} from \"@mantine/core\";\nimport {\n  IconChevronRight,\n  IconChevronLeft,\n  IconUser,\n  IconKey,\n  IconBell,\n  IconLogout,\n  IconTrash,\n  IconChevronDown,\n} from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { clearUserPermissions } from \"../redux/rolesPermissionSlice\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === \"dark\" ? theme.colors.dark[1] : \"#0d5ff9\",\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n    },\n\n    //   For Dark Mode\n    //   \"&\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"white\",\n    //   },\n    //   \"&:hover\": {\n    //     backgroundColor:\n    //       theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"transparent\",\n    //     backgroundImage: \"radial-gradient(#FFFFFF 1% ,#FFFFFF00)\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#0d5ff9\",\n    //     width: \"110%\",\n    //   },\n    // },\n    //\n    // linkActive: {\n    //   \"&, &:hover\": {\n    //     backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#F3F6FF\",\n    //     color: theme.colorScheme === \"dark\" ? theme.white : \"#F3F6FF\",\n    //     [`& .${getStylesRef(\"icon\")}`]: {\n    //       color: theme.fn.variant({ variant: \"light\", color: \"#F3F6FF\" }).color,\n    //     },\n    //   },\n  },\n}));\n\n\n\nconst User = ({ user, roleName }) => {\n  const { classes, cx } = useStyles();\n  const theme = useMantineTheme();\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearUserPermissions())\n  }\n\n  return (\n    <div>\n      <Menu\n        trigger=\"hover\"\n        openDelay={100}\n        closeDelay={400}\n        styles={{\n          dropdown: {\n            border: \"none\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n      >\n        <Menu.Target>\n          <UnstyledButton\n            // onClick={() => setOpened(prev => !prev)}\n            sx={{\n              width: \"100%\",\n              padding: theme.spacing.xs,\n              borderRadius: theme.radius.sm,\n              // boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n              // boxShadow:\n              //   \"rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px\",\n              color:\n                theme.colorScheme === \"dark\" ? theme.colors.dark[0] : \"#0d5ff9\",\n              \"&:hover\": {\n                backgroundColor:\n                  theme.colorScheme === \"dark\"\n                    ? theme.colors.dark[6]\n                    : \"transparent\",\n                border: \"none\",\n              },\n            }}\n          >\n            <Flex justify={\"space-between\"}>\n              <Avatar\n                src={\n                  user?.avatarUrl ||\n                  \"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n                }\n                radius=\"xl\"\n              />\n              <Group>\n                <Stack spacing={0}>\n                  <Text size=\"sm\" weight={500}>\n                    {user?.email?.split(\"@\")[0]}\n                  </Text>\n                  <Text color=\"#0d5ff9\" size=\"xs\">\n                    {roleName}\n                  </Text>\n                </Stack>\n                <IconChevronDown size={rem(18)} />\n              </Group>\n            </Flex>\n          </UnstyledButton>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Box>\n            <Card\n              bg={\"#F3F6FF\"}\n              shadow=\"xl\"\n              radius={\"md\"}\n              sx={{ border: \"1px solid #0d5ff9\" }}\n            >\n              <NavLink\n                component={Link}\n                to=\"/myAccount\"\n                label=\"My Account\"\n                icon={<IconUser size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component={Link}\n                to=\"/securitySettings\"\n                label=\"Change Password\"\n                icon={<IconKey size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n              />\n              <NavLink\n                component=\"div\"\n                label=\"Logout\"\n                color=\"red\"\n                icon={<IconLogout size={14} />}\n                className={cx(classes.link, classes.linkIcon)}\n                onClick={() => handleLogout()}\n              />\n            </Card>\n          </Box>\n        </Menu.Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default User;\n","import {\n  Avatar,\n  Flex,\n  Group,\n  Header,\n  NavLink,\n  Navbar,\n  Space,\n  Stack,\n  Card,\n  createStyles,\n  useMantineTheme,\n  getStylesRef,\n  ActionIcon,\n} from \"@mantine/core\";\nimport {\n  Icon3dCubeSphere,\n  IconUsersGroup,\n  IconAccessible,\n  IconSettingsAutomation,\n  IconAnalyze,\n  IconSettings,\n  IconBell,\n} from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport LightDarkButton from \"../components/LightDarkButton\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Logo from \"../components/assets/eaLogoRotate.svg\";\nimport User from \"./_user\";\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    fontSize: theme.fontSizes.sm,\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[7],\n    borderRadius: theme.radius.sm,\n    fontWeight: 500,\n    \"&\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#F3F6FF\",\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff9\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\" ? theme.colors.dark[6] : \"#0d5ff990\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      },\n    },\n  },\n  linkIcon: {\n    ref: getStylesRef(\"icon\"),\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[2]\n        : theme.colors.gray[6],\n    marginRight: theme.spacing.sm,\n  },\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.colorScheme === \"dark\" ? \"#252D3B\" : \"#0d5ff9\",\n      color: theme.colorScheme === \"dark\" ? theme.white : \"#FFFFFF\",\n      [`& .${getStylesRef(\"icon\")}`]: {\n        color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n          .color,\n      },\n    },\n  },\n  stickyNavbar: {\n    position: \"sticky\",\n    height: \"100%\",\n    top: 0,\n  },\n}));\n\nconst MainAppShell = ({ children }) => {\n  const { classes, cx } = useStyles();\n  const location = useLocation();\n  const [activeNavLink, setActiveNavLink] = useState(\"\");\n  const { user, users } = useSelector((state) => state.auth);\n  const theme = useMantineTheme();\n\n  const { userPermissions, getAllRolesPermissionsMappingsByUserStatus } =\n    useSelector((state) => state.rolePermission);\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  function findUserRoleNameById(userId) {\n    const user = users.find((user) => user.id === userId);\n    if (user) {\n      return user.role.name;\n    } else {\n      return \"User not found\";\n    }\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveNavLink(pathname);\n  }, [location.pathname]);\n\n  //For Navbar entry\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsMounted(true);\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <Header\n        styles={{\n          root: {\n            backgroundImage: \"linear-gradient(#00239c,#0d5ff9)\",\n            paddingTop: 5,\n            paddingRight: 20,\n          },\n        }}\n        height={{ base: 50 }}\n        withBorder={false}\n      >\n        <Flex justify={\"flex-end\"}>\n          <Group>\n            <LightDarkButton />\n            <ActionIcon variant=\"subtle\" c=\"white\">\n              <IconBell />\n            </ActionIcon>\n            <Avatar\n              p={2}\n              bg={\"white\"}\n              // styles={{\n              //   root: {\n              //     backgroundImage: \"radial-gradient(#FFFFFF 50% ,#0d5ff9)\",\n              //   },\n              // }}\n              size={\"2.5rem\"}\n              radius=\"xl\"\n              src={Logo}\n            />\n          </Group>\n        </Flex>\n      </Header>\n      <div style={{ display: \"flex\" }}>\n        <Card\n          shadow=\"md\"\n          w={\"290px\"}\n          bg={theme.colorScheme == \"dark\" ? \"\" : \"#FFFFFF\"}\n          sx={{\n            boxShadow: `\n rgba(13, 95, 249, 0.17) 0px -23px 25px 0px inset,\n rgba(13, 95, 249, 0.15) 0px -36px 30px 0px inset,\n rgba(13, 95, 249, 0.1) 0px -79px 40px 0px inset,\n rgba(13, 95, 249, 0.06) 0px 2px 1px,\n rgba(13, 95, 249, 0.09) 0px 4px 2px,\n rgba(13, 95, 249, 0.09) 0px 8px 4px,\n rgba(13, 95, 249, 0.09) 0px 16px 8px,\n rgba(13, 95, 249, 0.09) 0px 32px 16px\n    `,\n\n            transform: isMounted ? \"translateX(0%)\" : \"translateX(-100%)\",\n            transition: \"transform 0.6s ease-out\",\n          }}\n        >\n          <Navbar\n            className={classes.stickyNavbar}\n            // height={\"100vh\"}\n            p=\"xs\"\n            withBorder={false}\n            bg={theme.colorScheme == \"dark\" ? \"\" : \"transparent\"}\n          >\n            <Space h={5} />\n            <Navbar.Section>\n              {users && user && user._id && (\n                <User user={user} roleName={findUserRoleNameById(user._id)} />\n              )}\n            </Navbar.Section>\n            <Space h={2} />\n            <Stack>\n              {hasPermission(userPermissions, \"profile_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/\"\n                  label=\"Dashboard\"\n                  icon={<IconAnalyze size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"user_view\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/users\"\n                  label=\"Users\"\n                  icon={<IconUsersGroup size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/users\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/acl\"\n                  label=\"ACL\"\n                  icon={<IconSettingsAutomation size=\"2rem\" stroke={2.0} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/acl\",\n                  })}\n                >\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/rolesvspermissions\"\n                    label=\"Roles vs Permission\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/permissions\"\n                    label=\"Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                  <NavLink\n                    styles={{\n                      root: {\n                        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                        transition: \"transform 0.3s ease\",\n                        \"&:hover\": {\n                          transform: \"translateY(5px)\",\n                        },\n                      },\n                    }}\n                    component={Link}\n                    to=\"/acl/userpermissions\"\n                    label=\"Users Permissions\"\n                    icon={<IconSettings size=\"1rem\" stroke={2} />}\n                    className={classes.link}\n                  />\n                </NavLink>\n              )}\n              {hasPermission(userPermissions, \"campaign_dashoard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/campaign\"\n                  label=\"Campaign\"\n                  icon={<Icon3dCubeSphere size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]: activeNavLink === \"/campaign\",\n                  })}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") && (\n                <NavLink\n                  styles={{\n                    root: {\n                      boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                      transition: \"transform 0.3s ease\",\n                      \"&:hover\": {\n                        transform: \"translateY(5px)\",\n                      },\n                    },\n                  }}\n                  component={Link}\n                  to=\"/customers\"\n                  label=\"Customers\"\n                  icon={<IconAccessible size=\"2rem\" stroke={2} />}\n                  className={cx(classes.link, {\n                    [classes.linkActive]:\n                      activeNavLink === \"/customers\" ||\n                      activeNavLink === \"/dashboard\",\n                  })}\n                />\n              )}\n            </Stack>\n          </Navbar>\n        </Card>\n        <span\n          style={{\n            flexGrow: \"1\",\n            width: \"100px\",\n            height: \"calc(100vh - 50px)\",\n            overflowY: \"auto\",\n            // backgroundColor: \"#F8F8F8\",\n            backgroundImage: \"radial-gradient(#F2F2F2 50% ,#F3F6FF)\",\n          }}\n        >\n          <div\n            style={{\n              paddingLeft: \"10px\",\n              paddingRight: \"20px\",\n              marginTop: \"20px\",\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                backgroundColor: \"transparent\",\n              }}\n            ></div>\n            {children}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default MainAppShell;\n","import {\n  Modal,\n  useMantineTheme,\n  Title,\n  Button,\n  Avatar,\n  Text,\n  Grid,\n  Timeline,\n  Space,\n  Table,\n  Select,\n} from \"@mantine/core\";\nimport { IconGitBranch, IconGitCommit } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Switch } from \"@mantine/core\";\nimport {\n  createRolesPermissionMapping,\n  getAllRolesPermissionsMappings,\n  deactivateMapping,\n} from \"../../redux/rolesPermissionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { notifications } from \"@mantine/notifications\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst UserActionModal = ({\n  isModalOpen,\n  curr_user,\n  handleModalClose,\n  userRolesPermissions,\n  userPermissionsOptions,\n  classes,\n  cx,\n}) => {\n  const initialData =\n    Object.keys(userRolesPermissions).length > 0\n      ? userRolesPermissions.map((data) => ({\n        id: data.id,\n        permission: data.permission.name,\n        isactive: data.isActive ? \"active\" : \"disabled\",\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n  const theme = useMantineTheme();\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState(initialData);\n  const [scrolled, setScrolled] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(null);\n\n  const deactivateMappingOnClick = (id) => {\n    dispatch(deactivateMapping(id));\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"changed status successfully\");\n    handleModalClose();\n  };\n\n  const rows = Array.isArray(tableData)\n    ? tableData.map((row) => (\n      <tr key={row.id}>\n        <td>\n          {row.permission ? (\n            row.permission\n          ) : (\n            <Select\n              label=\"Permission\"\n              placeholder=\"Select Permission\"\n              data={userPermissionsOptions}\n              value={selectedPermission}\n              onChange={(value) => setSelectedPermission(value)}\n              withAsterisk\n              required\n            />\n          )}\n        </td>\n        <td>\n          <Switch\n            onClick={() => deactivateMappingOnClick(row.id)}\n            checked={row.isactive == \"active\"}\n            color=\"teal\"\n            onLabel=\"ACTIVE\"\n            offLabel=\"DISABLE\"\n          />\n        </td>\n        <td>{row.created_at}</td>\n      </tr>\n    ))\n    : [];\n\n  const addRow = () => {\n    const newRow = {\n      id: Math.random(), // generate a random id\n      permission: \"\",\n      isactive: \"active\",\n      created_at: formatDate(new Date()),\n    };\n    setTableData([...tableData, newRow]);\n    setAdding(true);\n  };\n\n  const handleAssignPermission = () => {\n    dispatch(\n      createRolesPermissionMapping({\n        roleId: curr_user.roleId,\n        permissionId: selectedPermission,\n        userId: curr_user.id,\n      }),\n    );\n    dispatch(getAllRolesPermissionsMappings());\n    showNotification(\"added permission successfully\");\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {console.log(curr_user)}\n      <Modal\n        opened={isModalOpen}\n        title=\"User Actions\"\n        onClose={handleModalClose}\n        overlayProps={{\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[9]\n              : theme.colors.gray[2],\n          opacity: 0.55,\n          blur: 3,\n        }}\n        size={\"lg\"}\n      >\n        <Grid>\n          <Grid.Col span={2}>\n            <Avatar\n              src={null}\n              alt=\"no image here\"\n              color=\"indigo\"\n              radius=\"0\"\n              size={50}\n            />\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Name:\n              </Text>{\" \"}\n              {curr_user.email}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={5}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Role:\n              </Text>{\" \"}\n              {curr_user.role}\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={8}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Address:\n              </Text>{\" \"}\n              123/street,Lorem ipsume Lorem ipsumeLorem ipsume\n            </Text>\n          </Grid.Col>\n          <Grid.Col\n            span={4}\n            style={{ borderLeft: \"1px solid #ccc\", borderRadius: \"4px\" }}\n          >\n            <Text>\n              <Text c=\"#4E70EA\" fw={700}>\n                Mobile:\n              </Text>{\" \"}\n              987654321\n            </Text>\n          </Grid.Col>\n        </Grid>\n\n        <Grid>\n          {/* <Grid.Col span={8}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User Permissions\n            </Title>\n            <Space h=\"xl\" />\n            <Table\n              miw={300}\n              striped\n              withBorder\n              highlightOnHover\n              withColumnBorders\n            >\n              <thead\n                className={cx(classes.header, { [classes.scrolled]: scrolled })}\n              >\n                <tr>\n                  <th>\n                    <Text color=\"white\">Permission</Text>{\" \"}\n                  </th>\n                  <th>\n                    <Text color=\"white\">Status</Text>\n                  </th>\n                  <th>\n                    <Text color=\"white\">Created At</Text>{\" \"}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Space h=\"xl\" />\n            {!adding && (\n              <Button\n                style={{ backgroundColor: \"black\", fontColor: \"white\" }}\n                onClick={addRow}\n              >\n                Add Permission\n              </Button>\n            )}\n            {adding && (\n              <Button color=\"teal\" onClick={handleAssignPermission}>\n                Save\n              </Button>\n            )}\n          </Grid.Col> */}\n          <Grid.Col span={12}>\n            <Space h=\"xl\" />\n            <Title order={4} c=\"#4E70EA\">\n              User activity\n            </Title>\n            <Space h=\"xl\" />\n            <Timeline active={1} bulletSize={24} lineWidth={2}>\n              <Timeline.Item\n                bullet={<IconGitBranch size={12} />}\n                title=\"User Created\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created at {formatDate(new Date())}{\" \"}\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  2 hours ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Created Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; created new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n\n              <Timeline.Item\n                bullet={<IconGitCommit size={12} />}\n                title=\"Closed Camapign\"\n              >\n                <Text color=\"dimmed\" size=\"sm\">\n                  {curr_user.email}&apos; closed new campaign\n                  <Text variant=\"link\" component=\"span\" inherit></Text>\n                </Text>\n                <Text size=\"xs\" mt={4}>\n                  52 minutes ago\n                </Text>\n              </Timeline.Item>\n            </Timeline>\n          </Grid.Col>\n        </Grid>\n      </Modal >\n    </>\n  );\n};\n\nexport default UserActionModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Text,\n  Select,\n  Button,\n  TextInput,\n  SimpleGrid,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { DateInput } from \"@mantine/dates\";\nimport { IconCalendar } from \"@tabler/icons-react\";\nimport StyledTextInput from \"../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledDateInput from \"../../StyledComponents/StyledDateInput\";\n\nconst EditUserInfoModal = ({\n  isModalOpen,\n  handleModalClose,\n  handleEditUser,\n  userData, // Pass the user data to prepopulate the modal\n  rolesData,\n}) => {\n  // Initialize userDetails with default values if it's null\n  const initialUserDetails = userData || {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobile: \"\",\n    // Add other properties as needed\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUserDetails);\n\n  // Ensure userDetails is updated when userData changes\n  useEffect(() => {\n    setUserDetails(initialUserDetails);\n  }, [initialUserDetails]);\n\n  return (\n    <Modal\n      opened={isModalOpen}\n      onClose={handleModalClose}\n      title=\"Edit User\"\n      style={{ content: { maxHeight: \"80vh\" } }}\n    >\n      <SimpleGrid cols={2}>\n        <StyledTextInput\n          placeholder=\"First Name\"\n          label=\"First Name\"\n          value={userDetails.firstname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, firstname: event.target.value })\n          }\n          withAsterisk\n          required\n        />\n\n        <StyledTextInput\n          placeholder=\"Last Name\"\n          label=\"Last Name\"\n          value={userDetails.lastname}\n          onChange={(event) =>\n            setUserDetails({ ...userDetails, lastname: event.target.value })\n          }\n          withAsterisk\n        />\n      </SimpleGrid>\n\n      <StyledDateInput\n        placeholder={\"Date Of Birth\"}\n        label={\"Date Of Birth\"}\n        rightSection={\n          <ActionIcon variant={\"subtle\"}>\n            <IconCalendar />\n          </ActionIcon>\n        }\n        withAsterisk\n        maxDate={new Date()}\n      />\n\n      <StyledTextInput\n        placeholder=\"Email\"\n        label=\"Email\"\n        value={userDetails.email}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, email: event.target.value })\n        }\n        withAsterisk\n        required\n        type=\"email\"\n      />\n\n      <StyledTextInput\n        placeholder=\"Mobile\"\n        label=\"Mobile\"\n        type={\"number\"}\n        value={userDetails.mobile}\n        onChange={(event) =>\n          setUserDetails({ ...userDetails, mobile: event.target.value })\n        }\n        withAsterisk\n      />\n\n      <StyledTextInput\n        placeholder=\"Pincode\"\n        label=\"Pincode\"\n        type={\"number\"}\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"State\"\n        label=\"State\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"City\"\n        label=\"City\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledTextInput\n        placeholder=\"Address\"\n        label=\"Address\"\n        // value={userDetails.mobile}\n        withAsterisk\n        // onChange={(event) =>\n        //   setUserDetails({ ...userDetails, mobile: event.target.value })\n        // }\n      />\n\n      <StyledSelect\n        label=\"Role\"\n        placeholder=\"Select Role\"\n        data={rolesData}\n        value={userDetails.role}\n        onChange={(value) => setUserDetails({ ...userDetails, role: value })}\n        withAsterisk\n        required\n      />\n      {/* Add other fields here as needed */}\n\n      <StyledButton\n        className=\"mt-4\"\n        // style={{\n        //     backgroundColor: !(\n        //         !userDetails.firstname ||\n        //         !userDetails.lastname ||\n        //         !userDetails.email ||\n        //         !userDetails.role\n        //     )\n        //         ? \"#4E70EA\"\n        //         : \"grey\",\n        // }}\n        onClick={() => handleEditUser(userDetails)}\n        disabled={\n          !userDetails.firstname ||\n          !userDetails.lastname ||\n          !userDetails.email ||\n          !userDetails.role\n        }\n      >\n        Save Changes\n      </StyledButton>\n    </Modal>\n  );\n};\n\nexport default EditUserInfoModal;\n","import {\n  ActionIcon,\n  Button,\n  createStyles,\n  Flex,\n  LoadingOverlay,\n  rem,\n  Text,\n} from \"@mantine/core\";\nimport { notifications } from \"@mantine/notifications\";\nimport { IconSettings } from \"@tabler/icons-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, getUsers } from \"../../redux/authSlice\";\nimport {\n  getAllPermissions,\n  getAllRoles,\n  getAllRolesPermissionsMappings,\n} from \"../../redux/rolesPermissionSlice\";\nimport StyledButton from \"../../StyledComponents/StyledButton\";\nimport StyledTable from \"../../StyledComponents/StyledTable\";\nimport UserActionModal from \"./UserActionModal\";\nimport EditUserInfoModal from \"./EditUserInfoModal\";\nimport { Link } from \"react-router-dom\";\n\nfunction formatDate(dateString) {\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction showNotification(prop) {\n  notifications.show({\n    title: \"Success\",\n    message: prop,\n    styles: (theme) => ({\n      root: {\n        backgroundColor: \"#4E70EA\",\n        borderColor: theme.colors.blue[6],\n\n        \"&::before\": { backgroundColor: theme.white },\n      },\n\n      title: { color: theme.white },\n      description: { color: theme.white },\n      closeButton: {\n        color: theme.white,\n        \"&:hover\": { backgroundColor: theme.colors.blue[7] },\n      },\n    }),\n  });\n}\n\nconst Users = () => {\n  const useStyles = createStyles((theme) => ({\n    header: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#F3F6FF\",\n      fontColor: \"red\",\n      transition: \"box-shadow 150ms ease\",\n\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderBottom: `${rem(1)} solid ${theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n          }`,\n      },\n    },\n\n    scrolled: {\n      boxShadow: theme.shadows.lg,\n    },\n  }));\n\n  const { classes, cx } = useStyles();\n  const [isAddUserModalOpen, setAddUserModalOpen] = useState(false);\n  const [isUserActionModalOpen, setUserActionModalOpen] = useState(false);\n  const [isEditUserModalOpen, setEditUserModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  const dispatch = useDispatch();\n  const { rolesPermissions, roles, permissions } = useSelector(\n    (state) => state.rolePermission,\n  );\n  const { users } = useSelector((state) => state.auth);\n  const userPermissionsDict = {};\n  const [userDetails, setUserDetails] = useState({\n    firstname: null,\n    lastname: null,\n    email: null,\n    role: null,\n    mobile: null,\n  });\n  const [curr_user, setCurrUser] = useState(null);\n\n  for (const permission of rolesPermissions) {\n    const {\n      userId,\n      permission: { name },\n    } = permission;\n\n    if (userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId].push(name);\n    } else {\n      userPermissionsDict[userId] = [name];\n    }\n  }\n\n  const allUserIds = users?.map((user) => user.id) || [];\n\n  for (const userId of allUserIds) {\n    if (!userPermissionsDict.hasOwnProperty(userId)) {\n      userPermissionsDict[userId] = [];\n    }\n  }\n\n  const handleUserActionModal = (selected_user) => {\n    setCurrUser(selected_user);\n    setUserActionModalOpen(true);\n  };\n\n  const handleEditUserModal = (selected_user) => {\n    setEditingUser(selected_user);\n    setEditUserModalOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(getAllRolesPermissionsMappings());\n    dispatch(getUsers());\n    dispatch(getAllPermissions());\n    dispatch(getAllRoles());\n  }, []);\n\n  const userRolesPermissions =\n    curr_user &&\n    rolesPermissions.filter((item) => item.userId === curr_user.id);\n  const userPermissionsOptions = [];\n  if (curr_user) {\n    permissions.map((data) => {\n      if (!userPermissionsDict[curr_user.id].includes(data.name)) {\n        userPermissionsOptions.push({ value: data.id, label: data.name });\n      }\n    });\n  }\n\n  const initialData =\n    Object.keys(userPermissionsDict).length > 0\n      ? users.map((data) => ({\n        id: data.id,\n        roleId: data.roleId,\n        email: data.email,\n        isactive: \"active\",\n        role: data.role.name,\n        created_at: formatDate(data.created_at),\n      }))\n      : [];\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email.split(\"@\").length > 0 ? row.original.email.split(\"@\")[0] : \"\"}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Email\",\n      accessorKey: \"email\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"email\") {\n            handleUserActionModal(row.original);\n          }\n        };\n        return (\n          <Text variant=\"light\" onClick={handleActionClick}>\n            {row.original.email}\n          </Text>\n        );\n      },\n    },\n    {\n      header: \"Role\",\n      accessorKey: \"role\",\n    },\n    {\n      header: \"Status\",\n      accessorKey: \"isactive\",\n      Cell: ({ value }) => (\n        <Button color=\"teal\" size=\"xs\" compact>\n          active\n        </Button>\n      ),\n    },\n    {\n      header: \"Created At\",\n      accessorKey: \"created_at\",\n    },\n    {\n      header: \"Action\",\n      accessorKey: \"action\",\n      Cell: ({ row, column }) => {\n        const handleActionClick = (e) => {\n          e.preventDefault();\n          if (column.id === \"action\") {\n            handleEditUserModal(row.original);\n          }\n        };\n\n        return (\n          <ActionIcon variant=\"light\" onClick={handleActionClick}>\n            <IconSettings size=\"1rem\" />\n          </ActionIcon>\n        );\n      },\n    },\n  ];\n\n  const rolesData =\n    roles &&\n    Array.isArray(roles) &&\n    roles.map((role) => ({\n      value: role.id,\n      label: role.name,\n    }));\n\n  const handleModalClose = () => {\n    if (isAddUserModalOpen) setAddUserModalOpen(false);\n    if (isUserActionModalOpen) setUserActionModalOpen(false);\n  };\n\n  const handleAddUserModal = () => {\n    console.log(\"hi\");\n    setAddUserModalOpen(true);\n  };\n\n  const handleAddUser = async () => {\n    try {\n      const userData = {\n        email: userDetails.email,\n        mobile: userDetails.mobile,\n        fullname: `${userDetails.firstname} ${userDetails.lastname}`,\n        roleId: userDetails.role,\n      };\n      await dispatch(addUser(userData));\n      await dispatch(getAllRolesPermissionsMappings());\n      setAddUserModalOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEditUser = (updatedUserData) => {\n    setEditUserModalOpen(false);\n    showNotification(\"User data updated successfully\");\n  };\n\n  if (!users || users.length === 0) {\n    return (\n      <LoadingOverlay\n        visible\n        overlayBlur={2}\n        overlayColor={\"#F3F6FF\"}\n        loaderProps={{\n          color: \"#0d5ff9\",\n          size: \"xl\",\n          variant: \"dots\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <StyledTable\n          columns={columns}\n          data={initialData}\n          onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        // topProps={() => (\n        //   <Flex>\n        //     <StyledButton compact onClick={handleAddUserModal}>\n        //       + Create User\n        //     </StyledButton>\n        //   </Flex>\n        // )}\n        />\n        {isUserActionModalOpen && (\n          <UserActionModal\n            isModalOpen={isUserActionModalOpen}\n            handleModalClose={handleModalClose}\n            curr_user={curr_user}\n            userRolesPermissions={userRolesPermissions}\n            userPermissionsOptions={userPermissionsOptions}\n            classes={classes}\n            cx={cx}\n          />\n        )}\n        <EditUserInfoModal\n          isModalOpen={isEditUserModalOpen}\n          handleModalClose={() => setEditUserModalOpen(false)}\n          handleEditUser={handleEditUser} // Pass a function to handle the edit action\n          userData={editingUser} // Pass the user data to prepopulate the modal\n          rolesData={rolesData} // Pass the roles data as needed\n        />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Avatar,\n  Center,\n  Text,\n  ActionIcon,\n  Group,\n  Flex,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { DateInput } from \"@mantine/dates\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledDateInput from \"../../../StyledComponents/StyledDateInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport { useSelector } from \"react-redux\";\n\nconst MyProfile = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const { user } = useSelector((state) => state.auth);\n\n  const form = useForm({\n    initialValues: {\n      emailId: \"\",\n      mobileNo: \"\",\n      dateOfBirth: \"\",\n      image: null,\n    },\n    validate: {\n      emailId: (value) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(value) ? null : \"Invalid email\";\n      },\n      mobileNo: (value) => {\n        if (!/^[6789]/.test(value))\n          return \"Mobile number should start with 6, 7, 8, or 9\";\n        if (value.length !== 10) return \"Mobile number should be 10 digits\";\n        if (parseInt(value, 10).toString() !== value)\n          return \"Mobile number should only contain numbers\";\n        return null;\n      },\n      dateOfBirth: (value) => {\n        if (!value) return \"Date of Birth is required\";\n        const enteredDate = new Date(value);\n        const today = new Date();\n        return enteredDate >= today\n          ? \"Date of Birth should be before today's date\"\n          : null;\n      },\n      image: (value) => {\n        if (!value) return null;\n        if (value.size > 5 * 1024 * 1024)\n          return \"File size should be less than 5MB\";\n        const validTypes = [\"image/jpeg\", \"image/png\"];\n        if (!validTypes.includes(value.type))\n          return \"Invalid file type. Only JPEG or PNG is allowed\";\n        return null;\n      },\n    },\n    validateInputOnChange: true,\n  });\n\n  const imageInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.size > 5 * 1024 * 1024 ||\n        ![\"image/jpeg\", \"image/png\"].includes(file.type)\n      ) {\n        showNotification({\n          type: \"error\",\n          title: `Invalid Image`,\n          message: `Please upload a valid JPEG or PNG image less than 5MB.`,\n        });\n      } else {\n        form.setFieldValue(\"image\", file);\n        const url = URL.createObjectURL(file);\n        setImagePreview(url);\n        showNotification({\n          type: \"success\",\n          title: `Image uploaded successfully!`,\n          message: `Image is set for your profile. Please save`,\n        });\n      }\n    }\n  };\n\n  const handleDeleteImage = () => {\n    setImagePreview(null);\n    form.setFieldValue(\"image\", null);\n    imageInputRef.current.value = null;\n    showNotification({\n      type: \"info\",\n      title: `Image Removed`,\n      message: `Profile image has been removed.`,\n    });\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile saved successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            My Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <Center>\n            <Stack>\n              <Center>\n                <Title size={30} c=\"#0d5ff9\">\n                  {user?.email?.split(\"@\")[0]}\n                </Title>\n              </Center>\n              {imagePreview && (\n                <Avatar size={\"xl\"} src={imagePreview} radius=\"xl\" />\n              )}\n              {imagePreview && (\n                <Center>\n                  <ActionIcon\n                    onClick={handleDeleteImage}\n                    sx={{\n                      color: \"#0d5ff9\",\n                      \"&:hover\": {\n                        backgroundColor: \"#F3F6FF\",\n                      },\n                    }}\n                  >\n                    <IconX />\n                  </ActionIcon>\n                </Center>\n              )}\n            </Stack>\n          </Center>\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Button\n              variant=\"outline\"\n              compact\n              styles={{\n                root: {\n                  borderColor: \"#0d5ff9\",\n                  color: \"#0d5ff9\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F3F6FF\",\n                    color: \"#0d5ff9\",\n                  },\n                },\n              }}\n              onClick={() => imageInputRef.current.click()}\n            >\n              <Text c={\"dimmed\"}>Upload Image</Text>\n            </Button>\n            <Stack mt={30}>\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Email ID\"\n                  placeholder={user?.email}\n                  {...form.getInputProps(\"emailId\")}\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <Group>\n                <StyledTextInput\n                  sx={{\n                    flexGrow: 1,\n                  }}\n                  label=\"Mobile No\"\n                  placeholder=\"9876543210\"\n                  {...form.getInputProps(\"mobileNo\")}\n                  inputMode=\"numeric\"\n                  disabled\n                />\n                <ActionIcon mt={15} c={\"green\"}>\n                  <IconCheck />\n                </ActionIcon>\n              </Group>\n\n              <StyledDateInput\n                valueFormat=\"DD MMM, YYYY\"\n                maxDate={new Date()}\n                label=\"Date of Birth\"\n                {...form.getInputProps(\"dateOfBirth\")}\n              />\n\n              <input\n                type=\"file\"\n                ref={imageInputRef}\n                style={{ display: \"none\" }}\n                onChange={handleImageUpload}\n                accept=\".jpeg, .jpg, .png\"\n              />\n              <StyledButton type=\"submit\">Save</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MyProfile;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  Divider,\n  Stack,\n  Title,\n  TextInput,\n  Select,\n  Group,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledTextInput from \"../../../StyledComponents/StyledTextInput\";\nimport StyledSelect from \"../../../StyledComponents/StyledSelect\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\n\nconst EditProfile = () => {\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      address: \"\",\n      pincode: \"\",\n      state: \"\",\n      city: \"\",\n    },\n  });\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n    showNotification({\n      type: \"default\",\n      title: `Profile updated successfully!`,\n      message: `Your profile details have been updated.`,\n    });\n  };\n\n  return (\n    <Box>\n      <Card shadow=\"lg\" p={30} radius={\"md\"}>\n        <Stack>\n          <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n            Edit Profile\n          </Title>\n          <Divider c=\"#0d5ff9\" />\n          <form onSubmit={form.onSubmit(handleFormSubmit)}>\n            <Stack mt={30}>\n              <StyledTextInput\n                label=\"Name\"\n                placeholder=\"Enter your name\"\n                {...form.getInputProps(\"name\")}\n              />\n\n              <Group grow>\n                <StyledTextInput\n                  label=\"Pincode\"\n                  placeholder=\"Enter your pincode\"\n                  {...form.getInputProps(\"pincode\")}\n                  inputMode=\"numeric\"\n                />\n                <StyledSelect\n                  placeholder=\"Select your state\"\n                  label=\"State\"\n                  data={[]}\n                  {...form.getInputProps(\"state\")}\n                />\n\n                <StyledSelect\n                  placeholder=\"Select your city\"\n                  label=\"City\"\n                  data={[]}\n                  {...form.getInputProps(\"city\")}\n                />\n              </Group>\n              <StyledTextInput\n                w={\"100%\"}\n                label=\"Address\"\n                placeholder=\"Enter your address\"\n                {...form.getInputProps(\"address\")}\n              />\n\n              <StyledButton type=\"submit\">Update Profile</StyledButton>\n            </Stack>\n          </form>\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditProfile;\n","import { Box, Grid } from \"@mantine/core\";\nimport MyProfile from \"./MyProfile\";\nimport EditProfile from \"./EditProfile\";\n\nconst MyAccount = () => {\n  return (\n    <Box>\n      <Grid>\n        <Grid.Col span={5}>\n          <MyProfile />\n        </Grid.Col>\n        <Grid.Col span={7}>\n          <EditProfile />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MyAccount;\n","import React, { useEffect } from \"react\";\nimport {\n  PasswordInput,\n  Button,\n  Stack,\n  Title,\n  Card,\n  Divider,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport StyledPasswordInput from \"../../../StyledComponents/StyledPasswordInput\";\nimport StyledButton from \"../../../StyledComponents/StyledButton\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ChangePassword = ({ onPasswordChange, canSave }) => {\n  const form = useForm({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validate: {\n      confirmPassword: (value, values) =>\n        value !== values.newPassword ? \"Password does not match\" : null,\n    },\n  });\n\n  const { user } = useSelector((state) => state.auth);\n\n  const newPassword = form.values.newPassword;\n\n  useEffect(() => {\n    onPasswordChange(newPassword);\n  }, [newPassword, onPasswordChange]);\n\n  const handleSubmit = async (values) => {\n    try {\n      if (canSave) {\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/change-password`,\n          {\n            email: user.email,\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword,\n          },\n        );\n\n        if (response.status === 200) {\n          showNotification({\n            type: \"success\",\n            title: `Password changed successfully!`,\n            message: `Your password has been updated.`,\n          });\n        } else {\n          // handle other status codes if required\n          showNotification({\n            type: \"error\",\n            title: `Password change failed!`,\n            message: response.data.message || \"Unexpected error occurred\",\n          });\n        }\n      } else {\n        showNotification({\n          type: \"warning\",\n          title: `Password change failed!`,\n          message: `Ensure all validations are met.`,\n        });\n      }\n    } catch (error) {\n      showNotification({\n        type: \"error\",\n        title: `Password change failed!`,\n        message: error.response?.data.message || \"Unexpected error occurred\",\n      });\n    }\n  };\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Change Password\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack mt={30}>\n            <StyledPasswordInput\n              label=\"Old Password\"\n              {...form.getInputProps(\"oldPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Set New Password\"\n              {...form.getInputProps(\"newPassword\")}\n            />\n\n            <StyledPasswordInput\n              label=\"Confirm Password\"\n              {...form.getInputProps(\"confirmPassword\")}\n            />\n\n            <StyledButton type=\"submit\" disabled={!canSave}>\n              Save\n            </StyledButton>\n          </Stack>\n        </form>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Checkbox,\n  Title,\n  Card,\n  Stack,\n  Divider,\n  Group,\n  Text,\n} from \"@mantine/core\";\n\nconst PasswordConstraints = ({ password = \"\", onValidationChange }) => {\n  const isValid = (condition) => (condition ? \"green\" : \"red\");\n\n  useEffect(() => {\n    const validations = [\n      password.length >= 8,\n      /[A-Z]/.test(password),\n      /[a-z]/.test(password),\n      /[0-9]/.test(password),\n      /[^A-Za-z0-9\\s]/.test(password),\n    ];\n\n    onValidationChange(validations.every((v) => v));\n  }, [password, onValidationChange]);\n\n  return (\n    <Card shadow=\"lg\" p={30} radius={\"md\"}>\n      <Stack>\n        <Title mb={10} size={\"lg\"} c=\"#0d5ff9\">\n          Password Constraints\n        </Title>\n        <Divider c=\"#0d5ff9\" />\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(password.length >= 8)}\n            checked={password.length >= 8}\n            label={\n              <Text c={isValid(password.length >= 8)}>\n                Your password must be at least 8 characters in length\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[A-Z]/.test(password))}\n            checked={/[A-Z]/.test(password)}\n            label={\n              <Text c={isValid(/[A-Z]/.test(password))}>\n                At least 1 Uppercase letters [A-Z]\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[a-z]/.test(password))}\n            checked={/[a-z]/.test(password)}\n            label={\n              <Text c={isValid(/[a-z]/.test(password))}>\n                At least 1 Lowercase letters (a-z)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[0-9]/.test(password))}\n            checked={/[0-9]/.test(password)}\n            label={\n              <Text c={isValid(/[0-9]/.test(password))}>\n                At least 1 Number (0-9)\n              </Text>\n            }\n          />\n        </Group>\n        <Group>\n          <Checkbox\n            styles={{\n              input: {\n                border: \"1px solid #0d5ff9\",\n              },\n            }}\n            color={isValid(/[^A-Za-z0-9\\s]/.test(password))}\n            checked={/[^A-Za-z0-9\\s]/.test(password)}\n            label={\n              <Text c={isValid(/[^A-Za-z0-9\\s]/.test(password))}>\n                At least 1 Symbols or special characters (excluding space)\n              </Text>\n            }\n          />\n        </Group>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default PasswordConstraints;\n","import { Box, Card, Grid } from \"@mantine/core\";\nimport React, { useState } from \"react\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordConstraints from \"./PasswordConstraints\";\n\nconst Security = () => {\n  const [password, setPassword] = useState(\"\");\n  const [validationsPassed, setValidationsPassed] = useState(false);\n\n  return (\n    <Box>\n      <Grid grow>\n        <Grid.Col span={6}>\n          <ChangePassword\n            onPasswordChange={setPassword}\n            canSave={validationsPassed}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <PasswordConstraints\n            password={password}\n            onValidationChange={setValidationsPassed}\n          />\n        </Grid.Col>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Security;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchCustomerProfileData } from \"../../redux/customerProfileSlice\"; // Ensure correct path\n\nconst CustomerBarChart = ({ source }) => {\n  console.log(source);\n  const dispatch = useDispatch();\n\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchCustomerProfileData(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.customerProfileTool.data);\n  const status = useSelector((state) => state.customerProfileTool.status);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"customers\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default CustomerBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport CustomerBarChart from \"./CustomerBarChart\";\nimport { useState } from \"react\";\n\nconst CustomerProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Customer Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <CustomerBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CustomerProfileAnalysis;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { fetchProfileCount } from \"../../redux/profileAnalysisSlice\"; // Ensure correct path\n\nconst ProfileAnalysisBarChart = ({ source }) => {\n  const dispatch = useDispatch();\n  console.log(\"source for profiles\", source);\n  // Fetching data on component mount\n  useEffect(() => {\n    dispatch(fetchProfileCount(source));\n  }, [dispatch, source]);\n\n  // Get data from the Redux store\n  const chartData = useSelector((state) => state.profileCount.data);\n  const status = useSelector((state) => state.profileCount.status);\n  console.log(\"Chart data for profiles\", chartData);\n\n  // If data is still loading, display a loading indicator (you can adjust this as per your requirements)\n  if (status === \"loading\") return <div>Loading...</div>;\n\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Entities\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"profiles\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileAnalysisBarChart;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfileAnalysisBarChart from \"./ProfileAnalysisBarChart\";\n\nconst ProfileAnalysis = () => {\n  const [selectedSource, setSelectedSource] = useState(\"All\");\n  return (\n    <Card shadow={\"md\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile Analysis\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={3}>\n          <Stack>\n            <StyledSelect\n              label={\"Source(s)\"}\n              placeholder={\"All\"}\n              data={[\"All\", \"Call\", \"homecare\", \"eportal\"]}\n              value={selectedSource}\n              onChange={setSelectedSource}\n            />\n            {/* <Group>\n              <StyledSelect\n                label={\"Year\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n              <StyledSelect\n                label={\"Month\"}\n                placeholder={\"All\"}\n                data={[\"Test\"]}\n              />\n            </Group> */}\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={9}>\n          <ProfileAnalysisBarChart source={selectedSource} />\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileAnalysis;\n","import { Box } from \"@mantine/core\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Tech Enthusiastic\",\n    detractors: 4000,\n    promotors: 2400,\n  },\n  {\n    name: \"Foodies\",\n    detractors: 3000,\n    promotors: 2210,\n  },\n  {\n    name: \"Auto Lovers\",\n    detractors: 2000,\n    promotors: 2290,\n  },\n  {\n    name: \"Gadget Freaks\",\n    detractors: 2780,\n    promotors: 2000,\n  },\n  {\n    name: \"Sports Fans\",\n    detractors: 1890,\n    promotors: 2181,\n  },\n  {\n    name: \"Musicophile\",\n    detractors: 2390,\n    promotors: 2500,\n  },\n  {\n    name: \"Avid Traveller\",\n    detractors: 3490,\n    promotors: 2100,\n  },\n];\n\nconst ProfileBarChart = () => {\n  return (\n    <Box h={\"400px\"} w={\"870px\"} pt={20}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          // width={500}\n          // height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid vertical={false} strokeDasharray=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis\n            label={{\n              value: \"No. of Customers\",\n              angle: -90,\n              position: \"insideLeft\",\n              offset: 0,\n            }}\n          />\n          <Tooltip />\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"top\"\n            align=\"right\"\n            offset={-10}\n            color={\"yellow\"}\n          />\n          <Bar\n            dataKey=\"promotors\"\n            stroke=\"#7366FF\"\n            strokeWidth={2.36}\n            fill=\"#7366FF\"\n            fillOpacity={0.7}\n          />\n          <Bar\n            dataKey=\"detractors\"\n            stroke=\"#F73164\"\n            strokeWidth={2.36}\n            fill=\"#F73164\"\n            fillOpacity={0.7}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfileBarChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box } from \"@mantine/core\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Sector,\n} from \"recharts\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectProfileData,\n  selectRequestBody,\n  selectProfileTypeDemoStats,\n} from \"../../redux/profileDataCardSlice\";\n\n// Predefined colors\nconst COLORS = [\n  \"#FF638499\",\n  \"#36A2EB99\",\n  \"#FFCE5699\",\n  \"#FF999999\",\n  \"#66FF6699\",\n  \"#FF663399\",\n  \"#FFCC3399\",\n  \"#00CCCC99\",\n  \"#CC660099\",\n  \"#6666FF99\",\n  \"#33996699\",\n  \"#FF996699\",\n  \"#FF663399\",\n  \"#CCCC0099\",\n  \"#FFCCCC99\",\n  \"#66999999\",\n  \"#33669999\",\n  \"#99CC3399\",\n  \"#CC333399\",\n  \"#33CCCC99\",\n];\n\nconst RenderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      {/* <text */}\n      {/*   x={cx} */}\n      {/*   y={cy + 120} */}\n      {/*   dy={8} */}\n      {/*   textAnchor=\"middle\" */}\n      {/*   fill={\"black\"} */}\n      {/*   font-family=\"Arial\" */}\n      {/*   font-weight=\"bold\" */}\n      {/*   font-size=\"14px\" */}\n      {/* > */}\n      {/*   {payload.name} */}\n      {/* </text> */}\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        style={{\n          fontSize: 15,\n        }}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${payload.name}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nconst ProfilePieChart = () => {\n  const dispatch = useDispatch();\n  const profileData = useSelector(selectProfileData);\n  const requestBody = useSelector(selectRequestBody);\n  const profileTypeDemoStats = useSelector(selectProfileTypeDemoStats);\n\n  let dataToDisplay = profileData;\n\n  if (\n    requestBody &&\n    requestBody.profileType &&\n    requestBody.demographic &&\n    profileTypeDemoStats[requestBody.profileType]\n  ) {\n    const demoData =\n      profileTypeDemoStats[requestBody.profileType][requestBody.demographic] ||\n      [];\n    dataToDisplay = demoData.map((item, index) => ({\n      name: item[requestBody.demographic],\n      value: item.count,\n      color: COLORS[index % COLORS.length],\n    }));\n    console.log(\"Data to display\", dataToDisplay);\n  }\n\n  const handleMouseEnter = (data, index) => {\n    const name = typeof data.name === \"string\" ? data.name : \"Unknown\";\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const activeIndex = dataToDisplay.findIndex(\n    (item) => item.name === hoveredItem,\n  );\n\n  return (\n    <Box h={300} w={450}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={300} height={400}>\n          <Pie\n            data={dataToDisplay}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            activeIndex={activeIndex}\n            activeShape={RenderActiveShape}\n          >\n            {dataToDisplay.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ProfilePieChart;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n} from \"../../redux/profileDataCardSlice\";\n\nconst Arrow = ({ bgColor = \"#eee\", textColor = \"#333\", text = \"\" }) => {\n  const hoveredItem = useSelector((state) => state.profileDataCard.hoveredItem);\n  const dispatch = useDispatch();\n\n  const isHovered = hoveredItem === text;\n\n  const transparentBgColor = (color) => {\n    if (isHovered) return color; // No transparency when hovered\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, 1, 1);\n    const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n    return `rgba(${r}, ${g}, ${b}, 0.40)`; // Updated the alpha value for desired transparency\n  };\n\n  return (\n    <svg\n      width=\"150\"\n      height=\"50\"\n      viewBox=\"0 0 250 30\"\n      onMouseEnter={() => dispatch(setHoveredItem(text))}\n      onMouseLeave={() => dispatch(clearHoveredItem())}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Arrow Body (Transparent Section) */}\n      <polygon\n        points=\"240,2.5 45,2.5 45,27.5 240,27.5\"\n        fill={transparentBgColor(bgColor)}\n        transform={isHovered ? \"translate(10, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      {/* Arrow Tip (Opaque Section) */}\n      <polygon\n        points=\"45,2.5 15,15 45,27.5\"\n        fill={bgColor}\n        transform={isHovered ? \"translate(-15, 0)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      />\n      <text\n        x=\"60%\"\n        y=\"50%\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n        fill={isHovered ? \"#fff\" : textColor}\n        font-family=\"Arial\"\n        font-weight=\"bold\"\n        font-size=\"20px\"\n        transform={isHovered ? \"scale(1.05, 1)\" : \"\"}\n        style={{ transition: \"transform 0.5s\" }}\n      >\n        {text}\n      </text>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","export default __webpack_public_path__ + \"static/media/Avid Traveler.153391f9.png\";","export default __webpack_public_path__ + \"static/media/Fitness Freak.46faf880.png\";","export default __webpack_public_path__ + \"static/media/Foodie.2aa654ef.png\";","export default __webpack_public_path__ + \"static/media/Sports Fan.2152ca0c.png\";","export default __webpack_public_path__ + \"static/media/Techie.4d48204f.png\";","import AvidTraveler from \"./Avid Traveler.png\";\nimport FitnessFreak from \"./Fitness Freak.png\";\nimport Foodie from \"./Foodie.png\";\nimport SportsFan from \"./Sports Fan.png\";\nimport Techie from \"./Techie.png\";\nimport AutoLover from \"./Auto Lover.png\";\nimport Musicophile from \"./Musicophile.png\";\nimport GadgetsFreaks from \"./Gadgets Freaks.png\";\nimport AddProfile from \"./AddProfile.png\";\n\nexport default {\n  \"Avid Traveller\": AvidTraveler,\n  \"Auto Lover\": AutoLover,\n  Musicophile: Musicophile,\n  \"Gadgets Freaks\": GadgetsFreaks,\n  \"Fitness Freak\": FitnessFreak,\n  Foodie: Foodie,\n  \"Sports Fan\": SportsFan,\n  Techie: Techie,\n  AddProfile: AddProfile,\n};\n","export default __webpack_public_path__ + \"static/media/Auto Lover.176e4ecb.png\";","export default __webpack_public_path__ + \"static/media/Musicophile.4103dd9d.png\";","export default __webpack_public_path__ + \"static/media/Gadgets Freaks.5948795a.png\";","export default __webpack_public_path__ + \"static/media/AddProfile.4fbe8ef9.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setHoveredItem,\n  clearHoveredItem,\n  selectHoveredItem,\n  selectProfileData,\n} from \"../../redux/profileDataCardSlice\";\nimport {\n  Card,\n  Stack,\n  Group,\n  Title,\n  Flex,\n  Text,\n  Avatar,\n  Image,\n} from \"@mantine/core\";\nimport ArrowLabel from \"./ArrowLabel\";\nimport assets from \"./assets\";\n\nconst ProfileDataCard = () => {\n  const dispatch = useDispatch();\n  const hoveredItem = useSelector(selectHoveredItem);\n  const data = useSelector(selectProfileData);\n\n  console.log(\"data from ProfileDataCard\", data);\n\n  const handleMouseEnter = (name) => {\n    dispatch(setHoveredItem(name));\n  };\n\n  const handleMouseLeave = () => {\n    dispatch(clearHoveredItem());\n  };\n\n  const totalValue = data.reduce((acc, cur) => acc + cur.value, 0);\n\n  return (\n    <Card\n      withBorder\n      shadow={\"xl\"}\n      radius={\"md\"}\n      bg={\"#F3F6FF\"}\n      mah={300}\n      sx={{ overflowY: \"auto\", scrollbarColor: \"#0d5ff9\" }}\n    >\n      <Stack>\n        <Group spacing={\"xs\"}>\n          <Title size={\"md\"}>Total</Title>\n          <Title size={\"md\"} c={\"#0d5ff9\"}>\n            {totalValue}\n          </Title>\n        </Group>\n        {data.map((entry, index) => (\n          <Group\n            spacing={0}\n            onMouseEnter={() => handleMouseEnter(entry.name)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <Group spacing={0}>\n              <Avatar\n                key={entry.src}\n                src={assets[entry.src]}\n                alt=\"type\"\n                sx={{\n                  transition: \"transform 0.3s ease\",\n                  transform:\n                    hoveredItem === entry.name ? \"scale(1.1)\" : \"scale(1)\",\n                  backgroundImage:\n                    hoveredItem === entry.name\n                      ? \"radial-gradient(#000000 20% ,#0d5ff9)\"\n                      : \"none\",\n                }}\n                radius={\"xl\"}\n                size={\"lg\"}\n              />\n              <ArrowLabel\n                key={entry.name}\n                text={entry.name}\n                bgColor={entry.color}\n                textColor={\"black\"}\n              />\n            </Group>\n            <Text>{entry.value}</Text>\n          </Group>\n        ))}\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ProfileDataCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Flex,\n  Text,\n  Grid,\n  Center,\n  ActionIcon,\n  Stack,\n  Loader,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfileData } from \"../../redux/profileDataCardSlice.js\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport ProfilePieChart from \"./PofilePieChart\";\nimport ProfileDataCard from \"./ProfileDataCard\";\n\nconst ProfileTypeAnalysis = () => {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.profileDataCard.status);\n  const displayAndColorMappings = useSelector(\n    (state) => state.profileDataCard.displayAndColorMappings,\n  );\n\n  const [selectedProfile, setSelectedProfile] = useState(\"all\");\n  const [selectedDemographic, setSelectedDemographic] = useState(\"all\");\n\n  useEffect(() => {\n    console.log(\"dispatching\");\n    dispatch(fetchProfileData({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedProfile === \"all\" && selectedDemographic === \"all\") {\n      dispatch(fetchProfileData({}));\n    } else if (selectedProfile !== \"all\" && selectedDemographic !== \"all\") {\n      dispatch(\n        fetchProfileData({\n          profileType: selectedProfile,\n          demographic: selectedDemographic,\n        }),\n      );\n    }\n  }, [selectedProfile, selectedDemographic, dispatch]);\n\n  const profileOptions = [\n    { value: \"all\", label: \"All\" },\n    ...Object.entries(displayAndColorMappings).map(\n      ([key, { displayName }]) => ({ value: key, label: displayName }),\n    ),\n  ];\n\n  const demographicOptions = [\n    { value: \"all\", label: \"All\" },\n    { value: \"ageRange\", label: \"Age\" },\n    { value: \"gender\", label: \"Gender\" },\n  ];\n\n  return (\n    <Card shadow={\"lg\"} radius={\"md\"}>\n      <Box>\n        <Flex justify={\"space-between\"}>\n          <Center>\n            <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n              Profile\n            </Text>\n          </Center>\n          <Center>\n            {/* <Link to={\"/campaign\"}> */}\n            <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n              <IconArrowRight />\n            </ActionIcon>\n            {/* </Link> */}\n          </Center>\n        </Flex>\n      </Box>\n      <Grid grow>\n        <Grid.Col span={4}>\n          <Stack>\n            <StyledSelect\n              disabled={status === \"loading\"}\n              label={\"Profile\"}\n              placeholder={\"Select Profile(s)\"}\n              data={profileOptions}\n              onChange={(value) => setSelectedProfile(value)}\n            />\n            <StyledSelect\n              disabled={status === \"loading\"}\n              label={\"Demographics\"}\n              placeholder={\"Select Main Demographics\"}\n              data={demographicOptions}\n              onChange={(value) => setSelectedDemographic(value)}\n            />\n          </Stack>\n        </Grid.Col>\n        <Grid.Col span={4}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfilePieChart />\n            )}\n          </Center>\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <Center>\n            {status === \"loading\" ? (\n              <Loader c=\"5c0ff2\" size=\"lg\" />\n            ) : (\n              <ProfileDataCard />\n            )}\n          </Center>\n        </Grid.Col>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProfileTypeAnalysis;\n","import {\n  ActionIcon,\n  Box,\n  Card,\n  Center,\n  Flex,\n  Grid,\n  Group,\n  Stack,\n  Text,\n} from \"@mantine/core\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport StyledSelect from \"../../StyledComponents/StyledSelect\";\nimport BarStackedView from \"../HomeDashBoard/BarStackedCampaign\";\nimport AreaChartSample from \"./AreaChart\";\nimport CustomerProfileAnalysis from \"./CustomerProfileAnalysis\";\nimport ProfileAnalysis from \"./ProfileAnalysis\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport ProfileTypeAnalysis from \"./ProfileTypeAnalysis\";\n\nconst Root = () => {\n  return (\n    <Box>\n      <Stack>\n        {/* First Card */}\n        <ProfileTypeAnalysis />\n\n        {/* Second Card */}\n        <CustomerProfileAnalysis />\n\n        {/* Third Card */}\n        <ProfileAnalysis />\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <Box>\n            <Flex justify={\"space-between\"}>\n              <Center>\n                <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}>\n                  Promoters vs Detractors\n                </Text>\n              </Center>\n              <Center>\n                <Link to={\"/campaign\"}>\n                  <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}>\n                    <IconArrowRight />\n                  </ActionIcon>\n                </Link>\n              </Center>\n            </Flex>\n          </Box>\n          <Grid grow>\n            <Grid.Col span={3}>\n              <Stack>\n                <StyledSelect\n                  label={\"Source(s)\"}\n                  placeholder={\"All\"}\n                  data={[\"Test\"]}\n                />\n                <Group>\n                  <StyledSelect\n                    label={\"Year\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                  <StyledSelect\n                    label={\"Month\"}\n                    placeholder={\"All\"}\n                    data={[\"Test\"]}\n                  />\n                </Group>\n              </Stack>\n            </Grid.Col>\n            <Grid.Col span={9}>\n              <ProfileBarChart />\n            </Grid.Col>\n          </Grid>\n        </Card>\n\n        {/* Fourth Card */}\n        <Card shadow={\"md\"} radius={\"md\"}>\n          <BarStackedView />\n        </Card>\n\n        {/* Third Card */}\n        {/* <Card shadow={\"md\"} radius={\"md\"}> */}\n        {/*   <Box> */}\n        {/*     <Flex justify={\"space-between\"}> */}\n        {/*       <Center> */}\n        {/*         <Text fw={\"bold\"} c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*           Hourly Hits */}\n        {/*         </Text> */}\n        {/*       </Center> */}\n        {/*       <Center> */}\n        {/*         <Link to={\"/campaign\"}> */}\n        {/*           <ActionIcon c={\"#0d5ff9\"} size={\"sm\"}> */}\n        {/*             <IconArrowRight /> */}\n        {/*           </ActionIcon> */}\n        {/*         </Link> */}\n        {/*       </Center> */}\n        {/*     </Flex> */}\n        {/*   </Box> */}\n        {/*   <Grid grow> */}\n        {/*     <Grid.Col span={3}> */}\n        {/*       <Stack> */}\n        {/*         <StyledSelect */}\n        {/*           label={\"Source(s)\"} */}\n        {/*           placeholder={\"All\"} */}\n        {/*           data={[\"Test\"]} */}\n        {/*         /> */}\n        {/*         <Group> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Year\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*           <StyledSelect */}\n        {/*             label={\"Month\"} */}\n        {/*             placeholder={\"All\"} */}\n        {/*             data={[\"Test\"]} */}\n        {/*           /> */}\n        {/*         </Group> */}\n        {/*       </Stack> */}\n        {/*     </Grid.Col> */}\n        {/*     <Grid.Col span={9}> */}\n        {/*       <BubbleChart /> */}\n        {/*     </Grid.Col> */}\n        {/*   </Grid> */}\n        {/* </Card> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Root;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Box, ColorSchemeProvider, MantineProvider } from \"@mantine/core\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Customers from \"./pages/Customers/Customers\";\nimport Register from \"./pages/Login/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login/Login\";\nimport SimulateCall from \"./components/AgentPages/MobileSimulation\";\nimport AgentEntry from \"./components/AgentPages/AgentEntry\";\nimport Acl from \"./pages/Acl/Acl\";\nimport PermissionDenied from \"./pages/PermissionDenied\";\nimport Analysis from \"./pages/Campaign/components/Analysis/Analysis\";\nimport { Notifications } from \"@mantine/notifications\";\nimport MainAppShell from \"./AppShell/MainAppShell\";\nimport BoardStats from \"./pages/HomeDashBoard/BoardStats\";\nimport Users from \"./pages/Users/Users\";\nimport MyAccount from \"./AppShell/UserMenuItems/MyAccount/MyAccount\";\nimport Security from \"./AppShell/UserMenuItems/SecuritySettings/Security\";\nimport Root from \"./pages/Root/Root\";\nimport { setAuth } from \"./redux/authSlice\";\n// const Analysis = lazy(() =>\n//   import(\"./pages/Campaign/components/Analysis/Analysis\"),\n// );\n// const Customers = lazy(() => import(\"./pages/Customers/Customers\"));\n// const Acl = lazy(() => import(\"./pages/Acl/Acl\"));\n\nfunction App() {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  const toggleColorScheme = (value) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const {\n    rolesPermissionsStatus,\n    rolesPermissions,\n    userPermissions,\n    getAllRolesPermissionsMappingsByUserStatus,\n  } = useSelector((state) => state.rolePermission);\n\n  // if (getAllRolesPermissionsMappingsByUserStatus === \"success\")\n  //   console.log(userPermissions,\"--------------------MY PERMISSIONS\");\n\n  useEffect(() => {\n    if (\"login\" in localStorage) {\n      const login = JSON.parse(localStorage.getItem(\"login\"));\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\n    }\n  }, [isLoggedIn]);\n\n  const navigate = useNavigate();\n\n  function hasPermission(userPermissions, permissionName) {\n    return userPermissions.some(\n      (permission) => permission.name === permissionName,\n    );\n  }\n\n  useEffect(() => {\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\n    if (isLoggedIn) {\n      dispatch(setAuth());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate(\"/login\");\n  //   }\n  // }, [isLoggedIn, navigate]);\n\n  return (\n    <ColorSchemeProvider\n      colorScheme={colorScheme}\n      toggleColorScheme={toggleColorScheme}\n    >\n      <MantineProvider\n        theme={{ colorScheme }}\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <Notifications />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n\n          <MainAppShell>\n            <Routes>\n              {/* {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/\" element={<BoardStats />} />\n              ) : (\n                <PrivateRoute path=\"/\" element={<PermissionDenied />} />\n              )} */}\n              <PrivateRoute path=\"/\" element={<Root />} />\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/customers\" element={<Customers />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/customers\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              <PrivateRoute path=\"/campaign\" element={<Analysis />} />\n              <PrivateRoute path=\"/myAccount\" element={<MyAccount />} />\n              <PrivateRoute path=\"/securitySettings\" element={<Security />} />\n              {hasPermission(userPermissions, \"user_view\") ? (\n                <PrivateRoute path=\"/users\" element={<Users />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/users\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"customer_dashboard\") ? (\n                <PrivateRoute path=\"/dashboard/*\" element={<Dashboard />} />\n              ) : (\n                <PrivateRoute\n                  path=\"/dashboard/*\"\n                  element={<PermissionDenied />}\n                />\n              )}\n              {hasPermission(userPermissions, \"acl\") ? (\n                <PrivateRoute path=\"/acl/*\" element={<Acl />} />\n              ) : (\n                <PrivateRoute path=\"/acl/*\" element={<PermissionDenied />} />\n              )}\n              {/* Agent specific routes not required */}\n              <Route path=\"/mobileSimulation\" element={<SimulateCall />} />\n              <Route path=\"/agent\" element={<AgentEntry />} />\n            </Routes>\n          </MainAppShell>\n        </Routes>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport './i18n.js'\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Suspense fallback=\"...loading\">\n            <App />\n          </Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}